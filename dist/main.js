/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/agnostic-draggable/dist/agnostic-draggable.min.js":
/*!************************************************************************!*\
  !*** ./node_modules/agnostic-draggable/dist/agnostic-draggable.min.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

!function(e,t){ true?t(exports):0}(this,(function(e){"use strict";function t(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function n(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?t(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):t(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,m(r.key),r)}}function o(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function a(e,t,n){return(t=m(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&u(e,t)}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,t){return(u=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function c(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function f(e,t){if(t&&("object"==typeof t||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return c(e)}function h(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=l(e);if(t){var i=l(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return f(this,n)}}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=l(e)););return e}function d(){return(d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=p(e,t);if(r){var i=Object.getOwnPropertyDescriptor(r,t);return i.get?i.get.call(arguments.length<3?e:n):i.value}}).apply(this,arguments)}function g(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,o,a,s=[],l=!0,u=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=o.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){u=!0,i=e}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw i}}return s}}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return v(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return v(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function v(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function m(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}var y="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof __webpack_require__.g?__webpack_require__.g:"undefined"!=typeof self?self:{};function b(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var w=b((function(e){return void 0===e})),x=function(){function e(t){r(this,e),a(this,"container",null),a(this,"constraintPosition",(function(e){return e})),this.container=t}return o(e,[{key:"supported",get:function(){return!1}},{key:"startEvent",get:function(){return this.isResizable()?"resize:start":this.isSortable()?"sort:start":"drag:start"}},{key:"moveEvent",get:function(){return this.isResizable()?"resize:change":this.isSortable()?"sort:move":"drag:move"}},{key:"stopEvent",get:function(){return this.isResizable()?"resize:stop":this.isSortable()?"sort:stop":"drag:stop"}},{key:"isDraggable",value:function(){return this.container&&!w(this.container.dragging)}},{key:"isSortable",value:function(){return this.container&&!w(this.container.items)}},{key:"isResizable",value:function(){return this.container&&!w(this.container.resizing)}},{key:"attach",value:function(){this.supported&&(this.container.on(this.startEvent,this.onDragStart),this.container.on(this.moveEvent,this.onDragMove),this.container.on(this.stopEvent,this.onDragStop))}},{key:"detach",value:function(){this.supported&&(this.container.off(this.startEvent,this.onDragStart),this.container.off(this.moveEvent,this.onDragMove),this.container.off(this.stopEvent,this.onDragStop))}},{key:"onDragStart",value:function(e){}},{key:"onDragMove",value:function(e){}},{key:"onDragStop",value:function(e){}}]),e}();function E(e){return e&&e.ownerDocument||document}function k(e,t){e.classList?e.classList.add(t):function(e,t){return e.classList?!!t&&e.classList.contains(t):-1!==(" "+(e.className.baseVal||e.className)+" ").indexOf(" "+t+" ")}(e,t)||("string"==typeof e.className?e.className=e.className+" "+t:e.setAttribute("class",(e.className&&e.className.baseVal||"")+" "+t))}var S=!("undefined"==typeof window||!window.document||!window.document.createElement),P=!1,O=!1;try{var I={get passive(){return P=!0},get once(){return O=P=!0}};S&&(window.addEventListener("test",I,I),window.removeEventListener("test",I,!0))}catch(e){}function D(e,t){return function(e){var t=E(e);return t&&t.defaultView||window}(e).getComputedStyle(e,t)}var A=/([A-Z])/g;var C=/^ms-/;function L(e){return function(e){return e.replace(A,"-$1").toLowerCase()}(e).replace(C,"-ms-")}var j=/^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;function z(e,t){var n="",r="";if("string"==typeof t)return e.style.getPropertyValue(L(t))||D(e).getPropertyValue(L(t));Object.keys(t).forEach((function(i){var o=t[i];o||0===o?!function(e){return!(!e||!j.test(e))}(i)?n+=L(i)+": "+o+";":r+=i+"("+o+") ":e.style.removeProperty(L(i))})),r&&(n+="transform: "+r+";"),e.style.cssText+=";"+n}function M(e,t,n,r){return function(e,t,n,r){if(r&&"boolean"!=typeof r&&!O){var i=r.once,o=r.capture,a=n;!O&&i&&(a=n.__once||function e(r){this.removeEventListener(t,e,o),n.call(this,r)},n.__once=a),e.addEventListener(t,a,P?r:o)}e.addEventListener(t,n,r)}(e,t,n,r),function(){!function(e,t,n,r){var i=r&&"boolean"!=typeof r?r.capture:r;e.removeEventListener(t,n,i),n.__once&&e.removeEventListener(t,n.__once,i)}(e,t,n,r)}}var T=(new Date).getTime();var R,H=function(e){var t=(new Date).getTime(),n=Math.max(0,16-(t-T)),r=setTimeout(e,n);return T=t,r},N=function(e,t){return e+(e?t[0].toUpperCase()+t.substr(1):t)+"AnimationFrame"};function _(e,t,n){if(e){if(void 0===n)return e.getAttribute(t);n||""===n?e.setAttribute(t,String(n)):e.removeAttribute(t)}}function $(e,t){if(!R){var n=document.body,r=n.matches||n.matchesSelector||n.webkitMatchesSelector||n.mozMatchesSelector||n.msMatchesSelector;R=function(e,t){return r.call(e,t)}}return R(e,t)}function B(e,t,n){e.closest&&!n&&e.closest(t);var r=e;do{if($(r,t))return r;r=r.parentElement}while(r&&r!==n&&r.nodeType===document.ELEMENT_NODE);return null}function F(e,t){return e.contains?e.contains(t):e.compareDocumentPosition?e===t||!!(16&e.compareDocumentPosition(t)):void 0}S&&["","webkit","moz","o","ms"].some((function(e){var t=N(e,"request");return t in window&&(N(e,"cancel"),H=function(e){return window[t](e)}),!!H})),Function.prototype.bind.call(Function.prototype.call,[].slice);var W=Function.prototype.bind.call(Function.prototype.call,[].slice);function Y(e,t){return W(e.querySelectorAll(t))}function X(e){return"nodeType"in e&&e.nodeType===document.DOCUMENT_NODE}function U(e){return"window"in e&&e.window===e?e:X(e)&&e.defaultView||!1}function V(e){var t="pageXOffset"===e?"scrollLeft":"scrollTop";return function(n,r){var i=U(n);if(void 0===r)return i?i[e]:n[t];i?i.scrollTo(i[e],r):n[t]=r}}var G=V("pageXOffset"),q=V("pageYOffset");function Z(e){var t=E(e),n={top:0,left:0,height:0,width:0},r=t&&t.documentElement;return r&&F(r,e)?(void 0!==e.getBoundingClientRect&&(n=e.getBoundingClientRect()),n={top:n.top+q(r)-(r.clientTop||0),left:n.left+G(r)-(r.clientLeft||0),width:n.width,height:n.height}):n}function K(e,t){var n=U(e);return n?n.innerHeight:t?e.clientHeight:Z(e).height}var Q=/^(?:input|select|textarea|button)$/i;function J(e){for(var t,n=E(e),r=e&&e.offsetParent;(t=r)&&"offsetParent"in t&&"HTML"!==r.nodeName&&"static"===z(r,"position");)r=r.offsetParent;return r||n.documentElement}function ee(){return(ee=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function te(e,t){var n,r={top:0,left:0};if("fixed"===z(e,"position"))n=e.getBoundingClientRect();else{var i=t||J(e);n=Z(e),"html"!==function(e){return e.nodeName&&e.nodeName.toLowerCase()}(i)&&(r=Z(i));var o=String(z(i,"borderTopWidth")||0);r.top+=parseInt(o,10)-q(i)||0;var a=String(z(i,"borderLeftWidth")||0);r.left+=parseInt(a,10)-G(i)||0}var s=String(z(e,"marginTop")||0),l=String(z(e,"marginLeft")||0);return ee({},n,{top:n.top-r.top-(parseInt(s,10)||0),left:n.left-r.left-(parseInt(l,10)||0)})}function ne(e){return e&&e.parentNode?(e.parentNode.removeChild(e),e):null}function re(e,t){return e.replace(new RegExp("(^|\\s)"+t+"(?:\\s|$)","g"),"$1").replace(/\s+/g," ").replace(/^\s*|\s*$/g,"")}function ie(e,t){e.classList?e.classList.remove(t):"string"==typeof e.className?e.className=re(e.className,t):e.setAttribute("class",re(e.className&&e.className.baseVal||"",t))}function oe(e,t){var n=z(e,"position"),r="absolute"===n,i=e.ownerDocument;if("fixed"===n)return i||document;for(;(e=e.parentNode)&&!X(e);){var o=r&&"static"===z(e,"position"),a=(z(e,"overflow")||"")+(z(e,"overflow-y")||"")+z(e,"overflow-x");if(!o&&(/(auto|scroll)/.test(a)&&(t||K(e)<e.scrollHeight)))return e}return i||document}function ae(e,t){var n=U(e);return n?n.innerWidth:t?e.clientWidth:Z(e).width}var se=function(e){return e&&e.Math==Math&&e},le=se("object"==typeof globalThis&&globalThis)||se("object"==typeof window&&window)||se("object"==typeof self&&self)||se("object"==typeof y&&y)||function(){return this}()||Function("return this")(),ue={},ce=function(e){try{return!!e()}catch(e){return!0}},fe=!ce((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),he={},pe={}.propertyIsEnumerable,de=Object.getOwnPropertyDescriptor,ge=de&&!pe.call({1:2},1);he.f=ge?function(e){var t=de(this,e);return!!t&&t.enumerable}:pe;var ve=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},me={}.toString,ye=function(e){return me.call(e).slice(8,-1)},be=ye,we="".split,xe=ce((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==be(e)?we.call(e,""):Object(e)}:Object,Ee=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e},ke=xe,Se=Ee,Pe=function(e){return ke(Se(e))},Oe=function(e){return"object"==typeof e?null!==e:"function"==typeof e},Ie=Oe,De=function(e,t){if(!Ie(e))return e;var n,r;if(t&&"function"==typeof(n=e.toString)&&!Ie(r=n.call(e)))return r;if("function"==typeof(n=e.valueOf)&&!Ie(r=n.call(e)))return r;if(!t&&"function"==typeof(n=e.toString)&&!Ie(r=n.call(e)))return r;throw TypeError("Can't convert object to primitive value")},Ae={}.hasOwnProperty,Ce=function(e,t){return Ae.call(e,t)},Le=Oe,je=le.document,ze=Le(je)&&Le(je.createElement),Me=function(e){return ze?je.createElement(e):{}},Te=Me,Re=!fe&&!ce((function(){return 7!=Object.defineProperty(Te("div"),"a",{get:function(){return 7}}).a})),He=fe,Ne=he,_e=ve,$e=Pe,Be=De,Fe=Ce,We=Re,Ye=Object.getOwnPropertyDescriptor;ue.f=He?Ye:function(e,t){if(e=$e(e),t=Be(t,!0),We)try{return Ye(e,t)}catch(e){}if(Fe(e,t))return _e(!Ne.f.call(e,t),e[t])};var Xe={},Ue=Oe,Ve=function(e){if(!Ue(e))throw TypeError(String(e)+" is not an object");return e},Ge=fe,qe=Re,Ze=Ve,Ke=De,Qe=Object.defineProperty;Xe.f=Ge?Qe:function(e,t,n){if(Ze(e),t=Ke(t,!0),Ze(n),qe)try{return Qe(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(e[t]=n.value),e};var Je=Xe,et=ve,tt=fe?function(e,t,n){return Je.f(e,t,et(1,n))}:function(e,t,n){return e[t]=n,e},nt={exports:{}},rt=le,it=tt,ot=function(e,t){try{it(rt,e,t)}catch(n){rt[e]=t}return t},at=ot,st="__core-js_shared__",lt=le[st]||at(st,{}),ut=lt,ct=Function.toString;"function"!=typeof ut.inspectSource&&(ut.inspectSource=function(e){return ct.call(e)});var ft=ut.inspectSource,ht=ft,pt=le.WeakMap,dt="function"==typeof pt&&/native code/.test(ht(pt)),gt={exports:{}},vt=lt;(gt.exports=function(e,t){return vt[e]||(vt[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.9.1",mode:"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"});var mt,yt,bt,wt=gt.exports,xt=0,Et=Math.random(),kt=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++xt+Et).toString(36)},St=kt,Pt=wt("keys"),Ot=function(e){return Pt[e]||(Pt[e]=St(e))},It={},Dt=dt,At=Oe,Ct=tt,Lt=Ce,jt=lt,zt=Ot,Mt=It,Tt=le.WeakMap;if(Dt){var Rt=jt.state||(jt.state=new Tt),Ht=Rt.get,Nt=Rt.has,_t=Rt.set;mt=function(e,t){return t.facade=e,_t.call(Rt,e,t),t},yt=function(e){return Ht.call(Rt,e)||{}},bt=function(e){return Nt.call(Rt,e)}}else{var $t=zt("state");Mt[$t]=!0,mt=function(e,t){return t.facade=e,Ct(e,$t,t),t},yt=function(e){return Lt(e,$t)?e[$t]:{}},bt=function(e){return Lt(e,$t)}}var Bt={set:mt,get:yt,has:bt,enforce:function(e){return bt(e)?yt(e):mt(e,{})},getterFor:function(e){return function(t){var n;if(!At(t)||(n=yt(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return n}}},Ft=le,Wt=tt,Yt=Ce,Xt=ot,Ut=ft,Vt=Bt.get,Gt=Bt.enforce,qt=String(String).split("String");(nt.exports=function(e,t,n,r){var i,o=!!r&&!!r.unsafe,a=!!r&&!!r.enumerable,s=!!r&&!!r.noTargetGet;"function"==typeof n&&("string"!=typeof t||Yt(n,"name")||Wt(n,"name",t),(i=Gt(n)).source||(i.source=qt.join("string"==typeof t?t:""))),e!==Ft?(o?!s&&e[t]&&(a=!0):delete e[t],a?e[t]=n:Wt(e,t,n)):a?e[t]=n:Xt(t,n)})(Function.prototype,"toString",(function(){return"function"==typeof this&&Vt(this).source||Ut(this)}));var Zt=nt.exports,Kt=le,Qt=le,Jt=function(e){return"function"==typeof e?e:void 0},en=function(e,t){return arguments.length<2?Jt(Kt[e])||Jt(Qt[e]):Kt[e]&&Kt[e][t]||Qt[e]&&Qt[e][t]},tn={},nn=Math.ceil,rn=Math.floor,on=function(e){return isNaN(e=+e)?0:(e>0?rn:nn)(e)},an=on,sn=Math.min,ln=function(e){return e>0?sn(an(e),9007199254740991):0},un=on,cn=Math.max,fn=Math.min,hn=function(e,t){var n=un(e);return n<0?cn(n+t,0):fn(n,t)},pn=Pe,dn=ln,gn=hn,vn=function(e){return function(t,n,r){var i,o=pn(t),a=dn(o.length),s=gn(r,a);if(e&&n!=n){for(;a>s;)if((i=o[s++])!=i)return!0}else for(;a>s;s++)if((e||s in o)&&o[s]===n)return e||s||0;return!e&&-1}},mn={includes:vn(!0),indexOf:vn(!1)},yn=Ce,bn=Pe,wn=mn.indexOf,xn=It,En=function(e,t){var n,r=bn(e),i=0,o=[];for(n in r)!yn(xn,n)&&yn(r,n)&&o.push(n);for(;t.length>i;)yn(r,n=t[i++])&&(~wn(o,n)||o.push(n));return o},kn=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],Sn=En,Pn=kn.concat("length","prototype");tn.f=Object.getOwnPropertyNames||function(e){return Sn(e,Pn)};var On={};On.f=Object.getOwnPropertySymbols;var In,Dn,An=tn,Cn=On,Ln=Ve,jn=en("Reflect","ownKeys")||function(e){var t=An.f(Ln(e)),n=Cn.f;return n?t.concat(n(e)):t},zn=Ce,Mn=jn,Tn=ue,Rn=Xe,Hn=ce,Nn=/#|\.prototype\./,_n=function(e,t){var n=Bn[$n(e)];return n==Wn||n!=Fn&&("function"==typeof t?Hn(t):!!t)},$n=_n.normalize=function(e){return String(e).replace(Nn,".").toLowerCase()},Bn=_n.data={},Fn=_n.NATIVE="N",Wn=_n.POLYFILL="P",Yn=_n,Xn=le,Un=ue.f,Vn=tt,Gn=Zt,qn=ot,Zn=function(e,t){for(var n=Mn(t),r=Rn.f,i=Tn.f,o=0;o<n.length;o++){var a=n[o];zn(e,a)||r(e,a,i(t,a))}},Kn=Yn,Qn=function(e,t){var n,r,i,o,a,s=e.target,l=e.global,u=e.stat;if(n=l?Xn:u?Xn[s]||qn(s,{}):(Xn[s]||{}).prototype)for(r in t){if(o=t[r],i=e.noTargetGet?(a=Un(n,r))&&a.value:n[r],!Kn(l?r:s+(u?".":"#")+r,e.forced)&&void 0!==i){if(typeof o==typeof i)continue;Zn(o,i)}(e.sham||i&&i.sham)&&Vn(o,"sham",!0),Gn(n,r,o,e)}},Jn=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e},er=Jn,tr=function(e,t,n){if(er(e),void 0===t)return e;switch(n){case 0:return function(){return e.call(t)};case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,i){return e.call(t,n,r,i)}}return function(){return e.apply(t,arguments)}},nr=Ee,rr=function(e){return Object(nr(e))},ir=ye,or=Array.isArray||function(e){return"Array"==ir(e)},ar="process"==ye(le.process),sr=en("navigator","userAgent")||"",lr=sr,ur=le.process,cr=ur&&ur.versions,fr=cr&&cr.v8;fr?Dn=(In=fr.split("."))[0]+In[1]:lr&&(!(In=lr.match(/Edge\/(\d+)/))||In[1]>=74)&&(In=lr.match(/Chrome\/(\d+)/))&&(Dn=In[1]);var hr=Dn&&+Dn,pr=ar,dr=hr,gr=ce,vr=!!Object.getOwnPropertySymbols&&!gr((function(){return!Symbol.sham&&(pr?38===dr:dr>37&&dr<41)})),mr=vr&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,yr=le,br=Ce,wr=kt,xr=vr,Er=mr,kr=wt("wks"),Sr=yr.Symbol,Pr=Er?Sr:Sr&&Sr.withoutSetter||wr,Or=function(e){return br(kr,e)&&(xr||"string"==typeof kr[e])||(xr&&br(Sr,e)?kr[e]=Sr[e]:kr[e]=Pr("Symbol."+e)),kr[e]},Ir=Oe,Dr=or,Ar=Or("species"),Cr=function(e,t){var n;return Dr(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!Dr(n.prototype)?Ir(n)&&null===(n=n[Ar])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===t?0:t)},Lr=tr,jr=xe,zr=rr,Mr=ln,Tr=Cr,Rr=[].push,Hr=function(e){var t=1==e,n=2==e,r=3==e,i=4==e,o=6==e,a=7==e,s=5==e||o;return function(l,u,c,f){for(var h,p,d=zr(l),g=jr(d),v=Lr(u,c,3),m=Mr(g.length),y=0,b=f||Tr,w=t?b(l,m):n||a?b(l,0):void 0;m>y;y++)if((s||y in g)&&(p=v(h=g[y],y,d),e))if(t)w[y]=p;else if(p)switch(e){case 3:return!0;case 5:return h;case 6:return y;case 2:Rr.call(w,h)}else switch(e){case 4:return!1;case 7:Rr.call(w,h)}return o?-1:r||i?i:w}},Nr={forEach:Hr(0),map:Hr(1),filter:Hr(2),some:Hr(3),every:Hr(4),find:Hr(5),findIndex:Hr(6),filterOut:Hr(7)},_r=ce,$r=hr,Br=Or("species"),Fr=function(e){return $r>=51||!_r((function(){var t=[];return(t.constructor={})[Br]=function(){return{foo:1}},1!==t[e](Boolean).foo}))},Wr=Nr.filter;Qn({target:"Array",proto:!0,forced:!Fr("filter")},{filter:function(e){return Wr(this,e,arguments.length>1?arguments[1]:void 0)}});var Yr={};Yr[Or("toStringTag")]="z";var Xr="[object z]"===String(Yr),Ur=Xr,Vr=ye,Gr=Or("toStringTag"),qr="Arguments"==Vr(function(){return arguments}()),Zr=Ur?Vr:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),Gr))?n:qr?Vr(t):"Object"==(r=Vr(t))&&"function"==typeof t.callee?"Arguments":r},Kr=Zr,Qr=Xr?{}.toString:function(){return"[object "+Kr(this)+"]"};Xr||Zt(Object.prototype,"toString",Qr,{unsafe:!0});var Jr=ce,ei=function(e,t){var n=[][e];return!!n&&Jr((function(){n.call(null,t||function(){throw 1},1)}))},ti=Nr.forEach,ni=ei("forEach")?[].forEach:function(e){return ti(this,e,arguments.length>1?arguments[1]:void 0)};Qn({target:"Array",proto:!0,forced:[].forEach!=ni},{forEach:ni});var ri=le,ii={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0},oi=ni,ai=tt;for(var si in ii){var li=ri[si],ui=li&&li.prototype;if(ui&&ui.forEach!==oi)try{ai(ui,"forEach",oi)}catch(e){ui.forEach=oi}}var ci=le.Promise,fi=Zt,hi=Xe.f,pi=Ce,di=Or("toStringTag"),gi=en,vi=Xe,mi=fe,yi=Or("species"),bi={},wi=bi,xi=Or("iterator"),Ei=Array.prototype,ki=Zr,Si=bi,Pi=Or("iterator"),Oi=Ve,Ii=Ve,Di=function(e){return void 0!==e&&(wi.Array===e||Ei[xi]===e)},Ai=ln,Ci=tr,Li=function(e){if(null!=e)return e[Pi]||e["@@iterator"]||Si[ki(e)]},ji=function(e){var t=e.return;if(void 0!==t)return Oi(t.call(e)).value},zi=function(e,t){this.stopped=e,this.result=t},Mi=Or("iterator"),Ti=!1;try{var Ri=0,Hi={next:function(){return{done:!!Ri++}},return:function(){Ti=!0}};Hi[Mi]=function(){return this},Array.from(Hi,(function(){throw 2}))}catch(e){}var Ni,_i,$i,Bi=Ve,Fi=Jn,Wi=Or("species"),Yi=en("document","documentElement"),Xi=/(iphone|ipod|ipad).*applewebkit/i.test(sr),Ui=le,Vi=ce,Gi=tr,qi=Yi,Zi=Me,Ki=Xi,Qi=ar,Ji=Ui.location,eo=Ui.setImmediate,to=Ui.clearImmediate,no=Ui.process,ro=Ui.MessageChannel,io=Ui.Dispatch,oo=0,ao={},so="onreadystatechange",lo=function(e){if(ao.hasOwnProperty(e)){var t=ao[e];delete ao[e],t()}},uo=function(e){return function(){lo(e)}},co=function(e){lo(e.data)},fo=function(e){Ui.postMessage(e+"",Ji.protocol+"//"+Ji.host)};eo&&to||(eo=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return ao[++oo]=function(){("function"==typeof e?e:Function(e)).apply(void 0,t)},Ni(oo),oo},to=function(e){delete ao[e]},Qi?Ni=function(e){no.nextTick(uo(e))}:io&&io.now?Ni=function(e){io.now(uo(e))}:ro&&!Ki?($i=(_i=new ro).port2,_i.port1.onmessage=co,Ni=Gi($i.postMessage,$i,1)):Ui.addEventListener&&"function"==typeof postMessage&&!Ui.importScripts&&Ji&&"file:"!==Ji.protocol&&!Vi(fo)?(Ni=fo,Ui.addEventListener("message",co,!1)):Ni=so in Zi("script")?function(e){qi.appendChild(Zi("script")).onreadystatechange=function(){qi.removeChild(this),lo(e)}}:function(e){setTimeout(uo(e),0)});var ho,po,go,vo,mo,yo,bo,wo,xo={set:eo,clear:to},Eo=/web0s(?!.*chrome)/i.test(sr),ko=le,So=ue.f,Po=xo.set,Oo=Xi,Io=Eo,Do=ar,Ao=ko.MutationObserver||ko.WebKitMutationObserver,Co=ko.document,Lo=ko.process,jo=ko.Promise,zo=So(ko,"queueMicrotask"),Mo=zo&&zo.value;Mo||(ho=function(){var e,t;for(Do&&(e=Lo.domain)&&e.exit();po;){t=po.fn,po=po.next;try{t()}catch(e){throw po?vo():go=void 0,e}}go=void 0,e&&e.enter()},Oo||Do||Io||!Ao||!Co?jo&&jo.resolve?(bo=jo.resolve(void 0),wo=bo.then,vo=function(){wo.call(bo,ho)}):vo=Do?function(){Lo.nextTick(ho)}:function(){Po.call(ko,ho)}:(mo=!0,yo=Co.createTextNode(""),new Ao(ho).observe(yo,{characterData:!0}),vo=function(){yo.data=mo=!mo}));var To=Mo||function(e){var t={fn:e,next:void 0};go&&(go.next=t),po||(po=t,vo()),go=t},Ro={},Ho=Jn,No=function(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r})),this.resolve=Ho(t),this.reject=Ho(n)};Ro.f=function(e){return new No(e)};var _o,$o,Bo,Fo,Wo=Ve,Yo=Oe,Xo=Ro,Uo=le,Vo=Qn,Go=le,qo=en,Zo=ci,Ko=Zt,Qo=function(e,t,n){for(var r in t)fi(e,r,t[r],n);return e},Jo=function(e,t,n){e&&!pi(e=n?e:e.prototype,di)&&hi(e,di,{configurable:!0,value:t})},ea=function(e){var t=gi(e),n=vi.f;mi&&t&&!t[yi]&&n(t,yi,{configurable:!0,get:function(){return this}})},ta=Oe,na=Jn,ra=function(e,t,n){if(!(e instanceof t))throw TypeError("Incorrect "+(n?n+" ":"")+"invocation");return e},ia=ft,oa=function(e,t,n){var r,i,o,a,s,l,u,c=n&&n.that,f=!(!n||!n.AS_ENTRIES),h=!(!n||!n.IS_ITERATOR),p=!(!n||!n.INTERRUPTED),d=Ci(t,c,1+f+p),g=function(e){return r&&ji(r),new zi(!0,e)},v=function(e){return f?(Ii(e),p?d(e[0],e[1],g):d(e[0],e[1])):p?d(e,g):d(e)};if(h)r=e;else{if("function"!=typeof(i=Li(e)))throw TypeError("Target is not iterable");if(Di(i)){for(o=0,a=Ai(e.length);a>o;o++)if((s=v(e[o]))&&s instanceof zi)return s;return new zi(!1)}r=i.call(e)}for(l=r.next;!(u=l.call(r)).done;){try{s=v(u.value)}catch(e){throw ji(r),e}if("object"==typeof s&&s&&s instanceof zi)return s}return new zi(!1)},aa=function(e,t){if(!t&&!Ti)return!1;var n=!1;try{var r={};r[Mi]=function(){return{next:function(){return{done:n=!0}}}},e(r)}catch(e){}return n},sa=function(e,t){var n,r=Bi(e).constructor;return void 0===r||null==(n=Bi(r)[Wi])?t:Fi(n)},la=xo.set,ua=To,ca=function(e,t){if(Wo(e),Yo(t)&&t.constructor===e)return t;var n=Xo.f(e);return(0,n.resolve)(t),n.promise},fa=function(e,t){var n=Uo.console;n&&n.error&&(1===arguments.length?n.error(e):n.error(e,t))},ha=Ro,pa=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}},da=Bt,ga=Yn,va=ar,ma=hr,ya=Or("species"),ba="Promise",wa=da.get,xa=da.set,Ea=da.getterFor(ba),ka=Zo,Sa=Go.TypeError,Pa=Go.document,Oa=Go.process,Ia=qo("fetch"),Da=ha.f,Aa=Da,Ca=!!(Pa&&Pa.createEvent&&Go.dispatchEvent),La="function"==typeof PromiseRejectionEvent,ja="unhandledrejection",za=ga(ba,(function(){if(!(ia(ka)!==String(ka))){if(66===ma)return!0;if(!va&&!La)return!0}if(ma>=51&&/native code/.test(ka))return!1;var e=ka.resolve(1),t=function(e){e((function(){}),(function(){}))};return(e.constructor={})[ya]=t,!(e.then((function(){}))instanceof t)})),Ma=za||!aa((function(e){ka.all(e).catch((function(){}))})),Ta=function(e){var t;return!(!ta(e)||"function"!=typeof(t=e.then))&&t},Ra=function(e,t){if(!e.notified){e.notified=!0;var n=e.reactions;ua((function(){for(var r=e.value,i=1==e.state,o=0;n.length>o;){var a,s,l,u=n[o++],c=i?u.ok:u.fail,f=u.resolve,h=u.reject,p=u.domain;try{c?(i||(2===e.rejection&&$a(e),e.rejection=1),!0===c?a=r:(p&&p.enter(),a=c(r),p&&(p.exit(),l=!0)),a===u.promise?h(Sa("Promise-chain cycle")):(s=Ta(a))?s.call(a,f,h):f(a)):h(r)}catch(e){p&&!l&&p.exit(),h(e)}}e.reactions=[],e.notified=!1,t&&!e.rejection&&Na(e)}))}},Ha=function(e,t,n){var r,i;Ca?((r=Pa.createEvent("Event")).promise=t,r.reason=n,r.initEvent(e,!1,!0),Go.dispatchEvent(r)):r={promise:t,reason:n},!La&&(i=Go["on"+e])?i(r):e===ja&&fa("Unhandled promise rejection",n)},Na=function(e){la.call(Go,(function(){var t,n=e.facade,r=e.value;if(_a(e)&&(t=pa((function(){va?Oa.emit("unhandledRejection",r,n):Ha(ja,n,r)})),e.rejection=va||_a(e)?2:1,t.error))throw t.value}))},_a=function(e){return 1!==e.rejection&&!e.parent},$a=function(e){la.call(Go,(function(){var t=e.facade;va?Oa.emit("rejectionHandled",t):Ha("rejectionhandled",t,e.value)}))},Ba=function(e,t,n){return function(r){e(t,r,n)}},Fa=function(e,t,n){e.done||(e.done=!0,n&&(e=n),e.value=t,e.state=2,Ra(e,!0))},Wa=function(e,t,n){if(!e.done){e.done=!0,n&&(e=n);try{if(e.facade===t)throw Sa("Promise can't be resolved itself");var r=Ta(t);r?ua((function(){var n={done:!1};try{r.call(t,Ba(Wa,n,e),Ba(Fa,n,e))}catch(t){Fa(n,t,e)}})):(e.value=t,e.state=1,Ra(e,!1))}catch(t){Fa({done:!1},t,e)}}};za&&(ka=function(e){ra(this,ka,ba),na(e),_o.call(this);var t=wa(this);try{e(Ba(Wa,t),Ba(Fa,t))}catch(e){Fa(t,e)}},(_o=function(e){xa(this,{type:ba,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=Qo(ka.prototype,{then:function(e,t){var n=Ea(this),r=Da(sa(this,ka));return r.ok="function"!=typeof e||e,r.fail="function"==typeof t&&t,r.domain=va?Oa.domain:void 0,n.parent=!0,n.reactions.push(r),0!=n.state&&Ra(n,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),$o=function(){var e=new _o,t=wa(e);this.promise=e,this.resolve=Ba(Wa,t),this.reject=Ba(Fa,t)},ha.f=Da=function(e){return e===ka||e===Bo?new $o(e):Aa(e)},"function"==typeof Zo&&(Fo=Zo.prototype.then,Ko(Zo.prototype,"then",(function(e,t){var n=this;return new ka((function(e,t){Fo.call(n,e,t)})).then(e,t)}),{unsafe:!0}),"function"==typeof Ia&&Vo({global:!0,enumerable:!0,forced:!0},{fetch:function(e){return ca(ka,Ia.apply(Go,arguments))}}))),Vo({global:!0,wrap:!0,forced:za},{Promise:ka}),Jo(ka,ba,!1),ea(ba),Bo=qo(ba),Vo({target:ba,stat:!0,forced:za},{reject:function(e){var t=Da(this);return t.reject.call(void 0,e),t.promise}}),Vo({target:ba,stat:!0,forced:za},{resolve:function(e){return ca(this,e)}}),Vo({target:ba,stat:!0,forced:Ma},{all:function(e){var t=this,n=Da(t),r=n.resolve,i=n.reject,o=pa((function(){var n=na(t.resolve),o=[],a=0,s=1;oa(e,(function(e){var l=a++,u=!1;o.push(void 0),s++,n.call(t,e).then((function(e){u||(u=!0,o[l]=e,--s||r(o))}),i)})),--s||r(o)}));return o.error&&i(o.value),n.promise},race:function(e){var t=this,n=Da(t),r=n.reject,i=pa((function(){var i=na(t.resolve);oa(e,(function(e){i.call(t,e).then(n.resolve,r)}))}));return i.error&&r(i.value),n.promise}});var Ya=Jn,Xa=Oe,Ua=[].slice,Va={},Ga=function(e,t,n){if(!(t in Va)){for(var r=[],i=0;i<t;i++)r[i]="a["+i+"]";Va[t]=Function("C,a","return new C("+r.join(",")+")")}return Va[t](e,n)};Qn({target:"Function",proto:!0},{bind:Function.bind||function(e){var t=Ya(this),n=Ua.call(arguments,1),r=function(){var i=n.concat(Ua.call(arguments));return this instanceof r?Ga(t,i.length,i):t.apply(e,i)};return Xa(t.prototype)&&(r.prototype=t.prototype),r}});var qa=De,Za=Xe,Ka=ve,Qa=function(e,t,n){var r=qa(t);r in e?Za.f(e,r,Ka(0,n)):e[r]=n},Ja=Qn,es=Oe,ts=or,ns=hn,rs=ln,is=Pe,os=Qa,as=Or,ss=Fr("slice"),ls=as("species"),us=[].slice,cs=Math.max;Ja({target:"Array",proto:!0,forced:!ss},{slice:function(e,t){var n,r,i,o=is(this),a=rs(o.length),s=ns(e,a),l=ns(void 0===t?a:t,a);if(ts(o)&&("function"!=typeof(n=o.constructor)||n!==Array&&!ts(n.prototype)?es(n)&&null===(n=n[ls])&&(n=void 0):n=void 0,n===Array||void 0===n))return us.call(o,s,l);for(r=new(void 0===n?Array:n)(cs(l-s,0)),i=0;s<l;s++,i++)s in o&&os(r,i,o[s]);return r.length=i,r}});var fs=Ve,hs={},ps=ce;function ds(e,t){return RegExp(e,t)}hs.UNSUPPORTED_Y=ps((function(){var e=ds("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),hs.BROKEN_CARET=ps((function(){var e=ds("^r","gy");return e.lastIndex=2,null!=e.exec("str")}));var gs,vs,ms=function(){var e=fs(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t},ys=hs,bs=RegExp.prototype.exec,ws=String.prototype.replace,xs=bs,Es=(gs=/a/,vs=/b*/g,bs.call(gs,"a"),bs.call(vs,"a"),0!==gs.lastIndex||0!==vs.lastIndex),ks=ys.UNSUPPORTED_Y||ys.BROKEN_CARET,Ss=void 0!==/()??/.exec("")[1];(Es||Ss||ks)&&(xs=function(e){var t,n,r,i,o=this,a=ks&&o.sticky,s=ms.call(o),l=o.source,u=0,c=e;return a&&(-1===(s=s.replace("y","")).indexOf("g")&&(s+="g"),c=String(e).slice(o.lastIndex),o.lastIndex>0&&(!o.multiline||o.multiline&&"\n"!==e[o.lastIndex-1])&&(l="(?: "+l+")",c=" "+c,u++),n=new RegExp("^(?:"+l+")",s)),Ss&&(n=new RegExp("^"+l+"$(?!\\s)",s)),Es&&(t=o.lastIndex),r=bs.call(a?n:o,c),a?r?(r.input=r.input.slice(u),r[0]=r[0].slice(u),r.index=o.lastIndex,o.lastIndex+=r[0].length):o.lastIndex=0:Es&&r&&(o.lastIndex=o.global?r.index+r[0].length:t),Ss&&r&&r.length>1&&ws.call(r[0],n,(function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(r[i]=void 0)})),r});var Ps=xs;Qn({target:"RegExp",proto:!0,forced:/./.exec!==Ps},{exec:Ps});var Os="\t\n\v\f\r                　\u2028\u2029\ufeff",Is=Ee,Ds="[\t\n\v\f\r                　\u2028\u2029\ufeff]",As=RegExp("^"+Ds+Ds+"*"),Cs=RegExp(Ds+Ds+"*$"),Ls=function(e){return function(t){var n=String(Is(t));return 1&e&&(n=n.replace(As,"")),2&e&&(n=n.replace(Cs,"")),n}},js={start:Ls(1),end:Ls(2),trim:Ls(3)},zs=js.trim,Ms=le.parseFloat,Ts=1/Ms("\t\n\v\f\r                　\u2028\u2029\ufeff-0")!=-1/0?function(e){var t=zs(String(e)),n=Ms(t);return 0===n&&"-"==t.charAt(0)?-0:n}:Ms;Qn({global:!0,forced:parseFloat!=Ts},{parseFloat:Ts});var Rs=js.trim,Hs=Os,Ns=le.parseInt,_s=/^[+-]?0[Xx]/,$s=8!==Ns(Hs+"08")||22!==Ns(Hs+"0x16")?function(e,t){var n=Rs(String(e));return Ns(n,t>>>0||(_s.test(n)?16:10))}:Ns;Qn({global:!0,forced:parseInt!=$s},{parseInt:$s});var Bs=Qn,Fs=ce,Ws=or,Ys=Oe,Xs=rr,Us=ln,Vs=Qa,Gs=Cr,qs=Fr,Zs=hr,Ks=Or("isConcatSpreadable"),Qs=9007199254740991,Js="Maximum allowed index exceeded",el=Zs>=51||!Fs((function(){var e=[];return e[Ks]=!1,e.concat()[0]!==e})),tl=qs("concat"),nl=function(e){if(!Ys(e))return!1;var t=e[Ks];return void 0!==t?!!t:Ws(e)};Bs({target:"Array",proto:!0,forced:!el||!tl},{concat:function(e){var t,n,r,i,o,a=Xs(this),s=Gs(a,0),l=0;for(t=-1,r=arguments.length;t<r;t++)if(nl(o=-1===t?a:arguments[t])){if(l+(i=Us(o.length))>Qs)throw TypeError(Js);for(n=0;n<i;n++,l++)n in o&&Vs(s,l,o[n])}else{if(l>=Qs)throw TypeError(Js);Vs(s,l++,o)}return s.length=l,s}});var rl=Qn,il=Pe,ol=[].join,al=xe!=Object,sl=ei("join",",");rl({target:"Array",proto:!0,forced:al||!sl},{join:function(e){return ol.call(il(this),void 0===e?",":e)}});var ll=function(){function e(e){var t=this;this._insertTag=function(e){var n;n=0===t.tags.length?t.insertionPoint?t.insertionPoint.nextSibling:t.prepend?t.container.firstChild:t.before:t.tags[t.tags.length-1].nextSibling,t.container.insertBefore(e,n),t.tags.push(e)},this.isSpeedy=void 0===e.speedy||e.speedy,this.tags=[],this.ctr=0,this.nonce=e.nonce,this.key=e.key,this.container=e.container,this.prepend=e.prepend,this.insertionPoint=e.insertionPoint,this.before=null}var t=e.prototype;return t.hydrate=function(e){e.forEach(this._insertTag)},t.insert=function(e){this.ctr%(this.isSpeedy?65e3:1)==0&&this._insertTag(function(e){var t=document.createElement("style");return t.setAttribute("data-emotion",e.key),void 0!==e.nonce&&t.setAttribute("nonce",e.nonce),t.appendChild(document.createTextNode("")),t.setAttribute("data-s",""),t}(this));var t=this.tags[this.tags.length-1];if(this.isSpeedy){var n=function(e){if(e.sheet)return e.sheet;for(var t=0;t<document.styleSheets.length;t++)if(document.styleSheets[t].ownerNode===e)return document.styleSheets[t]}(t);try{n.insertRule(e,n.cssRules.length)}catch(e){}}else t.appendChild(document.createTextNode(e));this.ctr++},t.flush=function(){this.tags.forEach((function(e){return e.parentNode&&e.parentNode.removeChild(e)})),this.tags=[],this.ctr=0},e}(),ul="-ms-",cl="-moz-",fl="-webkit-",hl="comm",pl="rule",dl="decl",gl="@keyframes",vl=Math.abs,ml=String.fromCharCode,yl=Object.assign;function bl(e){return e.trim()}function wl(e,t,n){return e.replace(t,n)}function xl(e,t){return e.indexOf(t)}function El(e,t){return 0|e.charCodeAt(t)}function kl(e,t,n){return e.slice(t,n)}function Sl(e){return e.length}function Pl(e){return e.length}function Ol(e,t){return t.push(e),e}var Il=1,Dl=1,Al=0,Cl=0,Ll=0,jl="";function zl(e,t,n,r,i,o,a){return{value:e,root:t,parent:n,type:r,props:i,children:o,line:Il,column:Dl,length:a,return:""}}function Ml(e,t){return yl(zl("",null,null,"",null,null,0),e,{length:-e.length},t)}function Tl(){return Ll=Cl>0?El(jl,--Cl):0,Dl--,10===Ll&&(Dl=1,Il--),Ll}function Rl(){return Ll=Cl<Al?El(jl,Cl++):0,Dl++,10===Ll&&(Dl=1,Il++),Ll}function Hl(){return El(jl,Cl)}function Nl(){return Cl}function _l(e,t){return kl(jl,e,t)}function $l(e){switch(e){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function Bl(e){return Il=Dl=1,Al=Sl(jl=e),Cl=0,[]}function Fl(e){return jl="",e}function Wl(e){return bl(_l(Cl-1,Ul(91===e?e+2:40===e?e+1:e)))}function Yl(e){for(;(Ll=Hl())&&Ll<33;)Rl();return $l(e)>2||$l(Ll)>3?"":" "}function Xl(e,t){for(;--t&&Rl()&&!(Ll<48||Ll>102||Ll>57&&Ll<65||Ll>70&&Ll<97););return _l(e,Nl()+(t<6&&32==Hl()&&32==Rl()))}function Ul(e){for(;Rl();)switch(Ll){case e:return Cl;case 34:case 39:34!==e&&39!==e&&Ul(Ll);break;case 40:41===e&&Ul(e);break;case 92:Rl()}return Cl}function Vl(e,t){for(;Rl()&&e+Ll!==57&&(e+Ll!==84||47!==Hl()););return"/*"+_l(t,Cl-1)+"*"+ml(47===e?e:Rl())}function Gl(e){for(;!$l(Hl());)Rl();return _l(e,Cl)}function ql(e){return Fl(Zl("",null,null,null,[""],e=Bl(e),0,[0],e))}function Zl(e,t,n,r,i,o,a,s,l){for(var u=0,c=0,f=a,h=0,p=0,d=0,g=1,v=1,m=1,y=0,b="",w=i,x=o,E=r,k=b;v;)switch(d=y,y=Rl()){case 40:if(108!=d&&58==El(k,f-1)){-1!=xl(k+=wl(Wl(y),"&","&\f"),"&\f")&&(m=-1);break}case 34:case 39:case 91:k+=Wl(y);break;case 9:case 10:case 13:case 32:k+=Yl(d);break;case 92:k+=Xl(Nl()-1,7);continue;case 47:switch(Hl()){case 42:case 47:Ol(Ql(Vl(Rl(),Nl()),t,n),l);break;default:k+="/"}break;case 123*g:s[u++]=Sl(k)*m;case 125*g:case 59:case 0:switch(y){case 0:case 125:v=0;case 59+c:-1==m&&(k=wl(k,/\f/g,"")),p>0&&Sl(k)-f&&Ol(p>32?Jl(k+";",r,n,f-1):Jl(wl(k," ","")+";",r,n,f-2),l);break;case 59:k+=";";default:if(Ol(E=Kl(k,t,n,u,c,i,s,b,w=[],x=[],f),o),123===y)if(0===c)Zl(k,t,E,E,w,o,f,s,x);else switch(99===h&&110===El(k,3)?100:h){case 100:case 108:case 109:case 115:Zl(e,E,E,r&&Ol(Kl(e,E,E,0,0,i,s,b,i,w=[],f),x),i,x,f,s,r?w:x);break;default:Zl(k,E,E,E,[""],x,0,s,x)}}u=c=p=0,g=m=1,b=k="",f=a;break;case 58:f=1+Sl(k),p=d;default:if(g<1)if(123==y)--g;else if(125==y&&0==g++&&125==Tl())continue;switch(k+=ml(y),y*g){case 38:m=c>0?1:(k+="\f",-1);break;case 44:s[u++]=(Sl(k)-1)*m,m=1;break;case 64:45===Hl()&&(k+=Wl(Rl())),h=Hl(),c=f=Sl(b=k+=Gl(Nl())),y++;break;case 45:45===d&&2==Sl(k)&&(g=0)}}return o}function Kl(e,t,n,r,i,o,a,s,l,u,c){for(var f=i-1,h=0===i?o:[""],p=Pl(h),d=0,g=0,v=0;d<r;++d)for(var m=0,y=kl(e,f+1,f=vl(g=a[d])),b=e;m<p;++m)(b=bl(g>0?h[m]+" "+y:wl(y,/&\f/g,h[m])))&&(l[v++]=b);return zl(e,t,n,0===i?pl:s,l,u,c)}function Ql(e,t,n){return zl(e,t,n,hl,ml(Ll),kl(e,2,-2),0)}function Jl(e,t,n,r){return zl(e,t,n,dl,kl(e,0,r),kl(e,r+1,-1),r)}function eu(e,t){for(var n="",r=Pl(e),i=0;i<r;i++)n+=t(e[i],i,e,t)||"";return n}function tu(e,t,n,r){switch(e.type){case"@layer":if(e.children.length)break;case"@import":case dl:return e.return=e.return||e.value;case hl:return"";case gl:return e.return=e.value+"{"+eu(e.children,r)+"}";case pl:e.value=e.props.join(",")}return Sl(n=eu(e.children,r))?e.return=e.value+"{"+n+"}":""}function nu(e){var t=Object.create(null);return function(n){return void 0===t[n]&&(t[n]=e(n)),t[n]}}var ru=function(e,t,n){for(var r=0,i=0;r=i,i=Hl(),38===r&&12===i&&(t[n]=1),!$l(i);)Rl();return _l(e,Cl)},iu=function(e,t){return Fl(function(e,t){var n=-1,r=44;do{switch($l(r)){case 0:38===r&&12===Hl()&&(t[n]=1),e[n]+=ru(Cl-1,t,n);break;case 2:e[n]+=Wl(r);break;case 4:if(44===r){e[++n]=58===Hl()?"&\f":"",t[n]=e[n].length;break}default:e[n]+=ml(r)}}while(r=Rl());return e}(Bl(e),t))},ou=new WeakMap,au=function(e){if("rule"===e.type&&e.parent&&!(e.length<1)){for(var t=e.value,n=e.parent,r=e.column===n.column&&e.line===n.line;"rule"!==n.type;)if(!(n=n.parent))return;if((1!==e.props.length||58===t.charCodeAt(0)||ou.get(n))&&!r){ou.set(e,!0);for(var i=[],o=iu(t,i),a=n.props,s=0,l=0;s<o.length;s++)for(var u=0;u<a.length;u++,l++)e.props[l]=i[s]?o[s].replace(/&\f/g,a[u]):a[u]+" "+o[s]}}},su=function(e){if("decl"===e.type){var t=e.value;108===t.charCodeAt(0)&&98===t.charCodeAt(2)&&(e.return="",e.value="")}};function lu(e,t){switch(function(e,t){return 45^El(e,0)?(((t<<2^El(e,0))<<2^El(e,1))<<2^El(e,2))<<2^El(e,3):0}(e,t)){case 5103:return fl+"print-"+e+e;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return fl+e+e;case 5349:case 4246:case 4810:case 6968:case 2756:return fl+e+cl+e+ul+e+e;case 6828:case 4268:return fl+e+ul+e+e;case 6165:return fl+e+ul+"flex-"+e+e;case 5187:return fl+e+wl(e,/(\w+).+(:[^]+)/,"-webkit-box-$1$2-ms-flex-$1$2")+e;case 5443:return fl+e+ul+"flex-item-"+wl(e,/flex-|-self/,"")+e;case 4675:return fl+e+ul+"flex-line-pack"+wl(e,/align-content|flex-|-self/,"")+e;case 5548:return fl+e+ul+wl(e,"shrink","negative")+e;case 5292:return fl+e+ul+wl(e,"basis","preferred-size")+e;case 6060:return fl+"box-"+wl(e,"-grow","")+fl+e+ul+wl(e,"grow","positive")+e;case 4554:return fl+wl(e,/([^-])(transform)/g,"$1-webkit-$2")+e;case 6187:return wl(wl(wl(e,/(zoom-|grab)/,fl+"$1"),/(image-set)/,fl+"$1"),e,"")+e;case 5495:case 3959:return wl(e,/(image-set\([^]*)/,fl+"$1$`$1");case 4968:return wl(wl(e,/(.+:)(flex-)?(.*)/,"-webkit-box-pack:$3-ms-flex-pack:$3"),/s.+-b[^;]+/,"justify")+fl+e+e;case 4095:case 3583:case 4068:case 2532:return wl(e,/(.+)-inline(.+)/,fl+"$1$2")+e;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(Sl(e)-1-t>6)switch(El(e,t+1)){case 109:if(45!==El(e,t+4))break;case 102:return wl(e,/(.+:)(.+)-([^]+)/,"$1-webkit-$2-$3$1"+cl+(108==El(e,t+3)?"$3":"$2-$3"))+e;case 115:return~xl(e,"stretch")?lu(wl(e,"stretch","fill-available"),t)+e:e}break;case 4949:if(115!==El(e,t+1))break;case 6444:switch(El(e,Sl(e)-3-(~xl(e,"!important")&&10))){case 107:return wl(e,":",":"+fl)+e;case 101:return wl(e,/(.+:)([^;!]+)(;|!.+)?/,"$1"+fl+(45===El(e,14)?"inline-":"")+"box$3$1"+fl+"$2$3$1"+ul+"$2box$3")+e}break;case 5936:switch(El(e,t+11)){case 114:return fl+e+ul+wl(e,/[svh]\w+-[tblr]{2}/,"tb")+e;case 108:return fl+e+ul+wl(e,/[svh]\w+-[tblr]{2}/,"tb-rl")+e;case 45:return fl+e+ul+wl(e,/[svh]\w+-[tblr]{2}/,"lr")+e}return fl+e+ul+e+e}return e}var uu=[function(e,t,n,r){if(e.length>-1&&!e.return)switch(e.type){case dl:e.return=lu(e.value,e.length);break;case gl:return eu([Ml(e,{value:wl(e.value,"@","@"+fl)})],r);case pl:if(e.length)return function(e,t){return e.map(t).join("")}(e.props,(function(t){switch(function(e,t){return(e=t.exec(e))?e[0]:e}(t,/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":return eu([Ml(e,{props:[wl(t,/:(read-\w+)/,":-moz-$1")]})],r);case"::placeholder":return eu([Ml(e,{props:[wl(t,/:(plac\w+)/,":-webkit-input-$1")]}),Ml(e,{props:[wl(t,/:(plac\w+)/,":-moz-$1")]}),Ml(e,{props:[wl(t,/:(plac\w+)/,ul+"input-$1")]})],r)}return""}))}}],cu=function(e){var t=e.key;if("css"===t){var n=document.querySelectorAll("style[data-emotion]:not([data-s])");Array.prototype.forEach.call(n,(function(e){-1!==e.getAttribute("data-emotion").indexOf(" ")&&(document.head.appendChild(e),e.setAttribute("data-s",""))}))}var r,i,o=e.stylisPlugins||uu,a={},s=[];r=e.container||document.head,Array.prototype.forEach.call(document.querySelectorAll('style[data-emotion^="'+t+' "]'),(function(e){for(var t=e.getAttribute("data-emotion").split(" "),n=1;n<t.length;n++)a[t[n]]=!0;s.push(e)}));var l,u,c=[tu,(u=function(e){l.insert(e)},function(e){e.root||(e=e.return)&&u(e)})],f=function(e){var t=Pl(e);return function(n,r,i,o){for(var a="",s=0;s<t;s++)a+=e[s](n,r,i,o)||"";return a}}([au,su].concat(o,c));i=function(e,t,n,r){l=n,eu(ql(e?e+"{"+t.styles+"}":t.styles),f),r&&(h.inserted[t.name]=!0)};var h={key:t,sheet:new ll({key:t,container:r,nonce:e.nonce,speedy:e.speedy,prepend:e.prepend,insertionPoint:e.insertionPoint}),nonce:e.nonce,inserted:a,registered:{},insert:i};return h.sheet.hydrate(s),h};var fu={animationIterationCount:1,aspectRatio:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},hu=/[A-Z]|^ms/g,pu=/_EMO_([^_]+?)_([^]*?)_EMO_/g,du=function(e){return 45===e.charCodeAt(1)},gu=function(e){return null!=e&&"boolean"!=typeof e},vu=nu((function(e){return du(e)?e:e.replace(hu,"-$&").toLowerCase()})),mu=function(e,t){switch(e){case"animation":case"animationName":if("string"==typeof t)return t.replace(pu,(function(e,t,n){return bu={name:t,styles:n,next:bu},t}))}return 1===fu[e]||du(e)||"number"!=typeof t||0===t?t:t+"px"};function yu(e,t,n){if(null==n)return"";if(void 0!==n.__emotion_styles)return n;switch(typeof n){case"boolean":return"";case"object":if(1===n.anim)return bu={name:n.name,styles:n.styles,next:bu},n.name;if(void 0!==n.styles){var r=n.next;if(void 0!==r)for(;void 0!==r;)bu={name:r.name,styles:r.styles,next:bu},r=r.next;return n.styles+";"}return function(e,t,n){var r="";if(Array.isArray(n))for(var i=0;i<n.length;i++)r+=yu(e,t,n[i])+";";else for(var o in n){var a=n[o];if("object"!=typeof a)null!=t&&void 0!==t[a]?r+=o+"{"+t[a]+"}":gu(a)&&(r+=vu(o)+":"+mu(o,a)+";");else if(!Array.isArray(a)||"string"!=typeof a[0]||null!=t&&void 0!==t[a[0]]){var s=yu(e,t,a);switch(o){case"animation":case"animationName":r+=vu(o)+":"+s+";";break;default:r+=o+"{"+s+"}"}}else for(var l=0;l<a.length;l++)gu(a[l])&&(r+=vu(o)+":"+mu(o,a[l])+";")}return r}(e,t,n);case"function":if(void 0!==e){var i=bu,o=n(e);return bu=i,yu(e,t,o)}}if(null==t)return n;var a=t[n];return void 0!==a?a:n}var bu,wu=/label:\s*([^\s;\n{]+)\s*(;|$)/g,xu=function(e,t,n){if(1===e.length&&"object"==typeof e[0]&&null!==e[0]&&void 0!==e[0].styles)return e[0];var r=!0,i="";bu=void 0;var o=e[0];null==o||void 0===o.raw?(r=!1,i+=yu(n,t,o)):i+=o[0];for(var a=1;a<e.length;a++)i+=yu(n,t,e[a]),r&&(i+=o[a]);wu.lastIndex=0;for(var s,l="";null!==(s=wu.exec(i));)l+="-"+s[1];return{name:function(e){for(var t,n=0,r=0,i=e.length;i>=4;++r,i-=4)t=1540483477*(65535&(t=255&e.charCodeAt(r)|(255&e.charCodeAt(++r))<<8|(255&e.charCodeAt(++r))<<16|(255&e.charCodeAt(++r))<<24))+(59797*(t>>>16)<<16),n=1540483477*(65535&(t^=t>>>24))+(59797*(t>>>16)<<16)^1540483477*(65535&n)+(59797*(n>>>16)<<16);switch(i){case 3:n^=(255&e.charCodeAt(r+2))<<16;case 2:n^=(255&e.charCodeAt(r+1))<<8;case 1:n=1540483477*(65535&(n^=255&e.charCodeAt(r)))+(59797*(n>>>16)<<16)}return(((n=1540483477*(65535&(n^=n>>>13))+(59797*(n>>>16)<<16))^n>>>15)>>>0).toString(36)}(i)+l,styles:i,next:bu}};function Eu(e,t,n){var r="";return n.split(" ").forEach((function(n){void 0!==e[n]?t.push(e[n]+";"):r+=n+" "})),r}var ku=function(e,t,n){!function(e,t,n){var r=e.key+"-"+t.name;!1===n&&void 0===e.registered[r]&&(e.registered[r]=t.styles)}(e,t,n);var r=e.key+"-"+t.name;if(void 0===e.inserted[t.name]){var i=t;do{e.insert(t===i?"."+r:"",i,e.sheet,!0),i=i.next}while(void 0!==i)}};function Su(e,t){if(void 0===e.inserted[t.name])return e.insert("",t,e.sheet,!0)}function Pu(e,t,n){var r=[],i=Eu(e,r,n);return r.length<2?n:i+t(r)}var Ou=function e(t){for(var n="",r=0;r<t.length;r++){var i=t[r];if(null!=i){var o=void 0;switch(typeof i){case"boolean":break;case"object":if(Array.isArray(i))o=e(i);else for(var a in o="",i)i[a]&&a&&(o&&(o+=" "),o+=a);break;default:o=i}o&&(n&&(n+=" "),n+=o)}}return n},Iu=function(e){var t=cu(e);t.sheet.speedy=function(e){this.isSpeedy=e},t.compat=!0;var n=function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];var i=xu(n,t.registered,void 0);return ku(t,i,!1),t.key+"-"+i.name};return{css:n,cx:function(){for(var e=arguments.length,r=new Array(e),i=0;i<e;i++)r[i]=arguments[i];return Pu(t.registered,n,Ou(r))},injectGlobal:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];var i=xu(n,t.registered);Su(t,i)},keyframes:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];var i=xu(n,t.registered),o="animation-"+i.name;return Su(t,{name:i.name,styles:"@keyframes "+o+"{"+i.styles+"}"}),o},hydrate:function(e){e.forEach((function(e){t.inserted[e]=!0}))},flush:function(){t.registered={},t.inserted={},t.sheet.flush()},sheet:t.sheet,cache:t,getRegisteredStyles:Eu.bind(null,t.registered),merge:Pu.bind(null,t.registered,n)}}({key:"css"}).injectGlobal;var Du=function(e,t){for(var n=-1,r=null==e?0:e.length;++n<r&&!1!==t(e[n],n,e););return e};var Au=function(e){return function(t,n,r){for(var i=-1,o=Object(t),a=r(t),s=a.length;s--;){var l=a[e?s:++i];if(!1===n(o[l],l,o))break}return t}}();var Cu=function(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r},Lu="object"==typeof y&&y&&y.Object===Object&&y,ju=Lu,zu="object"==typeof self&&self&&self.Object===Object&&self,Mu=ju||zu||Function("return this")(),Tu=Mu.Symbol,Ru=Tu,Hu=Object.prototype,Nu=Hu.hasOwnProperty,_u=Hu.toString,$u=Ru?Ru.toStringTag:void 0;var Bu=function(e){var t=Nu.call(e,$u),n=e[$u];try{e[$u]=void 0;var r=!0}catch(e){}var i=_u.call(e);return r&&(t?e[$u]=n:delete e[$u]),i},Fu=Object.prototype.toString;var Wu=Bu,Yu=function(e){return Fu.call(e)},Xu=Tu?Tu.toStringTag:void 0;var Uu=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":Xu&&Xu in Object(e)?Wu(e):Yu(e)};var Vu=function(e){return null!=e&&"object"==typeof e},Gu=Uu,qu=Vu;var Zu=function(e){return qu(e)&&"[object Arguments]"==Gu(e)},Ku=Vu,Qu=Object.prototype,Ju=Qu.hasOwnProperty,ec=Qu.propertyIsEnumerable,tc=Zu(function(){return arguments}())?Zu:function(e){return Ku(e)&&Ju.call(e,"callee")&&!ec.call(e,"callee")},nc=Array.isArray,rc={exports:{}};var ic=function(){return!1};!function(e,t){var n=Mu,r=ic,i=t&&!t.nodeType&&t,o=i&&e&&!e.nodeType&&e,a=o&&o.exports===i?n.Buffer:void 0,s=(a?a.isBuffer:void 0)||r;e.exports=s}(rc,rc.exports);var oc=rc.exports,ac=/^(?:0|[1-9]\d*)$/;var sc=function(e,t){var n=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==n||"symbol"!=n&&ac.test(e))&&e>-1&&e%1==0&&e<t};var lc=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991},uc=Uu,cc=lc,fc=Vu,hc={};hc["[object Float32Array]"]=hc["[object Float64Array]"]=hc["[object Int8Array]"]=hc["[object Int16Array]"]=hc["[object Int32Array]"]=hc["[object Uint8Array]"]=hc["[object Uint8ClampedArray]"]=hc["[object Uint16Array]"]=hc["[object Uint32Array]"]=!0,hc["[object Arguments]"]=hc["[object Array]"]=hc["[object ArrayBuffer]"]=hc["[object Boolean]"]=hc["[object DataView]"]=hc["[object Date]"]=hc["[object Error]"]=hc["[object Function]"]=hc["[object Map]"]=hc["[object Number]"]=hc["[object Object]"]=hc["[object RegExp]"]=hc["[object Set]"]=hc["[object String]"]=hc["[object WeakMap]"]=!1;var pc=function(e){return fc(e)&&cc(e.length)&&!!hc[uc(e)]};var dc=function(e){return function(t){return e(t)}},gc={exports:{}};!function(e,t){var n=Lu,r=t&&!t.nodeType&&t,i=r&&e&&!e.nodeType&&e,o=i&&i.exports===r&&n.process,a=function(){try{var e=i&&i.require&&i.require("util").types;return e||o&&o.binding&&o.binding("util")}catch(e){}}();e.exports=a}(gc,gc.exports);var vc=gc.exports,mc=pc,yc=dc,bc=vc&&vc.isTypedArray,wc=bc?yc(bc):mc,xc=Cu,Ec=tc,kc=nc,Sc=oc,Pc=sc,Oc=wc,Ic=Object.prototype.hasOwnProperty;var Dc=function(e,t){var n=kc(e),r=!n&&Ec(e),i=!n&&!r&&Sc(e),o=!n&&!r&&!i&&Oc(e),a=n||r||i||o,s=a?xc(e.length,String):[],l=s.length;for(var u in e)!t&&!Ic.call(e,u)||a&&("length"==u||i&&("offset"==u||"parent"==u)||o&&("buffer"==u||"byteLength"==u||"byteOffset"==u)||Pc(u,l))||s.push(u);return s},Ac=Object.prototype;var Cc=function(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||Ac)};var Lc=function(e,t){return function(n){return e(t(n))}},jc=Lc(Object.keys,Object),zc=Cc,Mc=jc,Tc=Object.prototype.hasOwnProperty;var Rc=function(e){if(!zc(e))return Mc(e);var t=[];for(var n in Object(e))Tc.call(e,n)&&"constructor"!=n&&t.push(n);return t};var Hc=Uu,Nc=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)};var _c=function(e){if(!Nc(e))return!1;var t=Hc(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t},$c=b(_c),Bc=_c,Fc=lc;var Wc=function(e){return null!=e&&Fc(e.length)&&!Bc(e)},Yc=Dc,Xc=Rc,Uc=Wc;var Vc=Au,Gc=function(e){return Uc(e)?Yc(e):Xc(e)};var qc=Wc;var Zc=function(e,t){return function(n,r){if(null==n)return n;if(!qc(n))return e(n,r);for(var i=n.length,o=t?i:-1,a=Object(n);(t?o--:++o<i)&&!1!==r(a[o],o,a););return n}}((function(e,t){return e&&Vc(e,t,Gc)}));var Kc=function(e){return e};var Qc=Du,Jc=Zc,ef=function(e){return"function"==typeof e?e:Kc},tf=nc;var nf=b((function(e,t){return(tf(e)?Qc:Jc)(e,ef(t))})),rf=Lc(Object.getPrototypeOf,Object),of=Uu,af=rf,sf=Vu,lf=Function.prototype,uf=Object.prototype,cf=lf.toString,ff=uf.hasOwnProperty,hf=cf.call(Object);var pf=b((function(e){if(!sf(e)||"[object Object]"!=of(e))return!1;var t=af(e);if(null===t)return!0;var n=ff.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&cf.call(n)==hf}));var df=function(e,t,n,r){var i=-1,o=null==e?0:e.length;for(r&&o&&(n=e[++i]);++i<o;)n=t(n,e[i],i,e);return n};var gf=function(e){return function(t){return null==e?void 0:e[t]}}({"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"s"});var vf=Uu,mf=Vu;var yf=function(e,t){for(var n=-1,r=null==e?0:e.length,i=Array(r);++n<r;)i[n]=t(e[n],n,e);return i},bf=nc,wf=function(e){return"symbol"==typeof e||mf(e)&&"[object Symbol]"==vf(e)},xf=Tu?Tu.prototype:void 0,Ef=xf?xf.toString:void 0;var kf=function e(t){if("string"==typeof t)return t;if(bf(t))return yf(t,e)+"";if(wf(t))return Ef?Ef.call(t):"";var n=t+"";return"0"==n&&1/t==-Infinity?"-0":n};var Sf=function(e){return null==e?"":kf(e)},Pf=gf,Of=Sf,If=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,Df=RegExp("[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]","g");var Af=function(e){return(e=Of(e))&&e.replace(If,Pf).replace(Df,"")},Cf=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;var Lf=function(e){return e.match(Cf)||[]},jf=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;var zf=function(e){return jf.test(e)},Mf="\\u2700-\\u27bf",Tf="a-z\\xdf-\\xf6\\xf8-\\xff",Rf="A-Z\\xc0-\\xd6\\xd8-\\xde",Hf="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",Nf="["+Hf+"]",_f="\\d+",$f="[\\u2700-\\u27bf]",Bf="["+Tf+"]",Ff="[^\\ud800-\\udfff"+Hf+_f+Mf+Tf+Rf+"]",Wf="(?:\\ud83c[\\udde6-\\uddff]){2}",Yf="[\\ud800-\\udbff][\\udc00-\\udfff]",Xf="["+Rf+"]",Uf="(?:"+Bf+"|"+Ff+")",Vf="(?:"+Xf+"|"+Ff+")",Gf="(?:['’](?:d|ll|m|re|s|t|ve))?",qf="(?:['’](?:D|LL|M|RE|S|T|VE))?",Zf="(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?",Kf="[\\ufe0e\\ufe0f]?",Qf=Kf+Zf+("(?:\\u200d(?:"+["[^\\ud800-\\udfff]",Wf,Yf].join("|")+")"+Kf+Zf+")*"),Jf="(?:"+[$f,Wf,Yf].join("|")+")"+Qf,eh=RegExp([Xf+"?"+Bf+"+"+Gf+"(?="+[Nf,Xf,"$"].join("|")+")",Vf+"+"+qf+"(?="+[Nf,Xf+Uf,"$"].join("|")+")",Xf+"?"+Uf+"+"+Gf,Xf+"+"+qf,"\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",_f,Jf].join("|"),"g");var th=Lf,nh=zf,rh=Sf,ih=function(e){return e.match(eh)||[]};var oh=df,ah=Af,sh=function(e,t,n){return e=rh(e),void 0===(t=n?void 0:t)?nh(e)?ih(e):th(e):e.match(t)||[]},lh=RegExp("['’]","g");var uh=b(function(e){return function(t){return oh(sh(ah(t).replace(lh,"")),e,"")}}((function(e,t,n){return e+(n?"-":"")+t.toLowerCase()}))),ch=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};r(this,e),a(this,"data",null),a(this,"canceled",!1),this.data=t}return o(e,[{key:"type",get:function(){return this.constructor.type}},{key:"cancelable",get:function(){return this.constructor.cancelable}},{key:"cancel",value:function(){this.cancelable&&(this.canceled=!0)}}]),e}();a(ch,"type","event"),a(ch,"cancelable",!1);var fh=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n,[{key:"pageX",get:function(){return this.data.pageX||null}},{key:"pageY",get:function(){return this.data.pageY||null}},{key:"target",get:function(){return this.data.target||null},set:function(e){this.data.target=e}},{key:"caller",get:function(){return this.data.caller||null}},{key:"originalEvent",get:function(){return this.data.originalEvent||null}},{key:"preventDefault",value:function(){var e;null===(e=this.originalEvent)||void 0===e||e.preventDefault()}},{key:"stopPropagation",value:function(){var e;null===(e=this.originalEvent)||void 0===e||e.stopPropagation()}}]),n}(ch),hh=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(fh);a(hh,"type","mouse:down"),a(hh,"cancelable",!0);var ph=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(fh);a(ph,"type","mouse:start"),a(ph,"cancelable",!0);var dh=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(fh);a(dh,"type","mouse:move");var gh=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(fh);a(gh,"type","mouse:stop");var vh=Function.prototype.bind.call(Function.prototype.call,[].slice),mh=function(e){e&&(e.previousDisplay?z(e,{display:e.previousDisplay}):e.style.display="")},yh=function(e){e&&"none"!==z(e,"display")&&(e.previousDisplay=z(e,"display")||null,e.style.display="none")},bh=function(e){return e?M(e,"onselectstart"in document.createElement("div")?"selectstart":"mousedown",(function(e){return e.preventDefault()})):null},wh=function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=e,r=[];n&&n.parentNode&&n.parentNode!==document&&(!t||!$(n.parentNode,t));)r.push(n.parentNode),n=n.parentNode;return r},xh=function(e){for(var t=0,n=e;n&&n.previousElementSibling;)n=n.previousElementSibling,t++;return t},Eh=function(e,t){return e!==t&&F(e,t)},kh=function(e,t){return e&&t&&t.parentNode&&t.parentNode.insertBefore(e,t),e},Sh=function(e,t){return e&&t&&t.parentNode&&(t.nextSibling?t.parentNode.insertBefore(e,t.nextSibling):t.parentNode.appendChild(e)),e},Ph=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,i=document.createElement(e);return pf(t)&&nf(t,(function(e,t){_(i,t,e)})),n&&1===n.nodeType&&n.appendChild(i),r&&(i.innerHTML=r),i},Oh=function(e){return new gh({target:e,originalEvent:Ih("mouseup",e)})},Ih=function(e,t){var n={button:0,bubbles:!0,cancelable:!0,ctrlKey:!1,altKey:!1,shiftKey:!1,metaKey:!1,clientX:1,clientY:1,screenX:0,screenY:0,view:document.defaultView,target:t,relatedTarget:document.documentElement};return new MouseEvent("mouseup",n)},Dh=function(e,t){if(e){var n=document.createEvent("HTMLEvents");n.initEvent(t,!1,!0),e.dispatchEvent(n)}},Ah=function(e){var t=function(e){void 0===e&&(e=E());try{var t=e.activeElement;return t&&t.nodeName?t:null}catch(t){return e.body}}();Eh(t,e.target)||t===document.body||Dh(t,"blur")},Ch=function(e){return/(left|right)/.test(z(e,"float")||/(inline|table-cell)/.test(z(e,"display")))},Lh=function(e){for(var t=[],n=[z(e,"borderTop"),z(e,"borderRight"),z(e,"borderBottom"),z(e,"borderLeft")],r=[z(e,"paddingTop"),z(e,"paddingRight"),z(e,"paddingBottom"),z(e,"paddingLeft")],i=0;i<4;i++)t[i]=(parseFloat(n[i])||0)+(parseFloat(r[i])||0);return{width:t[1]+t[3],height:t[0]+t[2]}},jh=function(e){var t=z(e,"position");/^(?:r|a|f)/.test(t)||z(e,{position:"relative"})},zh=function(e){var t=z(e,"position");/^(?:fixed|absolute)/.test(t)||z(e,{position:"absolute"})},Mh=function(e,t){return parseInt(z(e,t),10)||0},Th=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=z(e,"position"),r="absolute"===n;if("fixed"===n)return document;var i=t?/(auto|scroll|hidden)/:/(auto|scroll)/,o=wh(e).filter((function(e){return(!r||"static"!==z(e,"position"))&&i.test(z(e,"overflow")+z(e,"overflowX")+z(e,"overflowY"))}));return o.length>0?o[0]:document},Rh=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return e===document||e===document.documentElement||t&&e===document.body},Hh=null;Hh||(Hh=new(o((function e(){var t=this;r(this,e),a(this,"draggable",null),a(this,"droppables",{}),a(this,"getDroppables",(function(e){return t.droppables[e]||[]})),a(this,"addDroppable",(function(e,n){e&&n&&(t.droppables[n]||(t.droppables[n]=[]),t.droppables[n].push(e))})),a(this,"removeDroppable",(function(e,n){e&&t.droppables[n]&&(t.droppables[n]=t.droppables[n].filter((function(t){return t!==e})))})),a(this,"prepareOffsets",(function(e,n){var r=n.type;t.draggable=e,t.getDroppables(e.scope).forEach((function(t){t.refreshVisibility(),t.visible&&t.accept(e)&&("mouse:start"===r&&t.activate(n),t.refreshProportions())}))})),a(this,"onDragMove",(function(e,n){t.getDroppables(e.scope).forEach((function(t){var r=t.intersect(e,n);if(r&&!t.isOver||!r&&t.isOver){var i,o=t.element,a=t.options,s=a.greedy,l=a.scope;if(s){var u=wh(o).filter((function(e){return e[t.dataProperty]&&e[t.dataProperty].options.scope===l}));u.length>0&&((i=u[0][t.dataProperty]).greedyChild=r,r&&i.out(n))}r?t.over(n):t.out(n),i&&!r&&i.over(n)}}))})),a(this,"onDragStop",(function(e,n){t.prepareOffsets(e,n)})),a(this,"drop",(function(e,n){var r=null;return t.getDroppables(e.scope).forEach((function(t){t.intersect(e,n)&&(r=t.drop(n)||r),t.accept(e)&&t.deactivate(n)})),t.draggable=null,r}))}))));var Nh=Hh,_h=function(e){s(n,e);var t=h(n);function n(e){var i;return r(this,n),a(c(i=t.call(this,e)),"scrollParent",null),a(c(i),"scrollParentOffset",null),a(c(i),"onDragStart",(function(e){if(i.scroll){var t=i.container.helperAttrs;i.scrollParent||(i.scrollParent=t.scrollParent),Rh(i.scrollParent,!1)||(i.scrollParentOffset=Z(i.scrollParent))}})),a(c(i),"onDragMove",(function(e){if(i.scroll){var t=!1,n=e.sensorEvent,r=c(i),o=r.scrollParent,a=r.scrollParentOffset,s=i.container.helperSize,l=i.container.offset.click,u=i.container.options,f=u.axis,h=u.scrollSensitivity,p=u.scrollSpeed,d=n.pageX-l.left-(Rh(i.scrollParent,!1)?G(document):0),g=n.pageY-l.top-(Rh(i.scrollParent,!1)?q(document):0);Rh(i.scrollParent,!1)?(f&&"y"===f||(d<h?(G(document,G(document)-p),t=!0):window.innerWidth-(d+s.width)<h&&(G(document,G(document)+p),t=!0)),f&&"x"===f||(g<h?(q(document,q(document)-p),t=!0):window.innerHeight-(g+s.height)<h&&(q(document,q(document)+p),t=!0))):(f&&"y"===f||(a.left+o.offsetWidth-(d+s.width)<h?(o.scrollLeft=o.scrollLeft+p,t=!0):d-a.left<h&&(o.scrollLeft=o.scrollLeft-p,t=!0)),f&&"x"===f||(a.top+o.offsetHeight-(g+s.height)<h?(o.scrollTop=o.scrollTop+p,t=!0):g-a.top<h&&(o.scrollTop=o.scrollTop-p,t=!0))),t&&Nh.prepareOffsets(i.container,n)}})),i.attach(),i}return o(n,[{key:"supported",get:function(){return this.isDraggable()||this.isSortable()}},{key:"scroll",get:function(){return this.container.options.scroll}}]),n}(x),$h=function(e){s(n,e);var t=h(n);function n(e){var i;return r(this,n),a(c(i=t.call(this,e)),"constraintPosition",(function(e){var t=i.container.startEvent;return"y"===i.axis?e.pageX=t.pageX:"x"===i.axis&&(e.pageY=t.pageY),e})),i.attach(),i}return o(n,[{key:"supported",get:function(){return this.isDraggable()||this.isSortable()}},{key:"axis",get:function(){var e=this.container.options.axis;return void 0===e?null:e}}]),n}(x),Bh=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n,[{key:"sortable",get:function(){return this.data.sortable||null}}]),n}(ch);a(Bh,"type","sortable");var Fh=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(Bh);a(Fh,"type","sortable:init");var Wh=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n,[{key:"sensorEvent",get:function(){return this.data.sensorEvent||null}},{key:"draggable",get:function(){return this.data.draggable||null}},{key:"peerSortable",get:function(){return this.data.sortable||null}}]),n}(Bh);a(Wh,"type","sortable:activate");var Yh=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(Wh);a(Yh,"type","sortable:over");var Xh=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(Bh);a(Xh,"type","sortable:change");var Uh=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n,[{key:"item",get:function(){return this.data.item||null}},{key:"previousIndex",get:function(){return this.data.previousIndex||null}},{key:"peerSortable",get:function(){return this.data.peerSortable||null}}]),n}(Bh);a(Uh,"type","sortable:remove");var Vh=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n,[{key:"item",get:function(){return this.data.item||null}},{key:"newIndex",get:function(){return this.data.newIndex||null}},{key:"draggable",get:function(){return this.data.draggable||null}},{key:"peerSortable",get:function(){return this.data.peerSortable||null}}]),n}(Bh);a(Vh,"type","sortable:receive");var Gh=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n,[{key:"item",get:function(){return this.data.item||null}},{key:"previousIndex",get:function(){return this.data.previousIndex||null}},{key:"newIndex",get:function(){return this.data.newIndex||null}},{key:"peerSortable",get:function(){return this.data.peerSortable||null}}]),n}(Bh);a(Gh,"type","sortable:update");var qh=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(Wh);a(qh,"type","sortable:out");var Zh=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(Wh);a(Zh,"type","sortable:deactivate");var Kh=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(Bh);a(Kh,"type","sortable:destroy");var Qh="sortableInstance",Jh=["n","s","e","w","ne","nw","se","sw"],ep='<svg xmlns="http://www.w3.org/2000/svg" width="8" height="8" viewBox="0 0 16 16"><g><polygon points="16,0 16,16 0,0" fill="darkgray" /></g></svg>',tp='<svg xmlns="http://www.w3.org/2000/svg" width="8" height="8" viewBox="0 0 16 16"><g><polygon points="0,16 16,16 16,0" fill="darkgray" /></g></svg>',np='<svg xmlns="http://www.w3.org/2000/svg" width="8" height="8" viewBox="0 0 16 16"><g><polygon points="0,0 0,16 16,16" fill="darkgray" /></g></svg>',rp={n:{cursor:"n-resize",height:"7px",width:"100%",top:"-5px",left:"0"},s:{cursor:"s-resize",height:"7px",width:"100%",bottom:"-5px",left:"0"},e:{cursor:"e-resize",width:"7px",right:"-5px",top:"0",height:"100%"},w:{cursor:"w-resize",width:"7px",left:"-5px",top:"0",height:"100%"},nw:{cursor:"nw-resize",width:"12px",height:"12px",left:"1px",top:"1px",backgroundImage:"url('data:image/svg+xml;utf8,".concat(encodeURIComponent('<svg xmlns="http://www.w3.org/2000/svg" width="8" height="8" viewBox="0 0 16 16"><g><polygon points="0,0 0,16 16,0" fill="darkgray" /></g></svg>'),"')"),backgroundPosition:"center",backgroundRepeat:"no-repeat"},ne:{cursor:"ne-resize",width:"12px",height:"12px",right:"1px",top:"1px",backgroundImage:"url('data:image/svg+xml;utf8,".concat(encodeURIComponent(ep),"')"),backgroundPosition:"center",backgroundRepeat:"no-repeat"},se:{cursor:"se-resize",width:"12px",height:"12px",right:"1px",bottom:"1px",backgroundImage:"url('data:image/svg+xml;utf8,".concat(encodeURIComponent(tp),"')"),backgroundPosition:"center",backgroundRepeat:"no-repeat"},sw:{cursor:"sw-resize",width:"12px",height:"12px",left:"1px",bottom:"1px",backgroundImage:"url('data:image/svg+xml;utf8,".concat(encodeURIComponent(np),"')"),backgroundPosition:"center",backgroundRepeat:"no-repeat"}},ip=function(e){s(n,e);var t=h(n);function n(e){var i;return r(this,n),a(c(i=t.call(this,e)),"onDragStart",(function(e){i.connectToSortable&&(i.container.connectedSortables=[],Y(document,i.connectToSortable).forEach((function(t){var n=t[Qh];n&&!n.disabled&&(i.container.connectedSortables.push(n),n.refreshPositions(),n.trigger(new Wh({sortable:n,sensorEvent:e.sensorEvent,draggable:i.container})))})))})),a(c(i),"onDragMove",(function(e){var t=e.sensorEvent;i.connectToSortable&&i.container.connectedSortables.forEach((function(n){var r=!1,o=i.container,a=o.helperSize,s=o.position,l=i.container.offset,u=l.click,c=l.parent;n.helperSize=a,n.offset.click=u,n.position.absolute=s.absolute,n.intersectsWith(n.elementProportions)&&(r=!0,i.container.connectedSortables.forEach((function(e){e.helperSize=a,e.offset.click=u,e.position.absolute=s.absolute,e!==n&&e.intersectsWith(e.elementProportions)&&Eh(n.element,e.element)&&(r=!1)}))),r?(n.isDraggableOver||(i.container.previousHelperParent||(i.container.previousHelperParent=i.container.helper.parentNode),i.container.helper[Qh]=n,n.element.appendChild(i.container.helper),n.previousHelper=n.options.helper,n.options.helper=function(){return i.container.helper},n.currentItem=i.container.helper,n.connectedDraggable=i.container,t.target=n.currentItem,n.over(null,i.container),n.isDraggableOver=!0,n.onDragStart({detail:t},!0,!0),n.offset.click=u,n.offset.parent.left-=c.left-n.offset.parent.left,n.offset.parent.top-=c.top-n.offset.parent.top,i.container.connectedSortables.forEach((function(e){return e.refreshPositions()}))),n.currentItem&&(n.onDragMove({detail:t},!1,!0),e.position=n.position.current)):!r&&n.isDraggableOver&&(n.previousRevert=n.options.revert,n.options.revert=!1,n.out(null,i.container),n.isDraggableOver=!1,n.cancelHelperRemoval=n.helper===n.currentItem,n.placeholder&&n.placeholder.parentNode.removeChild(n.placeholder),n.onDragStop({detail:t},!0),n.options.helper=n.previousHelper,n.previousHelper=null,n.options.revert=n.previousRevert,n.previousRevert=null,i.container.previousHelperParent.appendChild(i.container.helper),i.container.helper[Qh]=null,i.container.calculateOffsets(t),i.container.calculatePosition(t),i.container.connectedSortables.forEach((function(e){return e.refreshPositions()})),e.position=i.container.position.current)}))})),a(c(i),"onDragStop",(function(e){var t=e.sensorEvent;i.connectToSortable&&(i.container.cancelHelperRemoval=!1,i.container.connectedSortables.forEach((function(n){n.isDraggableOver?(delete i.container.helper[Qh],i.container.cancelHelperRemoval=!0,n.cancelHelperRemoval=!1,n.options.helper=n.previousHelper,n.previousHelper=null,n.previousRevert=n.options.revert,n.options.revert=!1,e.droppedSortable=n,n.out(null,i.container),n.isDraggableOver=!1,n.currentItemStyle={position:z(n.placeholder,"position"),left:Mh(n.placeholder,"left"),top:Mh(n.placeholder,"top")},n.onDragStop({detail:t},!0),n.options.revert=n.previousRevert,n.previousRevert=null,n.currentItem=null,n.connectedDraggable=null,i.container.helper[Qh]=null,i.container.connectedSortables.forEach((function(e){return e.refreshPositions()}))):n.cancelHelperRemoval=!1,n.trigger(new Zh({sortable:n,sensorEvent:t,draggable:i.container})),n.currentItem=null,n.connectedDraggable=null})),i.container.connectedSortables=[])})),i.attach(),i}return o(n,[{key:"supported",get:function(){return this.isSortable()}},{key:"connectToSortable",get:function(){return this.container.options.connectToSortable||null}}]),n}(x);Qn({target:"Array",stat:!0},{isArray:or});var op=function(e){s(n,e);var t=h(n);function n(e){var i;return r(this,n),a(c(i=t.call(this,e)),"constraintPosition",(function(e){if(i.containment){var t=g(i.containment,4),n=t[0],r=t[1],o=t[2],a=t[3],s=i.container.containmentContainer,l=i.container.offset.click;if(s){var u=Z(s);n+=u.left,r+=u.top,o+=u.left,a+=u.top}e.pageX-l.left<n&&(e.pageX=n+l.left),e.pageY-l.top<r&&(e.pageY=r+l.top),e.pageX-l.left>o&&(e.pageX=o+l.left),e.pageY-l.top>a&&(e.pageY=a+l.top)}return e})),i.attach(),i}return o(n,[{key:"supported",get:function(){return this.isDraggable()||this.isSortable()}},{key:"containment",get:function(){if(void 0===this.container.containmentCoords){var e=this.container.options.containment,t=this.container.offset,n=t.parent,r=t.relative,i=this.container,o=i.helper,a=i.helperSize,s=i.margins;if("window"===e)this.container.containmentCoords=[window.pageXOffset-n.left-r.left,window.pageYOffset-n.top-r.top,window.pageXOffset+window.innerWidth-a.width-s.left,window.pageYOffset+window.innerHeight-a.height-s.top];else if("document"===e)this.container.containmentCoords=[0,0,ae(document)-a.width-s.left,K(document)-a.height-s.top];else if(Array.isArray(e)&&4===e.length)this.container.containmentCoords=e;else{var l="parent"===e?o.parentNode:document.querySelector(e);if(l){var u=/(scroll|auto)/.test(z(l,"overflow"));this.container.containmentContainer=l,this.container.containmentCoords=[Mh(l,"borderLeftWidth")+Mh(l,"paddingLeft"),Mh(l,"borderTopWidth")+Mh(l,"paddingTop"),(u?Math.max(l.scrollWidth,l.offsetWidth):l.offsetWidth)-Mh(l,"borderRightWidth")-Mh(l,"paddingRight")-a.width-s.left-s.right,(u?Math.max(l.scrollHeight,l.offsetHeight):l.offsetHeight)-Mh(l,"borderBottomWidth")-Mh(l,"paddingBottom")-a.height-s.top-s.bottom]}else this.container.containmentCoords=null}}return this.container.containmentCoords}}]),n}(x),ap=function(e){s(n,e);var t=h(n);function n(e){var i;return r(this,n),a(c(i=t.call(this,e)),"constraintPosition",(function(e){if(i.grid){var t,n,r,o,a=g(i.grid,2),s=a[0],l=a[1],u=i.container,c=u.containmentCoords,f=u.containmentContainer,h=u.startEvent,p=i.container.offset.click;if(c){var d=g(c,4);if(t=d[0],r=d[1],n=d[2],o=d[3],c&&f){var v=Z(f);t+=v.left,r+=v.top,n+=v.left,o+=v.top}}var m=s?h.pageX+Math.round((e.pageX-h.pageX)/s)*s:h.pageX,y=l?h.pageY+Math.round((e.pageY-h.pageY)/l)*l:h.pageY;c?(m-p.left>=t||m-p.left>n?e.pageX=m:e.pageX=m+s,y-p.top>=r||y-p.top>o?e.pageY=y:e.pageY=y+l):(e.pageX=m,e.pageY=y)}return e})),i.attach(),i}return o(n,[{key:"supported",get:function(){return this.isDraggable()||this.isSortable()}},{key:"grid",get:function(){var e=this.container.options;return Array.isArray(e.grid)&&2===e.grid.length?e.grid:null}}]),n}(x),sp=function(e){s(n,e);var t=h(n);function n(e){var i;return r(this,n),a(c(i=t.call(this,e)),"containmentContainer",null),a(c(i),"containmentAttrs",{offset:null,position:null,size:null}),a(c(i),"onDragStart",(function(e){var t=i.container.helper,n=i.container.options.containment;if("document"===n)i.containmentContainer=document,i.containmentAttrs.offset={left:0,top:0},i.containmentAttrs.position={left:0,top:0},i.containmentAttrs.size={width:ae(document),height:K(document)||document.body.parentNode.scrollHeight};else{var r=[],o="parent"===n?t.parentNode:document.querySelector(n);o&&(i.containmentContainer=o,["Top","Right","Bottom","Left"].forEach((function(e){r[e.toLowerCase()]=Mh(o,"padding".concat(e))})),i.containmentAttrs.offset=Z(o),i.containmentAttrs.position=te(o),i.containmentAttrs.size={width:ae(o)-r.left-r.right,height:K(o)-r.top-r.bottom})}})),a(c(i),"onDragMove",(function(e){var t=i.container.offset.helper,n={left:0,top:0},r=e.size,o=e.position,a=i.container,s=a.aspectRatio,l=a.helper,u=i.container.options.containment,f=i.container.currentAttrs,h=f.size,p=f.position,d=c(i).containmentContainer,g=i.containmentAttrs,v=g.size,m=g.offset;d&&(d!==document&&"static"===z(d,"position")&&(n=m),p.left<0&&(r.width+=p.left,s&&(r.height=r.width/s),o.left=0),p.top<0&&(r.height+=p.top,s&&(r.width=r.height*s),o.top=0),"parent"===u&&/absolute|relative/.test(z(d,"position"))?(t.left=n.left+p.left,t.top=n.top+p.top):t=Z(l),h.width+(t.left-n.left)>=v.width&&(r.width=v.width-(t.left-n.left),s&&(r.height=h.width/s)),h.height+(t.top-n.top)>=v.height&&(r.height=v.height-(t.top-n.top),s&&(r.width=h.height*s)))})),i.attach(),i}return o(n,[{key:"supported",get:function(){return this.isResizable()}}]),n}(x),lp=function(e){s(n,e);var t=h(n);function n(e){var i;return r(this,n),a(c(i=t.call(this,e)),"onDragMove",(function(e){if(i.grid){var t=g(i.grid,2),n=t[0],r=t[1],o=e.size,a=e.position,s=i.container,l=s.currentDirection,u=s.helper,c=i.container.originalAttrs,f=c.size,h=c.position,p=i.container.options,d=p.minWidth,v=p.maxWidth,m=p.minHeight,y=p.maxHeight,b={x:f.width+Math.round((o.width-f.width)/n)*n,y:f.height+Math.round((o.height-f.height)/r)*r},w={width:b.x,height:b.y};if(d&&d>w.width&&(w.width+=n),v&&v<w.width&&(w.width-=n),m&&m>w.height&&(w.height+=r),y&&y<w.height&&(w.height-=r),/^(se|s|e)$/.test(l))o.width=w.width,o.height=w.height;else if(/^(ne)$/.test(l))o.width=w.width,o.height=w.height,a.top=h.top-b.y;else if(/^(sw)$/.test(l))o.width=w.width,o.height=w.height,a.left=h.left-b.x;else{var x=Lh(u);w.width-n>0?(o.width=w.width,a.left=h.left-b.x):(o.width=n-x.width,a.left=h.left+f.width-w.width),w.height-r>0?(o.height=w.height,a.top=h.top-b.y):(o.height=r-x.height,a.top=h.top+f.height-w.height)}}})),i.attach(),i}return o(n,[{key:"supported",get:function(){return this.isResizable()}},{key:"grid",get:function(){var e=this.container.options;return Array.isArray(e.grid)&&2===e.grid.length?e.grid:null}}]),n}(x),up={update:null,begin:null,loopBegin:null,changeBegin:null,change:null,changeComplete:null,loopComplete:null,complete:null,loop:1,direction:"normal",autoplay:!0,timelineOffset:0},cp={duration:1e3,delay:0,endDelay:0,easing:"easeOutElastic(1, .5)",round:0},fp=["translateX","translateY","translateZ","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","perspective","matrix","matrix3d"],hp={CSS:{},springs:{}};function pp(e,t,n){return Math.min(Math.max(e,t),n)}function dp(e,t){return e.indexOf(t)>-1}function gp(e,t){return e.apply(null,t)}var vp={arr:function(e){return Array.isArray(e)},obj:function(e){return dp(Object.prototype.toString.call(e),"Object")},pth:function(e){return vp.obj(e)&&e.hasOwnProperty("totalLength")},svg:function(e){return e instanceof SVGElement},inp:function(e){return e instanceof HTMLInputElement},dom:function(e){return e.nodeType||vp.svg(e)},str:function(e){return"string"==typeof e},fnc:function(e){return"function"==typeof e},und:function(e){return void 0===e},nil:function(e){return vp.und(e)||null===e},hex:function(e){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(e)},rgb:function(e){return/^rgb/.test(e)},hsl:function(e){return/^hsl/.test(e)},col:function(e){return vp.hex(e)||vp.rgb(e)||vp.hsl(e)},key:function(e){return!up.hasOwnProperty(e)&&!cp.hasOwnProperty(e)&&"targets"!==e&&"keyframes"!==e}};function mp(e){var t=/\(([^)]+)\)/.exec(e);return t?t[1].split(",").map((function(e){return parseFloat(e)})):[]}function yp(e,t){var n=mp(e),r=pp(vp.und(n[0])?1:n[0],.1,100),i=pp(vp.und(n[1])?100:n[1],.1,100),o=pp(vp.und(n[2])?10:n[2],.1,100),a=pp(vp.und(n[3])?0:n[3],.1,100),s=Math.sqrt(i/r),l=o/(2*Math.sqrt(i*r)),u=l<1?s*Math.sqrt(1-l*l):0,c=l<1?(l*s-a)/u:-a+s;function f(e){var n=t?t*e/1e3:e;return n=l<1?Math.exp(-n*l*s)*(1*Math.cos(u*n)+c*Math.sin(u*n)):(1+c*n)*Math.exp(-n*s),0===e||1===e?e:1-n}return t?f:function(){var t=hp.springs[e];if(t)return t;for(var n=1/6,r=0,i=0;;)if(1===f(r+=n)){if(++i>=16)break}else i=0;var o=r*n*1e3;return hp.springs[e]=o,o}}function bp(e){return void 0===e&&(e=10),function(t){return Math.ceil(pp(t,1e-6,1)*e)*(1/e)}}var wp,xp,Ep=function(){var e=.1;function t(e,t){return 1-3*t+3*e}function n(e,t){return 3*t-6*e}function r(e){return 3*e}function i(e,i,o){return((t(i,o)*e+n(i,o))*e+r(i))*e}function o(e,i,o){return 3*t(i,o)*e*e+2*n(i,o)*e+r(i)}return function(t,n,r,a){if(0<=t&&t<=1&&0<=r&&r<=1){var s=new Float32Array(11);if(t!==n||r!==a)for(var l=0;l<11;++l)s[l]=i(l*e,t,r);return function(e){return t===n&&r===a||0===e||1===e?e:i(u(e),n,a)}}function u(n){for(var a=0,l=1;10!==l&&s[l]<=n;++l)a+=e;--l;var u=a+(n-s[l])/(s[l+1]-s[l])*e,c=o(u,t,r);return c>=.001?function(e,t,n,r){for(var a=0;a<4;++a){var s=o(t,n,r);if(0===s)return t;t-=(i(t,n,r)-e)/s}return t}(n,u,t,r):0===c?u:function(e,t,n,r,o){var a,s,l=0;do{(a=i(s=t+(n-t)/2,r,o)-e)>0?n=s:t=s}while(Math.abs(a)>1e-7&&++l<10);return s}(n,a,a+e,t,r)}}}(),kp=(wp={linear:function(){return function(e){return e}}},xp={Sine:function(){return function(e){return 1-Math.cos(e*Math.PI/2)}},Circ:function(){return function(e){return 1-Math.sqrt(1-e*e)}},Back:function(){return function(e){return e*e*(3*e-2)}},Bounce:function(){return function(e){for(var t,n=4;e<((t=Math.pow(2,--n))-1)/11;);return 1/Math.pow(4,3-n)-7.5625*Math.pow((3*t-2)/22-e,2)}},Elastic:function(e,t){void 0===e&&(e=1),void 0===t&&(t=.5);var n=pp(e,1,10),r=pp(t,.1,2);return function(e){return 0===e||1===e?e:-n*Math.pow(2,10*(e-1))*Math.sin((e-1-r/(2*Math.PI)*Math.asin(1/n))*(2*Math.PI)/r)}}},["Quad","Cubic","Quart","Quint","Expo"].forEach((function(e,t){xp[e]=function(){return function(e){return Math.pow(e,t+2)}}})),Object.keys(xp).forEach((function(e){var t=xp[e];wp["easeIn"+e]=t,wp["easeOut"+e]=function(e,n){return function(r){return 1-t(e,n)(1-r)}},wp["easeInOut"+e]=function(e,n){return function(r){return r<.5?t(e,n)(2*r)/2:1-t(e,n)(-2*r+2)/2}},wp["easeOutIn"+e]=function(e,n){return function(r){return r<.5?(1-t(e,n)(1-2*r))/2:(t(e,n)(2*r-1)+1)/2}}})),wp);function Sp(e,t){if(vp.fnc(e))return e;var n=e.split("(")[0],r=kp[n],i=mp(e);switch(n){case"spring":return yp(e,t);case"cubicBezier":return gp(Ep,i);case"steps":return gp(bp,i);default:return gp(r,i)}}function Pp(e){try{return document.querySelectorAll(e)}catch(e){return}}function Op(e,t){for(var n=e.length,r=arguments.length>=2?arguments[1]:void 0,i=[],o=0;o<n;o++)if(o in e){var a=e[o];t.call(r,a,o,e)&&i.push(a)}return i}function Ip(e){return e.reduce((function(e,t){return e.concat(vp.arr(t)?Ip(t):t)}),[])}function Dp(e){return vp.arr(e)?e:(vp.str(e)&&(e=Pp(e)||e),e instanceof NodeList||e instanceof HTMLCollection?[].slice.call(e):[e])}function Ap(e,t){return e.some((function(e){return e===t}))}function Cp(e){var t={};for(var n in e)t[n]=e[n];return t}function Lp(e,t){var n=Cp(e);for(var r in e)n[r]=t.hasOwnProperty(r)?t[r]:e[r];return n}function jp(e,t){var n=Cp(e);for(var r in t)n[r]=vp.und(e[r])?t[r]:e[r];return n}function zp(e){return vp.rgb(e)?(n=/rgb\((\d+,\s*[\d]+,\s*[\d]+)\)/g.exec(t=e))?"rgba("+n[1]+",1)":t:vp.hex(e)?function(e){var t=e.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,(function(e,t,n,r){return t+t+n+n+r+r})),n=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);return"rgba("+parseInt(n[1],16)+","+parseInt(n[2],16)+","+parseInt(n[3],16)+",1)"}(e):vp.hsl(e)?function(e){var t,n,r,i=/hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/g.exec(e)||/hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*([\d.]+)\)/g.exec(e),o=parseInt(i[1],10)/360,a=parseInt(i[2],10)/100,s=parseInt(i[3],10)/100,l=i[4]||1;function u(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+(t-e)*(2/3-n)*6:e}if(0==a)t=n=r=s;else{var c=s<.5?s*(1+a):s+a-s*a,f=2*s-c;t=u(f,c,o+1/3),n=u(f,c,o),r=u(f,c,o-1/3)}return"rgba("+255*t+","+255*n+","+255*r+","+l+")"}(e):void 0;var t,n}function Mp(e){var t=/[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(e);if(t)return t[1]}function Tp(e,t){return vp.fnc(e)?e(t.target,t.id,t.total):e}function Rp(e,t){return e.getAttribute(t)}function Hp(e,t,n){if(Ap([n,"deg","rad","turn"],Mp(t)))return t;var r=hp.CSS[t+n];if(!vp.und(r))return r;var i=document.createElement(e.tagName),o=e.parentNode&&e.parentNode!==document?e.parentNode:document.body;o.appendChild(i),i.style.position="absolute",i.style.width=100+n;var a=100/i.offsetWidth;o.removeChild(i);var s=a*parseFloat(t);return hp.CSS[t+n]=s,s}function Np(e,t,n){if(t in e.style){var r=t.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase(),i=e.style[t]||getComputedStyle(e).getPropertyValue(r)||"0";return n?Hp(e,i,n):i}}function _p(e,t){return vp.dom(e)&&!vp.inp(e)&&(!vp.nil(Rp(e,t))||vp.svg(e)&&e[t])?"attribute":vp.dom(e)&&Ap(fp,t)?"transform":vp.dom(e)&&"transform"!==t&&Np(e,t)?"css":null!=e[t]?"object":void 0}function $p(e){if(vp.dom(e)){for(var t,n=e.style.transform||"",r=/(\w+)\(([^)]*)\)/g,i=new Map;t=r.exec(n);)i.set(t[1],t[2]);return i}}function Bp(e,t,n,r){var i=dp(t,"scale")?1:0+function(e){return dp(e,"translate")||"perspective"===e?"px":dp(e,"rotate")||dp(e,"skew")?"deg":void 0}(t),o=$p(e).get(t)||i;return n&&(n.transforms.list.set(t,o),n.transforms.last=t),r?Hp(e,o,r):o}function Fp(e,t,n,r){switch(_p(e,t)){case"transform":return Bp(e,t,r,n);case"css":return Np(e,t,n);case"attribute":return Rp(e,t);default:return e[t]||0}}function Wp(e,t){var n=/^(\*=|\+=|-=)/.exec(e);if(!n)return e;var r=Mp(e)||0,i=parseFloat(t),o=parseFloat(e.replace(n[0],""));switch(n[0][0]){case"+":return i+o+r;case"-":return i-o+r;case"*":return i*o+r}}function Yp(e,t){if(vp.col(e))return zp(e);if(/\s/g.test(e))return e;var n=Mp(e),r=n?e.substr(0,e.length-n.length):e;return t?r+t:r}function Xp(e,t){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2))}function Up(e){for(var t,n=e.points,r=0,i=0;i<n.numberOfItems;i++){var o=n.getItem(i);i>0&&(r+=Xp(t,o)),t=o}return r}function Vp(e){if(e.getTotalLength)return e.getTotalLength();switch(e.tagName.toLowerCase()){case"circle":return function(e){return 2*Math.PI*Rp(e,"r")}(e);case"rect":return function(e){return 2*Rp(e,"width")+2*Rp(e,"height")}(e);case"line":return function(e){return Xp({x:Rp(e,"x1"),y:Rp(e,"y1")},{x:Rp(e,"x2"),y:Rp(e,"y2")})}(e);case"polyline":return Up(e);case"polygon":return function(e){var t=e.points;return Up(e)+Xp(t.getItem(t.numberOfItems-1),t.getItem(0))}(e)}}function Gp(e,t){var n=t||{},r=n.el||function(e){for(var t=e.parentNode;vp.svg(t)&&vp.svg(t.parentNode);)t=t.parentNode;return t}(e),i=r.getBoundingClientRect(),o=Rp(r,"viewBox"),a=i.width,s=i.height,l=n.viewBox||(o?o.split(" "):[0,0,a,s]);return{el:r,viewBox:l,x:l[0]/1,y:l[1]/1,w:a,h:s,vW:l[2],vH:l[3]}}function qp(e,t,n){function r(n){void 0===n&&(n=0);var r=t+n>=1?t+n:0;return e.el.getPointAtLength(r)}var i=Gp(e.el,e.svg),o=r(),a=r(-1),s=r(1),l=n?1:i.w/i.vW,u=n?1:i.h/i.vH;switch(e.property){case"x":return(o.x-i.x)*l;case"y":return(o.y-i.y)*u;case"angle":return 180*Math.atan2(s.y-a.y,s.x-a.x)/Math.PI}}function Zp(e,t){var n=/[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?/g,r=Yp(vp.pth(e)?e.totalLength:e,t)+"";return{original:r,numbers:r.match(n)?r.match(n).map(Number):[0],strings:vp.str(e)||t?r.split(n):[]}}function Kp(e){return Op(e?Ip(vp.arr(e)?e.map(Dp):Dp(e)):[],(function(e,t,n){return n.indexOf(e)===t}))}function Qp(e){var t=Kp(e);return t.map((function(e,n){return{target:e,id:n,total:t.length,transforms:{list:$p(e)}}}))}function Jp(e,t){var n=Cp(t);if(/^spring/.test(n.easing)&&(n.duration=yp(n.easing)),vp.arr(e)){var r=e.length;2===r&&!vp.obj(e[0])?e={value:e}:vp.fnc(t.duration)||(n.duration=t.duration/r)}var i=vp.arr(e)?e:[e];return i.map((function(e,n){var r=vp.obj(e)&&!vp.pth(e)?e:{value:e};return vp.und(r.delay)&&(r.delay=n?0:t.delay),vp.und(r.endDelay)&&(r.endDelay=n===i.length-1?t.endDelay:0),r})).map((function(e){return jp(e,n)}))}function ed(e,t){var n=[],r=t.keyframes;for(var i in r&&(t=jp(function(e){for(var t=Op(Ip(e.map((function(e){return Object.keys(e)}))),(function(e){return vp.key(e)})).reduce((function(e,t){return e.indexOf(t)<0&&e.push(t),e}),[]),n={},r=function(r){var i=t[r];n[i]=e.map((function(e){var t={};for(var n in e)vp.key(n)?n==i&&(t.value=e[n]):t[n]=e[n];return t}))},i=0;i<t.length;i++)r(i);return n}(r),t)),t)vp.key(i)&&n.push({name:i,tweens:Jp(t[i],e)});return n}function td(e,t){var n;return e.tweens.map((function(r){var i=function(e,t){var n={};for(var r in e){var i=Tp(e[r],t);vp.arr(i)&&1===(i=i.map((function(e){return Tp(e,t)}))).length&&(i=i[0]),n[r]=i}return n.duration=parseFloat(n.duration),n.delay=parseFloat(n.delay),n}(r,t),o=i.value,a=vp.arr(o)?o[1]:o,s=Mp(a),l=Fp(t.target,e.name,s,t),u=n?n.to.original:l,c=vp.arr(o)?o[0]:u,f=Mp(c)||Mp(l),h=s||f;return vp.und(a)&&(a=u),i.from=Zp(c,h),i.to=Zp(Wp(a,c),h),i.start=n?n.end:0,i.end=i.start+i.delay+i.duration+i.endDelay,i.easing=Sp(i.easing,i.duration),i.isPath=vp.pth(o),i.isPathTargetInsideSVG=i.isPath&&vp.svg(t.target),i.isColor=vp.col(i.from.original),i.isColor&&(i.round=1),n=i,i}))}var nd={css:function(e,t,n){return e.style[t]=n},attribute:function(e,t,n){return e.setAttribute(t,n)},object:function(e,t,n){return e[t]=n},transform:function(e,t,n,r,i){if(r.list.set(t,n),t===r.last||i){var o="";r.list.forEach((function(e,t){o+=t+"("+e+") "})),e.style.transform=o}}};function rd(e,t){Qp(e).forEach((function(e){for(var n in t){var r=Tp(t[n],e),i=e.target,o=Mp(r),a=Fp(i,n,o,e),s=Wp(Yp(r,o||Mp(a)),a),l=_p(i,n);nd[l](i,n,s,e.transforms,!0)}}))}function id(e,t){return Op(Ip(e.map((function(e){return t.map((function(t){return function(e,t){var n=_p(e.target,t.name);if(n){var r=td(t,e),i=r[r.length-1];return{type:n,property:t.name,animatable:e,tweens:r,duration:i.end,delay:r[0].delay,endDelay:i.endDelay}}}(e,t)}))}))),(function(e){return!vp.und(e)}))}function od(e,t){var n=e.length,r=function(e){return e.timelineOffset?e.timelineOffset:0},i={};return i.duration=n?Math.max.apply(Math,e.map((function(e){return r(e)+e.duration}))):t.duration,i.delay=n?Math.min.apply(Math,e.map((function(e){return r(e)+e.delay}))):t.delay,i.endDelay=n?i.duration-Math.max.apply(Math,e.map((function(e){return r(e)+e.duration-e.endDelay}))):t.endDelay,i}var ad=0;var sd=[],ld=function(){var e;function t(n){for(var r=sd.length,i=0;i<r;){var o=sd[i];o.paused?(sd.splice(i,1),r--):(o.tick(n),i++)}e=i>0?requestAnimationFrame(t):void 0}return"undefined"!=typeof document&&document.addEventListener("visibilitychange",(function(){cd.suspendWhenDocumentHidden&&(ud()?e=cancelAnimationFrame(e):(sd.forEach((function(e){return e._onDocumentVisibility()})),ld()))})),function(){e||ud()&&cd.suspendWhenDocumentHidden||!(sd.length>0)||(e=requestAnimationFrame(t))}}();function ud(){return!!document&&document.hidden}function cd(e){void 0===e&&(e={});var t,n=0,r=0,i=0,o=0,a=null;function s(e){var t=window.Promise&&new Promise((function(e){return a=e}));return e.finished=t,t}var l=function(e){var t=Lp(up,e),n=Lp(cp,e),r=ed(n,e),i=Qp(e.targets),o=id(i,r),a=od(o,n),s=ad;return ad++,jp(t,{id:s,children:[],animatables:i,animations:o,duration:a.duration,delay:a.delay,endDelay:a.endDelay})}(e);function u(){var e=l.direction;"alternate"!==e&&(l.direction="normal"!==e?"normal":"reverse"),l.reversed=!l.reversed,t.forEach((function(e){return e.reversed=l.reversed}))}function c(e){return l.reversed?l.duration-e:e}function f(){n=0,r=c(l.currentTime)*(1/cd.speed)}function h(e,t){t&&t.seek(e-t.timelineOffset)}function p(e){for(var t=0,n=l.animations,r=n.length;t<r;){var i=n[t],o=i.animatable,a=i.tweens,s=a.length-1,u=a[s];s&&(u=Op(a,(function(t){return e<t.end}))[0]||u);for(var c=pp(e-u.start-u.delay,0,u.duration)/u.duration,f=isNaN(c)?1:u.easing(c),h=u.to.strings,p=u.round,d=[],g=u.to.numbers.length,v=void 0,m=0;m<g;m++){var y=void 0,b=u.to.numbers[m],w=u.from.numbers[m]||0;y=u.isPath?qp(u.value,f*b,u.isPathTargetInsideSVG):w+f*(b-w),p&&(u.isColor&&m>2||(y=Math.round(y*p)/p)),d.push(y)}var x=h.length;if(x){v=h[0];for(var E=0;E<x;E++){h[E];var k=h[E+1],S=d[E];isNaN(S)||(v+=k?S+k:S+" ")}}else v=d[0];nd[i.type](o.target,i.property,v,o.transforms),i.currentValue=v,t++}}function d(e){l[e]&&!l.passThrough&&l[e](l)}function g(e){var f=l.duration,g=l.delay,v=f-l.endDelay,m=c(e);l.progress=pp(m/f*100,0,100),l.reversePlayback=m<l.currentTime,t&&function(e){if(l.reversePlayback)for(var n=o;n--;)h(e,t[n]);else for(var r=0;r<o;r++)h(e,t[r])}(m),!l.began&&l.currentTime>0&&(l.began=!0,d("begin")),!l.loopBegan&&l.currentTime>0&&(l.loopBegan=!0,d("loopBegin")),m<=g&&0!==l.currentTime&&p(0),(m>=v&&l.currentTime!==f||!f)&&p(f),m>g&&m<v?(l.changeBegan||(l.changeBegan=!0,l.changeCompleted=!1,d("changeBegin")),d("change"),p(m)):l.changeBegan&&(l.changeCompleted=!0,l.changeBegan=!1,d("changeComplete")),l.currentTime=pp(m,0,f),l.began&&d("update"),e>=f&&(r=0,l.remaining&&!0!==l.remaining&&l.remaining--,l.remaining?(n=i,d("loopComplete"),l.loopBegan=!1,"alternate"===l.direction&&u()):(l.paused=!0,l.completed||(l.completed=!0,d("loopComplete"),d("complete"),!l.passThrough&&"Promise"in window&&(a(),s(l)))))}return s(l),l.reset=function(){var e=l.direction;l.passThrough=!1,l.currentTime=0,l.progress=0,l.paused=!0,l.began=!1,l.loopBegan=!1,l.changeBegan=!1,l.completed=!1,l.changeCompleted=!1,l.reversePlayback=!1,l.reversed="reverse"===e,l.remaining=l.loop,t=l.children;for(var n=o=t.length;n--;)l.children[n].reset();(l.reversed&&!0!==l.loop||"alternate"===e&&1===l.loop)&&l.remaining++,p(l.reversed?l.duration:0)},l._onDocumentVisibility=f,l.set=function(e,t){return rd(e,t),l},l.tick=function(e){i=e,n||(n=i),g((i+(r-n))*cd.speed)},l.seek=function(e){g(c(e))},l.pause=function(){l.paused=!0,f()},l.play=function(){l.paused&&(l.completed&&l.reset(),l.paused=!1,sd.push(l),f(),ld())},l.reverse=function(){u(),l.completed=!l.reversed,f()},l.restart=function(){l.reset(),l.play()},l.remove=function(e){hd(Kp(e),l)},l.reset(),l.autoplay&&l.play(),l}function fd(e,t){for(var n=t.length;n--;)Ap(e,t[n].animatable.target)&&t.splice(n,1)}function hd(e,t){var n=t.animations,r=t.children;fd(e,n);for(var i=r.length;i--;){var o=r[i],a=o.animations;fd(e,a),a.length||o.children.length||r.splice(i,1)}n.length||r.length||t.pause()}cd.version="3.2.1",cd.speed=1,cd.suspendWhenDocumentHidden=!0,cd.running=sd,cd.remove=function(e){for(var t=Kp(e),n=sd.length;n--;){hd(t,sd[n])}},cd.get=Fp,cd.set=rd,cd.convertPx=Hp,cd.path=function(e,t){var n=vp.str(e)?Pp(e)[0]:e,r=t||100;return function(e){return{property:e,el:n,svg:Gp(n),totalLength:Vp(n)*(r/100)}}},cd.setDashoffset=function(e){var t=Vp(e);return e.setAttribute("stroke-dasharray",t),t},cd.stagger=function(e,t){void 0===t&&(t={});var n=t.direction||"normal",r=t.easing?Sp(t.easing):null,i=t.grid,o=t.axis,a=t.from||0,s="first"===a,l="center"===a,u="last"===a,c=vp.arr(e),f=c?parseFloat(e[0]):parseFloat(e),h=c?parseFloat(e[1]):0,p=Mp(c?e[1]:e)||0,d=t.start||0+(c?f:0),g=[],v=0;return function(e,t,m){if(s&&(a=0),l&&(a=(m-1)/2),u&&(a=m-1),!g.length){for(var y=0;y<m;y++){if(i){var b=l?(i[0]-1)/2:a%i[0],w=l?(i[1]-1)/2:Math.floor(a/i[0]),x=b-y%i[0],E=w-Math.floor(y/i[0]),k=Math.sqrt(x*x+E*E);"x"===o&&(k=-x),"y"===o&&(k=-E),g.push(k)}else g.push(Math.abs(a-y));v=Math.max.apply(Math,g)}r&&(g=g.map((function(e){return r(e/v)*v}))),"reverse"===n&&(g=g.map((function(e){return o?e<0?-1*e:-e:Math.abs(v-e)})))}return d+(c?(h-f)/v:f)*(Math.round(100*g[t])/100)+p}},cd.timeline=function(e){void 0===e&&(e={});var t=cd(e);return t.duration=0,t.add=function(n,r){var i=sd.indexOf(t),o=t.children;function a(e){e.passThrough=!0}i>-1&&sd.splice(i,1);for(var s=0;s<o.length;s++)a(o[s]);var l=jp(n,Lp(cp,e));l.targets=l.targets||e.targets;var u=t.duration;l.autoplay=!1,l.direction=t.direction,l.timelineOffset=vp.und(r)?u:Wp(r,u),a(t),t.seek(l.timelineOffset);var c=cd(l);a(c),o.push(c);var f=od(o,e);return t.delay=f.delay,t.endDelay=f.endDelay,t.duration=f.duration,t.seek(0),t.reset(),t.autoplay&&t.play(),t},t},cd.easing=Sp,cd.penner=kp,cd.random=function(e,t){return Math.floor(Math.random()*(t-e+1))+e};var pd=function(e){s(i,e);var t=h(i);function i(e){var o;return r(this,i),a(c(o=t.call(this,e)),"onDragStop",(function(e){var t=o.container.options,r=t.animate,i=t.animateDuration;if(r){var a={},s=o.container,l=s.element,u=s.helper,c=o.container.originalAttrs.position,f=o.container.currentAttrs.position;a.width="".concat(ae(u),"px"),a.height="".concat(K(u),"px"),a.top="".concat(Mh(l,"top")+(f.top-c.top),"px"),a.left="".concat(Mh(l,"left")+(f.left-c.left),"px"),cd(n(n({},a),{targets:[l],duration:i,easing:"linear",update:function(){o.container.currentAttrs.size={width:ae(l),height:K(l)},o.container.currentAttrs.position={left:Mh(l,"left"),top:Mh(l,"top")},o.container.updateResizableElements(o.container.currentAttrs.size)}}))}})),o.attach(),o}return o(i,[{key:"supported",get:function(){return this.isResizable()}}]),i}(x),dd=function(e){s(n,e);var t=h(n);function n(e){var i;return r(this,n),a(c(i=t.call(this,e)),"ghost",null),a(c(i),"onDragStart",(function(e){if(i.container.options.ghost){var t=i.container.originalElement,n=i.container.currentAttrs.size;i.ghost=t.cloneNode(!0),z(i.ghost,{display:"block",position:"relative",width:"".concat(n.width,"px"),height:"".concat(n.height,"px"),top:"0px",left:"0px",margin:"0px",opacity:.25}),k(i.ghost,i.container.ghostClass),i.container.helper.appendChild(i.ghost)}})),a(c(i),"onDragMove",(function(e){if(i.ghost){var t=i.container.currentAttrs.size;z(i.ghost,{width:"".concat(t.width,"px"),height:"".concat(t.height,"px")})}})),a(c(i),"onDragStop",(function(e){i.ghost&&(i.container.helper.removeChild(i.ghost),i.ghost=null)})),i.attach(),i}return o(n,[{key:"supported",get:function(){return this.isResizable()}}]),n}(x),gd=Qn,vd=Jn,md=rr,yd=ce,bd=ei,wd=[],xd=wd.sort,Ed=yd((function(){wd.sort(void 0)})),kd=yd((function(){wd.sort(null)})),Sd=bd("sort");gd({target:"Array",proto:!0,forced:Ed||!kd||!Sd},{sort:function(e){return void 0===e?xd.call(md(this)):xd.call(md(this),vd(e))}});var Pd,Od=function(e){s(n,e);var t=h(n);function n(e){var i;return r(this,n),a(c(i=t.call(this,e)),"onDragStart",(function(e){if(i.stack.length>0){var t=i.container.helper,n=i.stack.sort((function(e,t){return Mh(e,"zIndex")-Mh(t,"zIndex")})),r=Mh(n[0],"zIndex");n.forEach((function(e,t){z(e,{zIndex:r+t})})),z(t,{zIndex:r+n.length})}})),i.attach(),i}return o(n,[{key:"supported",get:function(){return this.isDraggable()}},{key:"stack",get:function(){var e=this.container.options;return e.stack?Y(document,e.stack):[]}}]),n}(x),Id=En,Dd=kn,Ad=Object.keys||function(e){return Id(e,Dd)},Cd=Xe,Ld=Ve,jd=Ad,zd=fe?Object.defineProperties:function(e,t){Ld(e);for(var n,r=jd(t),i=r.length,o=0;i>o;)Cd.f(e,n=r[o++],t[n]);return e},Md=Ve,Td=zd,Rd=kn,Hd=It,Nd=Yi,_d=Me,$d=Ot("IE_PROTO"),Bd=function(){},Fd=function(e){return"<script>"+e+"</"+"script>"},Wd=function(){try{Pd=document.domain&&new ActiveXObject("htmlfile")}catch(e){}var e,t;Wd=Pd?function(e){e.write(Fd("")),e.close();var t=e.parentWindow.Object;return e=null,t}(Pd):((t=_d("iframe")).style.display="none",Nd.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(Fd("document.F=Object")),e.close(),e.F);for(var n=Rd.length;n--;)delete Wd.prototype[Rd[n]];return Wd()};Hd[$d]=!0;var Yd=Object.create||function(e,t){var n;return null!==e?(Bd.prototype=Md(e),n=new Bd,Bd.prototype=null,n[$d]=e):n=Wd(),void 0===t?n:Td(n,t)},Xd=Xe,Ud=Or("unscopables"),Vd=Array.prototype;null==Vd[Ud]&&Xd.f(Vd,Ud,{configurable:!0,value:Yd(null)});var Gd=Qn,qd=Nr.find,Zd=function(e){Vd[Ud][e]=!0},Kd="find",Qd=!0;Kd in[]&&Array(1).find((function(){Qd=!1})),Gd({target:"Array",proto:!0,forced:Qd},{find:function(e){return qd(this,e,arguments.length>1?arguments[1]:void 0)}}),Zd(Kd);var Jd=function(e){s(n,e);var t=h(n);function n(e,i){var o,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return r(this,n),a(c(o=t.call(this,e)),"property",null),a(c(o),"target",null),a(c(o),"previousValue",null),a(c(o),"onDragStart",(function(e){o.target||(o.target=o.container.helper),null===o.value||o.isSortableInDraggable()||(o.previousValue=o.getPreviousValue(),z(o.target,a({},o.property,o.value)))})),a(c(o),"onDragStop",(function(e){null!==o.previousValue&&(z(o.target,a({},o.property,o.previousValue)),o.target=null)})),o.property=i,o.target=s?s instanceof HTMLElement?s:document.querySelector(s):null,o.attach(),o}return o(n,[{key:"supported",get:function(){return this.isDraggable()||this.isSortable()}},{key:"detach",value:function(){this.constructor.propertyCache=[],d(l(n.prototype),"detach",this).call(this)}},{key:"value",get:function(){var e=this.container.options;return this.property&&!w(e[this.property])?e[this.property]:null}},{key:"isSortableInDraggable",value:function(){return this.isDraggable()&&this.container.connectedDraggable}},{key:"getPreviousValue",value:function(){var e=this,t=this.constructor.propertyCache,n=t.find((function(t){return t.element===e.target&&t.property===e.property}));return n||(n={element:this.target,property:this.property,value:z(this.target,this.property)},t.push(n)),n.value}}]),n}(x);a(Jd,"propertyCache",[]);var eg=function(){function e(t){r(this,e),a(this,"caller",null),a(this,"active",!1),a(this,"lastEvent",null),this.caller=t}return o(e,[{key:"attach",value:function(){}},{key:"detach",value:function(){}},{key:"cancel",value:function(e){}},{key:"trigger",value:function(e){var t=document.createEvent("Event");t.detail=e,t.initEvent(e.type,!0,!0),document.dispatchEvent(t),this.lastEvent=t}}]),e}(),tg=function(e){e.preventDefault()},ng=function(e){s(n,e);var t=h(n);function n(e){var i;return r(this,n),a(c(i=t.call(this,e)),"pageX",null),a(c(i),"pageY",null),a(c(i),"startEvent",null),a(c(i),"mouseMoved",!1),a(c(i),"cancel",(function(e){i.onMouseUp(e)})),a(c(i),"onMouseDown",(function(e){if(!(1!==e.which||0!==e.button||e.ctrlKey||e.metaKey||i.caller.options.skip&&e.target.nodeName&&B(e.target,i.caller.options.skip))){i.active&&i.onMouseUp(e);var t=new hh({pageX:e.pageX,pageY:e.pageY,target:e.target,caller:i.caller,originalEvent:e});i.pageX=e.pageX,i.pageY=e.pageY,i.startEvent=e,i.trigger(t),t.canceled||(document.addEventListener("dragstart",tg),document.addEventListener("mousemove",i.checkThresholds),document.addEventListener("mouseup",i.onMouseUp))}})),a(c(i),"checkThresholds",(function(e){var t=c(i).startEvent,n=i.caller.options.distance;i.pageX=e.pageX,i.pageY=e.pageY,Math.max(Math.abs(e.pageX-t.pageX),Math.abs(e.pageY-t.pageY))>=n&&(document.removeEventListener("mousemove",i.checkThresholds),i.startDrag())})),a(c(i),"onMouseMove",(function(e){i.active&&i.trigger(new dh({pageX:e.pageX,pageY:e.pageY,target:document.elementFromPoint(e.pageX,e.pageY),caller:i.caller,originalEvent:e}))})),a(c(i),"onMouseUp",(function(e){clearTimeout(i.startTimeout),document.removeEventListener("dragstart",tg),document.removeEventListener("mousemove",i.checkThresholds),document.removeEventListener("mouseup",i.onMouseUp),i.active&&(i.active=!1,i.trigger(new gh({pageX:e.pageX,pageY:e.pageY,target:document.elementFromPoint(e.pageX,e.pageY),caller:i.caller,originalEvent:e}))),document.removeEventListener("contextmenu",tg),document.removeEventListener("mousemove",i.onMouseMove),e.preventDefault()})),i.attach(),i}return o(n,[{key:"attach",value:function(){document.addEventListener("mousedown",this.onMouseDown,!0)}},{key:"detach",value:function(){document.removeEventListener("mousedown",this.onMouseDown,!0)}},{key:"startDrag",value:function(){var e=this.startEvent,t=new ph({pageX:e.pageX,pageY:e.pageY,target:e.target,caller:this.caller,originalEvent:e});this.trigger(t),this.active=!t.canceled,this.active&&(document.addEventListener("contextmenu",tg,!0),document.addEventListener("mousemove",this.onMouseMove))}}]),n}(eg),rg=Nr.map;Qn({target:"Array",proto:!0,forced:!Fr("map")},{map:function(e){return rg(this,e,arguments.length>1?arguments[1]:void 0)}});var ig=Nr.some;Qn({target:"Array",proto:!0,forced:!ei("some")},{some:function(e){return ig(this,e,arguments.length>1?arguments[1]:void 0)}});var og=le,ag=[].slice,sg=function(e){return function(t,n){var r=arguments.length>2,i=r?ag.call(arguments,2):void 0;return e(r?function(){("function"==typeof t?t:Function(t)).apply(this,i)}:t,n)}};Qn({global:!0,bind:!0,forced:/MSIE .\./.test(sr)},{setTimeout:sg(og.setTimeout),setInterval:sg(og.setInterval)});var lg,ug={exports:{}},cg="object"==typeof Reflect?Reflect:null,fg=cg&&"function"==typeof cg.apply?cg.apply:function(e,t,n){return Function.prototype.apply.call(e,t,n)};lg=cg&&"function"==typeof cg.ownKeys?cg.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var hg=Number.isNaN||function(e){return e!=e};function pg(){pg.init.call(this)}ug.exports=pg,ug.exports.once=function(e,t){return new Promise((function(n,r){function i(n){e.removeListener(t,o),r(n)}function o(){"function"==typeof e.removeListener&&e.removeListener("error",i),n([].slice.call(arguments))}kg(e,t,o,{once:!0}),"error"!==t&&function(e,t,n){"function"==typeof e.on&&kg(e,"error",t,n)}(e,i,{once:!0})}))},pg.EventEmitter=pg,pg.prototype._events=void 0,pg.prototype._eventsCount=0,pg.prototype._maxListeners=void 0;var dg=10;function gg(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function vg(e){return void 0===e._maxListeners?pg.defaultMaxListeners:e._maxListeners}function mg(e,t,n,r){var i,o,a,s;if(gg(n),void 0===(o=e._events)?(o=e._events=Object.create(null),e._eventsCount=0):(void 0!==o.newListener&&(e.emit("newListener",t,n.listener?n.listener:n),o=e._events),a=o[t]),void 0===a)a=o[t]=n,++e._eventsCount;else if("function"==typeof a?a=o[t]=r?[n,a]:[a,n]:r?a.unshift(n):a.push(n),(i=vg(e))>0&&a.length>i&&!a.warned){a.warned=!0;var l=new Error("Possible EventEmitter memory leak detected. "+a.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");l.name="MaxListenersExceededWarning",l.emitter=e,l.type=t,l.count=a.length,s=l,console&&console.warn&&console.warn(s)}return e}function yg(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function bg(e,t,n){var r={fired:!1,wrapFn:void 0,target:e,type:t,listener:n},i=yg.bind(r);return i.listener=n,r.wrapFn=i,i}function wg(e,t,n){var r=e._events;if(void 0===r)return[];var i=r[t];return void 0===i?[]:"function"==typeof i?n?[i.listener||i]:[i]:n?function(e){for(var t=new Array(e.length),n=0;n<t.length;++n)t[n]=e[n].listener||e[n];return t}(i):Eg(i,i.length)}function xg(e){var t=this._events;if(void 0!==t){var n=t[e];if("function"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function Eg(e,t){for(var n=new Array(t),r=0;r<t;++r)n[r]=e[r];return n}function kg(e,t,n,r){if("function"==typeof e.on)r.once?e.once(t,n):e.on(t,n);else{if("function"!=typeof e.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof e);e.addEventListener(t,(function i(o){r.once&&e.removeEventListener(t,i),n(o)}))}}Object.defineProperty(pg,"defaultMaxListeners",{enumerable:!0,get:function(){return dg},set:function(e){if("number"!=typeof e||e<0||hg(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");dg=e}}),pg.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},pg.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||hg(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},pg.prototype.getMaxListeners=function(){return vg(this)},pg.prototype.emit=function(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var r="error"===e,i=this._events;if(void 0!==i)r=r&&void 0===i.error;else if(!r)return!1;if(r){var o;if(t.length>0&&(o=t[0]),o instanceof Error)throw o;var a=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw a.context=o,a}var s=i[e];if(void 0===s)return!1;if("function"==typeof s)fg(s,this,t);else{var l=s.length,u=Eg(s,l);for(n=0;n<l;++n)fg(u[n],this,t)}return!0},pg.prototype.addListener=function(e,t){return mg(this,e,t,!1)},pg.prototype.on=pg.prototype.addListener,pg.prototype.prependListener=function(e,t){return mg(this,e,t,!0)},pg.prototype.once=function(e,t){return gg(t),this.on(e,bg(this,e,t)),this},pg.prototype.prependOnceListener=function(e,t){return gg(t),this.prependListener(e,bg(this,e,t)),this},pg.prototype.removeListener=function(e,t){var n,r,i,o,a;if(gg(t),void 0===(r=this._events))return this;if(void 0===(n=r[e]))return this;if(n===t||n.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete r[e],r.removeListener&&this.emit("removeListener",e,n.listener||t));else if("function"!=typeof n){for(i=-1,o=n.length-1;o>=0;o--)if(n[o]===t||n[o].listener===t){a=n[o].listener,i=o;break}if(i<0)return this;0===i?n.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(n,i),1===n.length&&(r[e]=n[0]),void 0!==r.removeListener&&this.emit("removeListener",e,a||t)}return this},pg.prototype.off=pg.prototype.removeListener,pg.prototype.removeAllListeners=function(e){var t,n,r;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[e]),this;if(0===arguments.length){var i,o=Object.keys(n);for(r=0;r<o.length;++r)"removeListener"!==(i=o[r])&&this.removeAllListeners(i);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=n[e]))this.removeListener(e,t);else if(void 0!==t)for(r=t.length-1;r>=0;r--)this.removeListener(e,t[r]);return this},pg.prototype.listeners=function(e){return wg(this,e,!0)},pg.prototype.rawListeners=function(e){return wg(this,e,!1)},pg.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):xg.call(e,t)},pg.prototype.listenerCount=xg,pg.prototype.eventNames=function(){return this._eventsCount>0?lg(this._events):[]};var Sg=function(e){s(n,e);var t=h(n);function n(){var e;r(this,n);for(var i=arguments.length,o=new Array(i),s=0;s<i;s++)o[s]=arguments[s];return a(c(e=t.call.apply(t,[this].concat(o))),"wrappedListeners",[]),e}return o(n,[{key:"wrapListener",value:function(e){var t=this.wrappedListeners.find((function(t){return t.listener===e}));return t?this.wrappedListeners=this.wrappedListeners.filter((function(e){return e!==t})):(t={listener:e,wrapped:function(t){t&&t.canceled||e(t)}},this.wrappedListeners.push(t)),t}},{key:"addListener",value:function(e,t){d(l(n.prototype),"addListener",this).call(this,e,this.wrapListener(t))}},{key:"prependListener",value:function(e,t){d(l(n.prototype),"prependListener",this).call(this,e,this.wrapListener(t))}},{key:"removeListener",value:function(e,t){d(l(n.prototype),"off",this).call(this,e,this.wrapListener(t))}}]),n}(b(ug.exports)),Pg=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n,[{key:"draggable",get:function(){return this.data.draggable||null}}]),n}(ch);a(Pg,"type","draggable");var Og=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(Pg);a(Og,"type","draggable:init");var Ig=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(Pg);a(Ig,"type","draggable:destroy");var Dg=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n,[{key:"source",get:function(){return this.data.source||null}},{key:"helper",get:function(){return this.data.helper||null}},{key:"sensorEvent",get:function(){return this.data.sensorEvent||null}},{key:"originalEvent",get:function(){return this.data.originalEvent||null}}]),n}(ch);a(Dg,"type","drag");var Ag=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(Dg);a(Ag,"type","drag:start"),a(Ag,"cancelable",!0);var Cg=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n,[{key:"position",get:function(){return this.data.position||null},set:function(e){this.data.position=e}}]),n}(Dg);a(Cg,"type","drag:move"),a(Cg,"cancelable",!0);var Lg=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n,[{key:"droppable",get:function(){return this.data.droppable||null},set:function(e){this.data.droppable=e}}]),n}(Dg);a(Lg,"type","drag:stop");var jg=function(){function e(t){var i=this,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(r(this,e),a(this,"element",null),a(this,"margins",null),a(this,"dragging",!1),a(this,"reverting",!1),a(this,"helper",null),a(this,"helperSize",null),a(this,"helperAttrs",null),a(this,"startEvent",null),a(this,"offset",{element:null,click:null,scroll:null,parent:null,relative:null}),a(this,"position",{original:null,current:null,absolute:null}),a(this,"emitter",new Sg),a(this,"options",{}),a(this,"plugins",[]),a(this,"sensors",[]),a(this,"pendingDestroy",!1),a(this,"cancelHelperRemoval",!1),a(this,"containmentCoords",void 0),a(this,"containmentContainer",null),a(this,"scrollListeners",[]),a(this,"connectedSortables",[]),a(this,"droppedSortable",null),a(this,"setup",(function(){i.addPlugin(new $h(i)),i.addPlugin(new op(i)),i.addPlugin(new ap(i)),i.addPlugin(new Jd(i,"cursor")),i.addPlugin(new Jd(i,"opacity")),i.addPlugin(new Jd(i,"zIndex")),i.addPlugin(new Od(i)),i.addPlugin(new _h(i)),i.addPlugin(new ip(i)),i.addSensor(new ng(i)),document.addEventListener("mouse:down",i.onMouseDown),document.addEventListener("mouse:start",i.onDragStart),document.addEventListener("mouse:move",i.onDragMove),document.addEventListener("mouse:stop",i.onDragStop),"original"===i.options.helper&&jh(i.element),i.element[i.dataProperty]=i,k(i.element,i.elementClass),i.findHandles().forEach((function(e){k(e,i.handleClass)})),i.trigger(new Og({draggable:i}))})),a(this,"onMouseDown",(function(e){var t=e.detail;t.caller===i&&(i.disabled||i.reverting?t.cancel():i.isInsideHandle(t)||t.cancel())})),a(this,"onDragStart",(function(e){var t=e.detail;if(t.caller===i){if(Ah(t),i.dragging=!0,i.helper=i.createHelper(t),!i.helper)return t.cancel(),void i.clear();k(i.helper,i.helperClass),i.startEvent=t,i.cacheMargins(),i.cacheHelperSize(),i.cacheHelperAttrs(),i.position.absolute=Z(i.element),i.calculateOffsets(t),i.calculatePosition(t,!1);var n=new Ag({source:i.element,helper:i.helper,sensorEvent:t,originalEvent:t.originalEvent});i.trigger(n),n.canceled?i.onDragCancel(Oh(i.helper)):(i.cacheHelperSize(),Nh.prepareOffsets(i,t),i.onDragMove(e,!0),i.scrollListeners=wh(i.element,"body").map((function(t){return M(t,"scroll",(function(){return Nh.prepareOffsets(i,e)}))})))}})),a(this,"onDragCancel",(function(e){var t=e.detail;i.scrollListeners.forEach((function(e){return e()})),i.scrollListeners=[],Nh.onDragStop(i,t),i.findHandles().some((function(e){return e===t.target}))&&Dh(i.element,"focus"),i.sensors.forEach((function(t){return t.cancel(e)})),i.clear()})),a(this,"onDragMove",(function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=e.detail;if(n.caller===i){var r=i.helperAttrs.hasFixedParent;r&&(i.offset.parent=i.getParentOffset()),i.calculatePosition(n);var o=new Cg({source:i.element,helper:i.helper,sensorEvent:n,originalEvent:n.originalEvent,position:i.position.current});t?i.plugins.forEach((function(e){o.canceled||e.onDragMove(o)})):i.trigger(o),o.canceled||(i.position.current=o.position,z(i.helper,{left:i.position.current.left+"px",top:i.position.current.top+"px"}),Nh.onDragMove(i,n))}})),a(this,"onDragStop",(function(e){var t=e.detail;if(t.caller===i){var n=i.options,r=n.revert,o=n.revertDuration,a=i.position.original,s=new Lg({source:i.element,helper:i.helper,droppable:Nh.drop(i,t),sensorEvent:t,originalEvent:t.originalEvent});"invalid"===r&&!s.droppable||"valid"===r&&s.droppable||$c(r)&&r(i.element,s.droppable)||r?(i.reverting=!0,cd({targets:[i.helper],left:a.left+"px",top:a.top+"px",duration:o,easing:"linear",complete:function(){i.reverting=!1,i.trigger(s),s.canceled||i.clear()}})):(i.trigger(s),s.canceled||i.clear())}})),!(t instanceof HTMLElement))throw new Error("Invalid element");this.element=t,this.options=n(n({},this.constructor.defaultOptions),pf(o)?o:{}),pf(s)&&nf(s,(function(e,t){i.on(t,e)})),setTimeout((function(){i.setup()}),0)}return o(e,[{key:"addPlugin",value:function(e){e instanceof x&&this.plugins.push(e)}},{key:"addSensor",value:function(e){e instanceof eg&&this.sensors.push(e)}},{key:"setDisabled",value:function(e){this.options.disabled=!!e}},{key:"on",value:function(e,t){this.emitter.on(e,t)}},{key:"off",value:function(e,t){this.emitter.off(e,t)}},{key:"cancel",value:function(){this.dragging?this.onDragCancel(Oh(this.helper)):this.clear()}},{key:"destroy",value:function(){var e=this;this.dragging?this.pendingDestroy=!0:(this.plugins.forEach((function(e){return e.detach()})),this.sensors.forEach((function(e){return e.detach()})),document.removeEventListener("mouse:start",this.onDragStart),document.removeEventListener("mouse:move",this.onDragMove),document.removeEventListener("mouse:stop",this.onDragStop),delete this.element[this.dataProperty],ie(this.element,this.elementClass),this.findHandles().forEach((function(t){ie(t,e.handleClass)})),this.trigger(new Ig({draggable:this})))}},{key:"disabled",get:function(){return this.options.disabled}},{key:"dataProperty",get:function(){return"draggableInstance"}},{key:"elementClass",get:function(){return"ui-draggable"}},{key:"handleClass",get:function(){return"ui-draggable-handle"}},{key:"helperClass",get:function(){return"ui-draggable-helper"}},{key:"scope",get:function(){return this.options.scope}},{key:"proportions",get:function(){var e=this.position.absolute,t=this.margins,n=this.helperSize;return{left:e.left+t.left,top:e.top+t.top,right:e.left+t.left+n.width,bottom:e.top+t.top+n.height,width:n.width,height:n.height}}},{key:"trigger",value:function(e){this.emitter.emit(e.type,e),/^drag:/.test(e.type)&&(this.position.absolute=this.convertPosition(this.position.current,"absolute"))}},{key:"findHandles",value:function(){var e=this.options.handle;return e?Y(this.element,e):[this.element]}},{key:"isInsideHandle",value:function(e){var t=!1;return this.findHandles().forEach((function(n){t||n!==e.target&&!Eh(n,e.target)||(t=!0)})),t}},{key:"createHelper",value:function(e){var t=null,n=this.options,r=n.appendTo,i=n.helper;if($c(i)?t=i.apply(this.element,[e]):"clone"===i?((t=this.element.cloneNode(!0)).removeAttribute("id"),t.removeAttribute(this.dataProperty),t[this.dataProperty]=this):t=this.element,t instanceof HTMLElement){if(!B(t,"body")){var o="parent"===r?this.element.parentNode:document.querySelector(r);o instanceof HTMLElement&&o.appendChild(t)}return $c(i)&&t===this.element&&jh(this.element),t!==this.element&&zh(t),t}return null}},{key:"cacheMargins",value:function(){this.margins={left:Mh(this.element,"marginLeft")||0,top:Mh(this.element,"marginTop")||0,right:Mh(this.element,"marginRight")||0,bottom:Mh(this.element,"marginBottom")||0}}},{key:"cacheHelperSize",value:function(){this.helperSize={width:ae(this.helper),height:K(this.helper)}}},{key:"cacheHelperAttrs",value:function(){this.helperAttrs={cssPosition:z(this.helper,"position"),scrollParent:Th(this.helper,!1),offsetParent:J(this.helper),hasFixedParent:wh(this.helper).some((function(e){return"fixed"===z(e,"position")}))}}},{key:"calculateOffsets",value:function(e){var t=this.position.absolute;this.offset.click={left:e.pageX-t.left-this.margins.left,top:e.pageY-t.top-this.margins.top},this.offset.parent=this.getParentOffset(),this.offset.relative=this.getRelativeOffset()}},{key:"getParentOffset",value:function(){var e=this.helperAttrs,t=e.cssPosition,n=e.scrollParent,r=e.offsetParent,i=Rh(r)?{left:0,top:0}:Z(r);return"absolute"===t&&n!==document&&Eh(n,r)&&(i.left+=G(n),i.top+=q(n)),{left:i.left+Mh(r,"borderLeftWidth")||0,top:i.top+Mh(r,"borderTopWidth")||0}}},{key:"getRelativeOffset",value:function(){var e=this.helperAttrs,t=e.cssPosition,n=e.scrollParent;if("relative"!==t)return{left:0,top:0};var r=te(this.helper),i=!!n&&Rh(n);return{left:r.left-(Mh(this.helper,"left")||0)+(i?G(n):0),top:r.top-(Mh(this.helper,"top")||0)+(i?q(n):0)}}},{key:"constraintPosition",value:function(e){var t={pageX:e.pageX,pageY:e.pageY};return this.plugins.forEach((function(e){t=e.constraintPosition(t)})),t}},{key:"calculatePosition",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=t?this.constraintPosition(e):e,r=n.pageX,i=n.pageY,o=this.helperAttrs,a=o.cssPosition,s=o.offsetParent,l=o.scrollParent,u=Rh(l);u&&this.offset.scroll||(this.offset.scroll={left:u?0:G(l),top:u?0:q(l)}),"relative"===a&&l===document&&l!==s&&(this.offset.relative=this.getRelativeOffset());var c=this.offset,f=c.click,h=c.scroll,p=c.parent,d=c.relative,g={left:r-f.left-p.left-d.left+("fixed"===a?-h.left:u?0:h.left),top:i-f.top-p.top-d.top+("fixed"===a?-h.top:u?0:h.top)};this.position.original||(this.position.original=g),this.position.current=g,this.position.absolute=this.convertPosition(g,"absolute")}},{key:"convertPosition",value:function(e,t){var n=this.helperAttrs,r=n.cssPosition,i=n.scrollParent,o=this.offset,a=o.scroll,s=o.parent,l=o.relative,u="absolute"===t?1:-1,c=Rh(i);return{left:e.left+s.left*u+l.left*u-("fixed"===r?-a.left:(c?0:a.left)*u),top:e.top+s.top*u+l.top*u-("fixed"===r?-a.top:(c?0:a.top)*u)}}},{key:"clear",value:function(){if(this.helper){var e=this.options.helper;ie(this.helper,this.helperClass),this.dragging=!1,this.helper&&"clone"===e&&!this.cancelHelperRemoval&&this.helper.parentNode.removeChild(this.helper),this.cancelHelperRemoval=!1,this.helper=null}this.pendingDestroy&&(this.destroy(),this.pendingDestroy=!1)}}]),e}();a(jg,"defaultOptions",{appendTo:"parent",axis:null,connectToSortable:null,containment:null,cursor:null,disabled:!1,distance:0,grid:null,handle:null,helper:"original",opacity:null,revert:!1,revertDuration:200,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:10,stack:null,skip:"input, textarea, button, select, option",zIndex:null});var zg=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n,[{key:"droppable",get:function(){return this.data.droppable||null}}]),n}(ch);a(zg,"type","droppable");var Mg=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(zg);a(Mg,"type","droppable:init");var Tg=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n,[{key:"sensorEvent",get:function(){return this.data.sensorEvent||null}},{key:"draggable",get:function(){return this.data.draggable||null}}]),n}(zg);a(Tg,"type","droppable:activate");var Rg=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(Tg);a(Rg,"type","droppable:over");var Hg=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(Tg);a(Hg,"type","droppable:drop");var Ng=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(Tg);a(Ng,"type","droppable:out");var _g=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(Tg);a(_g,"type","droppable:deactivate");var $g=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(zg);a($g,"type","droppable:destroy");var Bg=function(){function e(t){var i=this,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(r(this,e),a(this,"element",null),a(this,"isOver",!1),a(this,"visible",!0),a(this,"greedyChild",!1),a(this,"emitter",new Sg),a(this,"options",{}),a(this,"size",null),a(this,"offset",null),a(this,"setup",(function(){var e=i.options.scope;i.element[i.dataProperty]=i,k(i.element,i.elementClass),Nh.addDroppable(i,e),i.trigger(new Mg({droppable:i}))})),!(t instanceof HTMLElement))throw new Error("Invalid element");this.element=t,this.options=n(n({},this.constructor.defaultOptions),pf(o)?o:{}),pf(s)&&nf(s,(function(e,t){i.on(t,e)})),setTimeout(this.setup,0)}return o(e,[{key:"setDisabled",value:function(e){this.options.disabled=!!e}},{key:"destroy",value:function(){var e=this.options.scope;delete this.element[this.dataProperty],ie(this.element,this.elementClass),Nh.removeDroppable(this,e),this.trigger(new $g({droppable:this}))}},{key:"disabled",get:function(){return this.options.disabled}},{key:"dataProperty",get:function(){return"droppableInstance"}},{key:"elementClass",get:function(){return"ui-droppable"}},{key:"activeClass",get:function(){return"ui-droppable-active"}},{key:"hoverClass",get:function(){return"ui-droppable-hover"}},{key:"greedy",get:function(){return this.options.greedy}},{key:"scope",get:function(){return this.options.scope}},{key:"proportions",get:function(){return this.offset||(this.offset=Z(this.element)),this.size||(this.size={width:ae(this.element),height:K(this.element)}),{left:this.offset.left,top:this.offset.top,right:this.offset.left+this.size.width,bottom:this.offset.top+this.size.height,width:this.size.width,height:this.size.height}}},{key:"refreshVisibility",value:function(){this.visible="none"!==z(this.element,"display")}},{key:"refreshProportions",value:function(){this.offset=Z(this.element),this.size={width:ae(this.element),height:K(this.element)}}},{key:"intersect",value:function(e,t){var n=this.options.tolerance;return!(this.disabled||this.greedyChild||!this.visible)&&function(e,t,n,r){switch(n){case"fit":return e.left>=t.left&&e.top>=t.top&&e.right>=t.right&&e.bottom>=t.bottom;case"intersect":return t.left<e.left+e.width/2&&t.right>e.right-e.width/2&&t.top<e.top+e.height/2&&t.bottom>e.bottom-e.height/2;case"pointer":return r.pageX>t.left&&r.pageX<t.right&&r.pageY>t.top&&r.pageY<t.bottom;case"touch":return(e.left>=t.left&&e.left<=t.right||e.right>=t.left&&e.right<=t.right||e.left<t.left&&e.right>t.right)&&(e.top>=t.top&&e.top<=t.top||e.bottom>=t.bottom&&e.bottom<=t.bottom||e.top<t.top&&e.bottom>t.bottom);default:return!1}}(e.proportions,this.proportions,n,t)}},{key:"accept",value:function(e){var t=this.options.accept;return!(this.disabled||!this.visible)&&(!!e&&($c(t)?t(e.currentItem||e.element):$(e.currentItem||e.element,t)))}},{key:"activate",value:function(e){var t=Nh.draggable;k(this.element,this.activeClass),t&&this.trigger(new Tg({droppable:this,sensorEvent:e,draggable:t}))}},{key:"over",value:function(e){var t=Nh.draggable;t&&(t.currentItem||t.element)!==this.element&&this.accept(t)&&(k(this.element,this.hoverClass),this.isOver=!0,this.trigger(new Rg({droppable:this,sensorEvent:e,draggable:t})))}},{key:"drop",value:function(e){var t=this,n=Nh.draggable,r=!1;if(n&&(n.currentItem&&n.element)!==this.element){if(Y(this.element,":not(.ui-draggable-dragging)").filter((function(e){return e[t.dataProperty]})).forEach((function(i){var o=i[t.dataProperty];!r&&o.greedy&&o.scope===n.scope&&o.intersect(n,e)&&o.accept(n)&&(r=!0)})),r)return null;if(this.accept(n))return ie(this.element,this.activeClass),ie(this.element,this.hoverClass),this.isOver=!1,this.trigger(new Hg({droppable:this,sensorEvent:e,draggable:n})),this}return null}},{key:"out",value:function(e){var t=Nh.draggable;t&&(t.currentItem||t.element)!==this.element&&this.accept(t)&&(ie(this.element,this.hoverClass),this.isOver=!1,this.trigger(new Ng({droppable:this,sensorEvent:e,draggable:t})))}},{key:"deactivate",value:function(e){var t=Nh.draggable;ie(this.element,this.activeClass),this.isOver=!1,t&&this.trigger(new _g({droppable:this,sensorEvent:e,draggable:t}))}},{key:"on",value:function(e,t){this.emitter.on(e,t)}},{key:"off",value:function(e,t){this.emitter.off(e,t)}},{key:"trigger",value:function(e){this.emitter.emit(e.type,e)}}]),e}();a(Bg,"defaultOptions",{accept:"*",disabled:!1,greedy:!1,scope:"default",tolerance:"intersect"});var Fg=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n,[{key:"source",get:function(){return this.data.source||null}},{key:"helper",get:function(){return this.data.helper||null}},{key:"placeholder",get:function(){return this.data.placeholder||null}},{key:"sensorEvent",get:function(){return this.data.sensorEvent||null}},{key:"originalEvent",get:function(){return this.data.originalEvent||null}}]),n}(ch);a(Fg,"type","sort");var Wg=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(Fg);a(Wg,"type","sort:start"),a(Wg,"cancelable",!0);var Yg=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n,[{key:"position",get:function(){return this.data.position||null}}]),n}(Fg);a(Yg,"type","sort:move"),a(Yg,"cancelable",!0);var Xg=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n,[{key:"droppable",get:function(){return this.data.droppable||null}}]),n}(Fg);a(Xg,"type","sort:stop"),a(Xg,"cancelable",!0);var Ug=function(e){s(n,e);var t=h(n);function n(){var e;r(this,n);for(var i=arguments.length,o=new Array(i),s=0;s<i;s++)o[s]=arguments[s];return a(c(e=t.call.apply(t,[this].concat(o))),"connectedSortables",[]),a(c(e),"currentConnectedSortable",null),a(c(e),"connectedDraggable",null),a(c(e),"items",[]),a(c(e),"currentItem",null),a(c(e),"currentItemStyle",{}),a(c(e),"currentItemProps",null),a(c(e),"elementProportions",null),a(c(e),"placeholder",null),a(c(e),"isOver",!1),a(c(e),"isDraggableOver",!1),a(c(e),"floating",!1),a(c(e),"previousPosition",null),a(c(e),"resetCurrentItem",!1),a(c(e),"rearrangeIteration",0),a(c(e),"setup",(function(){e.addPlugin(new $h(c(e))),e.addPlugin(new op(c(e))),e.addPlugin(new ap(c(e))),e.addPlugin(new Jd(c(e),"cursor")),e.addPlugin(new Jd(c(e),"opacity")),e.addPlugin(new Jd(c(e),"zIndex")),e.addPlugin(new _h(c(e))),e.addSensor(new ng(c(e))),document.addEventListener("mouse:down",e.onMouseDown),document.addEventListener("mouse:start",e.onDragStart),document.addEventListener("mouse:move",e.onDragMove),document.addEventListener("mouse:stop",e.onDragStop),e.element[e.dataProperty]=c(e),k(e.element,e.elementClass),e.refresh(),e.offset.element=Z(e.element),e.trigger(new Fh({sortable:c(e)}))})),a(c(e),"onMouseDown",(function(t){var n=t.detail;n.caller===c(e)&&(e.disabled||e.reverting?n.cancel():e.findItem(n)||n.cancel())})),a(c(e),"onDragStart",(function(t){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=t.detail;if(i.caller===c(e)||r)if(e.disabled||e.reverting)i.cancel();else if(e.refreshItems(),e.currentItem=e.findItem(i),e.currentItem)if(e.currentItemProps={previous:e.currentItem.previousElementSibling,parent:e.currentItem.parentNode,previousIndex:xh(e.currentItem)},e.refreshPositions(),e.isInsideHandle(i))if(e.helper=e.createHelper(i),e.helper){e.createPlaceholder(),k(e.helper,e.helperClass),e.cacheMargins(),e.currentConnectedSortable=c(e),e.dragging=!0,e.cacheHelperSize(),e.helperAttrs={scrollParent:oe(e.helper,!1)},e.startEvent=i,e.calculateOffsets(i),e.calculatePosition(i,!1),e.items=e.items.filter((function(t){return t.element!==e.currentItem})),zh(e.helper),e.helperAttrs.cssPosition="absolute",e.helper!==e.currentItem&&yh(e.currentItem);var o=new Wg({source:e.currentItem,sensorEvent:i,originalEvent:i.originalEvent});e.trigger(o),o.canceled?e.onDragCancel(Oh(e.helper)):(e.cacheHelperSize(),n||e.connectedSortables.forEach((function(t){t.trigger(new Wh({sortable:t,sensorEvent:i,peerSortable:c(e)}))})),Nh.prepareOffsets(c(e),i),e.onDragMove(t,!0,r),e.scrollListeners=wh(e.element,"body").map((function(n){return M(n,"scroll",(function(){return Nh.prepareOffsets(c(e),t)}))})))}else i.cancel();else i.cancel();else i.cancel()})),a(c(e),"onDragCancel",(function(t){var n=t.detail;e.scrollListeners.forEach((function(e){return e()})),e.scrollListeners=[],Nh.onDragStop(c(e),n),e.sensors.forEach((function(e){return e.cancel(t)})),e.clear()})),a(c(e),"onDragMove",(function(t){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=t.detail;if(i.caller===c(e)&&e.dragging||r){if(e.calculatePosition(i),e.previousPosition||(e.previousPosition=e.position.absolute),!n){var o=new Yg({source:e.currentItem,helper:e.helper,placeholder:e.placeholder,sensorEvent:i,originalEvent:i.originalEvent,position:e.position.current});if(e.trigger(o),o.canceled)return}z(e.helper,{left:e.position.current.left+"px",top:e.position.current.top+"px"});var a=null;e.items.forEach((function(t){if(!a&&t.instance===e.currentConnectedSortable){var n=e.getPointerIntersection(t);if(n){var r=e.options.tolerance,i=t.element;if(i!==e.currentItem&&i!==e.placeholder[1===n?"nextElementSibling":"previousElementSibling"]&&!Eh(e.placeholder,i)){var o=1===n?"down":"up";("pointer"===r||e.intersectsWithSides(t))&&(e.rearrange(null,t,o),e.trigger(new Xh({sortable:c(e)})),a=t)}}}})),e.contactSortables(i),Nh.onDragMove(c(e),i),e.previousPosition=e.position.absolute}})),a(c(e),"onDragStop",(function(t){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=t.detail;if(r.caller===c(e)&&e.dragging||n){var i=e.options,o=i.revert,a=i.revertDuration,s=e.position.original,l=new Xg({source:e.currentItem,helper:e.helper,droppable:Nh.drop(c(e),r),sensorEvent:r,originalEvent:r.originalEvent});"invalid"===o&&!l.droppable||"valid"===o&&l.droppable||$c(o)&&o(e.currentItem,l.droppable)||o?(e.reverting=!0,cd({targets:[e.helper],left:s.left+"px",top:s.top+"px",duration:a,easing:"linear",complete:function(){e.reverting=!1,e.trigger(l),l.canceled||e.clear()}})):(e.trigger(l),l.canceled||(e.applyChanges(),e.clear()))}})),e}return o(n,[{key:"cancel",value:function(){this.resetCurrentItem=!0,d(l(n.prototype),"cancel",this).call(this)}},{key:"destroy",value:function(){var e=this;this.dragging?this.pendingDestroy=!0:(this.plugins.forEach((function(e){return e.detach()})),this.sensors.forEach((function(e){return e.detach()})),document.removeEventListener("mouse:start",this.onDragStart),document.removeEventListener("mouse:move",this.onDragMove),document.removeEventListener("mouse:stop",this.onDragStop),delete this.element[this.dataProperty],ie(this.element,this.elementClass),this.items.forEach((function(t){return delete t.element[e.dataProperty]})),this.findHandles().forEach((function(t){ie(t,e.handleClass)})),this.trigger(new Kh({sortable:this})))}},{key:"dataProperty",get:function(){return Qh}},{key:"elementClass",get:function(){return"ui-sortable"}},{key:"handleClass",get:function(){return"ui-sortable-handle"}},{key:"helperClass",get:function(){return"ui-sortable-helper"}},{key:"placeholderClass",get:function(){return"ui-sortable-placeholder"}},{key:"over",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this.isOver||(this.trigger(new Yh({sortable:this,peerSortable:e,draggable:t})),this.isOver=!0)}},{key:"out",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this.isOver&&(this.trigger(new qh({sortable:this,peerSortable:e,draggable:t})),this.isOver=!1)}},{key:"refresh",value:function(){var e=this;this.refreshItems(),this.refreshPositions(),this.findHandles().forEach((function(t){k(t,e.handleClass)}))}},{key:"refreshItems",value:function(){var e=this,t=this.options.connectWith;this.connectedSortables=[this],this.items=this.findItems(),(t?Y(document,t):[]).forEach((function(t){var n=t[e.dataProperty];n&&n!==e&&!n.disabled&&(e.items=e.items.concat(n.findItems(null,e.currentItem)),e.connectedSortables.push(n))}))}},{key:"refreshPositions",value:function(){var e=this,t=this.options.axis;this.floating=!!this.items.length&&("x"===t||Ch(this.items[0].element)),this.helper&&this.helperAttrs&&this.helperAttrs.offsetParent&&(this.offset.parent=this.getParentOffset()),this.items.forEach((function(t){if(!e.currentConnectedSortable||e.currentConnectedSortable===e||t.element===e.currentItem){var n=Z(t.element),r=n.width,i=n.height,o=n.left,a=n.top;t.width=r,t.height=i,t.left=o,t.top=a}})),this.connectedSortables.forEach((function(e){return e.cacheElementProportions()}))}},{key:"findItem",value:function(e){var t=this,n=wh(e.target).find((function(e){return e!==t.element&&e[t.dataProperty]===t}));return n||e.target===this.element||e.target[this.dataProperty]!==this||(n=e.target),n}},{key:"findItems",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=[],i=this.options.items,o=function(t){return t[e.dataProperty]=e,{element:t,instance:e,width:0,height:0,left:0,top:0}};if($c(i)){if(r=i({options:this.options,item:n||this.currentItem}),!Array.isArray(r))return[]}else r=i?Y(this.element,i):vh(this.element.childNodes).filter((function(e){return 1===e.nodeType}));return $c(t)?r.filter(t).map(o):r.map(o)}},{key:"findClosestItem",value:function(e,t){var n=this,r=null,i=1e4,o=t.floating||Ch(this.currentItem),a=!1,s=null,l=o?"pageX":"pageY";return this.items.forEach((function(u){Eh(t.element,u.element)&&u.element!==n.currentItem&&(a=!1,s=Z(u.element)[o?"left":"top"],e[l]-s>u[o?"width":"height"]/2&&(a=!0),Math.abs(e[l]-s)<i&&(i=Math.abs(e[l]-s),r=u))})),{item:r,nearBottom:a}}},{key:"findHandles",value:function(){var e=[],t=this.options.handle;return this.items.forEach((function(n){t?e=e.concat(Y(n.element,t)):e.push(n.element)})),e}},{key:"createHelper",value:function(e){var t=null,n=this.options,r=n.appendTo,i=n.helper,o=n.forceHelperSize;if($c(i)?t=i.apply(this.element,[e,this.currentItem]):"clone"===i?((t=this.currentItem.cloneNode(!0)).removeAttribute("id"),t.removeAttribute(this.dataProperty),t[this.dataProperty]=this):t=this.currentItem,t instanceof HTMLElement){if(!B(t,"body")){var a="parent"===r?this.currentItem.parentNode:document.querySelector(r);if(!(a instanceof HTMLElement))return null;a.appendChild(t)}return t===this.currentItem&&(this.currentItemStyle={width:ae(this.currentItem),height:K(this.currentItem),position:z(this.currentItem,"position"),left:z(this.currentItem,"left"),top:z(this.currentItem,"top")}),t.style.width&&!o||z(t,{width:ae(this.currentItem)+"px",boxSizing:"border-box"}),t.style.height&&!o||z(t,{height:K(this.currentItem)+"px",boxSizing:"border-box"}),t}return null}},{key:"createPlaceholder",value:function(){if(this.placeholder)this.updatePlaceholder(this,this.placeholder);else{var e=this.currentItem.nodeName.toLowerCase(),t=document.createElement(e);if(t.className=this.currentItem.className,k(t,this.placeholderClass),ie(t,this.helperClass),"thead"===e||"tbody"===e){var n=document.createElement("tr");t.appendChild(n),this.createTableRowPlaceholder(this.currentItem.querySelector("tr"),n,"thead"===e?"th":"tr")}else"tr"===e?this.createTableRowPlaceholder(this.currentItem,t,"tr"):"img"===e&&t.setAttribute("src",this.currentItem.getAttribute("src"));this.placeholder=Sh(t,this.currentItem),this.updatePlaceholder(this,t)}}},{key:"createTableRowPlaceholder",value:function(e,t,n){Y(e,n).forEach((function(e){var r=document.createElement(n);r.innerHTML="&#160;",r.setAttribute("colspan",e.getAttribute("colspan")),t.appendChild(r)}))}},{key:"updatePlaceholder",value:function(e,t){var n=e.options,r=n.forcePlaceholderSize;n.hidePlaceholder?z(t,{visibility:"hidden"}):r&&(ae(t)||z(t,{width:ae(this.currentItem)+"px"}),K(t)||z(t,{height:K(this.currentItem)+"px"}))}},{key:"cacheMargins",value:function(){this.margins={left:parseInt(z(this.currentItem,"marginLeft"),10)||0,top:parseInt(z(this.currentItem,"marginTop"),10)||0,right:parseInt(z(this.currentItem,"marginRight"),10)||0,bottom:parseInt(z(this.currentItem,"marginBottom"),10)||0}}},{key:"cacheElementProportions",value:function(){this.elementProportions=Z(this.element)}},{key:"calculateOffsets",value:function(e){var t=Z(this.currentItem);this.offset.click={left:e.pageX-t.left-this.margins.left,top:e.pageY-t.top-this.margins.top},this.offset.parent=this.getParentOffset(),this.offset.relative=this.getRelativeOffset()}},{key:"getParentOffset",value:function(){return this.helperAttrs.offsetParent=J(this.helper),d(l(n.prototype),"getParentOffset",this).call(this)}},{key:"calculatePosition",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=t?this.constraintPosition(e):e,r=n.pageX,i=n.pageY,o=this.helperAttrs.scrollParent,a=this.helperAttrs,s=a.cssPosition,l=a.offsetParent,u=Rh(o);"absolute"!==s||o!==document&&Eh(o,l)||(u=Rh(o=l)),"relative"===s&&o===document&&o!==l&&(this.offset.relative=this.getRelativeOffset()),this.offset.scroll={left:G(o),top:q(o)};var c=this.offset,f=c.click,h=c.parent,p=c.relative,d=c.scroll,g={left:r-f.left-h.left-p.left+("fixed"===s?-d.left:u?0:d.left),top:i-f.top-h.top-p.top+("fixed"===s?-d.top:u?0:d.top)};this.position.original||(this.position.original=g),this.position.current=g,this.position.absolute=this.convertPosition(g,"absolute")}},{key:"convertPosition",value:function(e,t){var n=this.helperAttrs.scrollParent,r=this.helperAttrs,i=r.cssPosition,o=r.offsetParent,a=this.offset,s=a.parent,l=a.relative,u="absolute"===t?1:-1,c=Rh(n);return"absolute"!==i||n!==document&&Eh(n,o)||(c=Rh(n=o)),{left:e.left+s.left*u+l.left*u-("fixed"===i?-G(n):(c?0:G(n))*u),top:e.top+s.top*u+l.top*u-("fixed"===i?-q(n):(c?0:q(n))*u)}}},{key:"getDragDirection",value:function(e){var t=this.position.absolute["x"===e?"left":"top"]-this.previousPosition["x"===e?"left":"top"];return 0!==t?t>0?"x"===e?"right":"down":"x"===e?"left":"up":null}},{key:"getPointerIntersection",value:function(e){var t=this.options.axis,n=this.offset.click,r=this.position.absolute,i=r.left+n.left,o=r.top+n.top;if(!(("y"===t||i>=e.left&&i<e.left+e.width)&&("x"===t||o>=e.top&&o<e.top+e.height)))return 0;var a=this.getDragDirection("x"),s=this.getDragDirection("y");return this.floating?"right"===a||"bottom"===s?2:1:"down"===s?2:1}},{key:"intersectsWith",value:function(e){var t=this.options,n=t.axis,r=t.tolerance,i=this.helperSize,o=i.width,a=i.height,s=this.offset.click,l=this.position.absolute,u=l.left+s.left,c=l.top+s.top;l.left,s.left,l.top,s.top;return"pointer"===r||this.floating&&o>e.width||!this.floating&&a>e.height?("y"===n||u>e.left&&u<e.left+e.width)&&("x"===n||c>e.top&&c<e.top+e.height):e.left<l.left+o/2&&e.left+e.width>l.left+o/2&&e.top<l.top+a/2&&e.top+e.height>l.top+a/2}},{key:"intersectsWithSides",value:function(e){var t=e.width,n=e.height,r=e.left,i=e.top,o=this.offset.click,a=this.position.absolute,s=a.left+o.left,l=a.top+o.top,u=r+t/2,c=i+n/2,f=this.getDragDirection("x"),h=this.getDragDirection("y");return this.floating&&f?"right"===f&&s>=u&&s<u+t||"left"===f&&!(s>=u&&s<u+t):"down"===h&&l>=c&&l<c+n||"up"===h&&!(l>=c&&l<c+n)}},{key:"contactSortables",value:function(e){var t=this,n=null,r=null,i=new Xh({sortable:this});this.connectedSortables.forEach((function(e){Eh(t.currentItem,e.element)||(t.intersectsWith(e.elementProportions)?n&&Eh(e.element,n.element)||(n=e):e.out(t))})),n&&(1===this.connectedSortables.length?n.over(null):((r=this.findClosestItem(e,n)).item||this.options.dropOnEmpty)&&(this.currentConnectedSortable===n?n.over(this):(r.item?this.rearrange(null,r.item,r.nearBottom?"up":"down"):this.rearrange(n.element),this.trigger(i),n.over(this),n.trigger(i),this.currentConnectedSortable=n,this.updatePlaceholder(n,this.placeholder))))}},{key:"rearrange",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(t instanceof HTMLElement)t.appendChild(this.placeholder);else{if(!(n&&n.element instanceof HTMLElement))return;n.element.parentNode.insertBefore(this.placeholder,"down"===r?n.element:n.element.nextSibling)}this.rearrangeIteration=this.rearrangeIteration?this.rearrangeIteration++:1;var i=this.rearrangeIteration;setTimeout((function(){i===e.rearrangeIteration&&e.refreshPositions()}))}},{key:"applyChanges",value:function(){var e=this,t=null;if(this.helper&&this.currentItem&&(kh(this.currentItem,this.placeholder),t=xh(this.currentItem),this.helper===this.currentItem?(nf(this.currentItemStyle,(function(t,n){"auto"!==t&&"static"!==t||(e.currentItemStyle[n]="")})),z(this.currentItem,this.currentItemStyle)):mh(this.currentItem),this.resetCurrentItem)){var n=this.currentItemProps,r=n.previous,i=n.parent;r?Sh(this.currentItem,r):kh(this.currentItem,i.firstElementChild),this.resetCurrentItem=!1}this.connectedDraggable&&this.trigger(new Vh({sortable:this,item:this.connectedDraggable.element,newIndex:t,draggable:this.connectedDraggable})),(this.connectedDraggable||this.currentItemProps.previous!==function(e,t,n){for(var r=null,i=e,o="previous"===t?"previousElementSibling":"nextElementSibling";i&&i[o];){if(!n||!$(i[o],n)){r=i[o];break}i=i[o]}return r}(this.currentItem,"previous",".".concat(this.helperClass))||this.currentItemProps.parent!==this.currentItem.parentNode)&&this.trigger(new Gh({sortable:this,item:this.currentItem,previousIndex:this.currentItemProps.previousIndex,newIndex:t,peerSortable:this.currentConnectedSortable!==this?this.currentConnectedSortable:null})),this.currentConnectedSortable!==this&&(this.trigger(new Uh({sortable:this,item:this.currentItem,previousIndex:this.currentItemProps.previousIndex,peerSortable:this.currentConnectedSortable})),this.currentConnectedSortable.trigger(new Vh({sortable:this.currentConnectedSortable,item:this.currentItem,newIndex:t,peerSortable:this})),this.currentConnectedSortable.trigger(new Gh({sortable:this.currentConnectedSortable,peerSortable:this,previousIndex:this.currentItemProps.previousIndex,newIndex:t}))),this.connectedSortables.forEach((function(t){t.out(e),t.trigger(new Zh({sortable:t,peerSortable:e}))}))}},{key:"clear",value:function(){this.placeholder&&(this.placeholder.parentNode&&this.placeholder.parentNode.removeChild(this.placeholder),this.placeholder=null),this.helper&&(ie(this.helper,this.helperClass),this.helper===this.currentItem||this.cancelHelperRemoval||this.helper.parentNode.removeChild(this.helper),this.cancelHelperRemoval=!1,this.helper=null),this.connectedDraggable=null,this.currentItem=null,this.currentItemProps=null,this.dragging=!1,this.pendingDestroy&&(this.destroy(),this.pendingDestroy=!1)}}]),n}(jg);a(Ug,"defaultOptions",{appendTo:"parent",axis:null,connectWith:null,containment:null,cursor:null,disabled:!1,distance:0,dropOnEmpty:!0,forceHelperSize:!1,forcePlaceholderSize:!1,hidePlaceholder:!1,grid:null,handle:null,helper:"original",items:null,opacity:null,revert:!1,revertDuration:200,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:10,skip:"input, textarea, button, select, option",tolerance:"intersect",zIndex:null});var Vg=Zt,Gg=ce,qg=Or,Zg=Ps,Kg=tt,Qg=qg("species"),Jg=!Gg((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),ev="$0"==="a".replace(/./,"$0"),tv=qg("replace"),nv=!!/./[tv]&&""===/./[tv]("a","$0"),rv=!Gg((function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2!==n.length||"a"!==n[0]||"b"!==n[1]})),iv=on,ov=Ee,av=function(e){return function(t,n){var r,i,o=String(ov(t)),a=iv(n),s=o.length;return a<0||a>=s?e?"":void 0:(r=o.charCodeAt(a))<55296||r>56319||a+1===s||(i=o.charCodeAt(a+1))<56320||i>57343?e?o.charAt(a):r:e?o.slice(a,a+2):i-56320+(r-55296<<10)+65536}},sv={codeAt:av(!1),charAt:av(!0)}.charAt,lv=ye,uv=Ps,cv=Ve,fv=ln,hv=Ee,pv=function(e,t,n){return t+(n?sv(e,t).length:1)},dv=function(e,t){var n=e.exec;if("function"==typeof n){var r=n.call(e,t);if("object"!=typeof r)throw TypeError("RegExp exec method returned something other than an Object or null");return r}if("RegExp"!==lv(e))throw TypeError("RegExp#exec called on incompatible receiver");return uv.call(e,t)};(function(e,t,n,r){var i=qg(e),o=!Gg((function(){var t={};return t[i]=function(){return 7},7!=""[e](t)})),a=o&&!Gg((function(){var t=!1,n=/a/;return"split"===e&&((n={}).constructor={},n.constructor[Qg]=function(){return n},n.flags="",n[i]=/./[i]),n.exec=function(){return t=!0,null},n[i](""),!t}));if(!o||!a||"replace"===e&&(!Jg||!ev||nv)||"split"===e&&!rv){var s=/./[i],l=n(i,""[e],(function(e,t,n,r,i){return t.exec===Zg?o&&!i?{done:!0,value:s.call(t,n,r)}:{done:!0,value:e.call(n,t,r)}:{done:!1}}),{REPLACE_KEEPS_$0:ev,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:nv}),u=l[0],c=l[1];Vg(String.prototype,e,u),Vg(RegExp.prototype,i,2==t?function(e,t){return c.call(e,this,t)}:function(e){return c.call(e,this)})}r&&Kg(RegExp.prototype[i],"sham",!0)})("match",1,(function(e,t,n){return[function(t){var n=hv(this),r=null==t?void 0:t[e];return void 0!==r?r.call(t,n):new RegExp(t)[e](String(n))},function(e){var r=n(t,e,this);if(r.done)return r.value;var i=cv(e),o=String(this);if(!i.global)return dv(i,o);var a=i.unicode;i.lastIndex=0;for(var s,l=[],u=0;null!==(s=dv(i,o));){var c=String(s[0]);l[u]=c,""===c&&(i.lastIndex=pv(o,fv(i.lastIndex),a)),u++}return 0===u?null:l}]}));var gv=ce,vv=Os,mv=js.trim;Qn({target:"String",proto:!0,forced:function(e){return gv((function(){return!!vv[e]()||"​᠎"!="​᠎"[e]()||vv[e].name!==e}))}("trim")},{trim:function(){return mv(this)}});var yv=Qn,bv=mn.indexOf,wv=ei,xv=[].indexOf,Ev=!!xv&&1/[1].indexOf(1,-0)<0,kv=wv("indexOf");yv({target:"Array",proto:!0,forced:Ev||!kv},{indexOf:function(e){return Ev?xv.apply(this,arguments)||0:bv(this,e,arguments.length>1?arguments[1]:void 0)}});var Sv=Mu.isFinite;var Pv=b((function(e){return"number"==typeof e&&Sv(e)})),Ov=Uu,Iv=nc,Dv=Vu;var Av=b((function(e){return"string"==typeof e||!Iv(e)&&Dv(e)&&"[object String]"==Ov(e)})),Cv=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n,[{key:"resizable",get:function(){return this.data.resizable||null}}]),n}(ch);a(Cv,"type","resizable");var Lv=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(Cv);a(Lv,"type","resizable:init");var jv=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(Cv);a(jv,"type","resizable:destroy");var zv=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n,[{key:"element",get:function(){return this.data.element||null}},{key:"helper",get:function(){return this.data.helper||null}},{key:"originalElement",get:function(){return this.data.originalElement||null}},{key:"originalSize",get:function(){return this.data.originalSize||null}},{key:"originalPosition",get:function(){return this.data.originalPosition||null}},{key:"size",get:function(){return this.data.size||null}},{key:"position",get:function(){return this.data.position||null}},{key:"sensorEvent",get:function(){return this.data.sensorEvent||null}},{key:"originalEvent",get:function(){return this.data.originalEvent||null}}]),n}(ch),Mv=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(zv);a(Mv,"type","resize:start"),a(Mv,"cancelable",!0);var Tv=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(zv);a(Tv,"type","resize:change"),a(Tv,"cancelable",!0);var Rv=function(e){s(n,e);var t=h(n);function n(){return r(this,n),t.apply(this,arguments)}return o(n)}(zv);a(Rv,"type","resize:stop"),a(Rv,"cancelable",!0);var Hv={n:function(e,t){return{height:Math.max(e.size.height-t.y,0),top:e.position.top+t.y}},s:function(e,t){return{height:Math.max(e.size.height+t.y,0)}},e:function(e,t){return{width:Math.max(e.size.width+t.x,0)}},w:function(e,t){return{width:Math.max(e.size.width-t.x,0),left:e.position.left+t.x}},ne:function(e,t){return{width:Math.max(e.size.width+t.x,0),height:Math.max(e.size.height-t.y,0),top:e.position.top+t.y}},nw:function(e,t){return{width:Math.max(e.size.width-t.x,0),height:Math.max(e.size.height-t.y,0),top:e.position.top+t.y,left:e.position.left+t.x}},se:function(e,t){return{width:Math.max(e.size.width+t.x,0),height:Math.max(e.size.height+t.y,0)}},sw:function(e,t){return{width:Math.max(e.size.width-t.x,0),height:Math.max(e.size.height+t.y,0),left:e.position.left+t.x}}},Nv=/^(canvas|textarea|input|select|button|img)$/i,_v=function(e){s(i,e);var t=h(i);function i(){var e;r(this,i);for(var o=arguments.length,s=new Array(o),l=0;l<o;l++)s[l]=arguments[l];return a(c(e=t.call.apply(t,[this].concat(s))),"originalElement",null),a(c(e),"originalResize",null),a(c(e),"pressing",!1),a(c(e),"resizing",!1),a(c(e),"wrapped",!1),a(c(e),"currentHandle",null),a(c(e),"currentDirection",null),a(c(e),"handleDirections",[]),a(c(e),"handleElements",[]),a(c(e),"helper",null),a(c(e),"offset",{click:null,helper:null}),a(c(e),"originalAttrs",{}),a(c(e),"currentAttrs",{}),a(c(e),"previousAttrs",{}),a(c(e),"aspectRatio",null),a(c(e),"resizableElements",[]),a(c(e),"listeners",[]),a(c(e),"setup",(function(){var t=e.options.autoHide;e.addPlugin(new lp(c(e))),e.addPlugin(new sp(c(e))),e.addPlugin(new pd(c(e))),e.addPlugin(new dd(c(e))),e.addSensor(new ng(c(e))),document.addEventListener("mouse:down",e.onMouseDown),document.addEventListener("mouse:stop",(function(){e.pressing=!1})),document.addEventListener("mouse:start",e.onDragStart),document.addEventListener("mouse:move",e.onDragMove),document.addEventListener("mouse:stop",e.onDragStop),e.originalElement=e.element,k(e.element,e.elementClass),z(e.element,{position:"relative"}),e.element.nodeName.match(Nv)?e.createWrapper():e.element[e.dataProperty]=c(e),e.createHandles(),t&&(k(e.element,e.autoHideClass),e.listeners.push(M(e.element,"mouseenter",(function(){e.disabled||(ie(e.element,e.autoHideClass),e.handleElements.forEach((function(e){return mh(e)})))}))),e.listeners.push(M(e.element,"mouseleave",(function(){e.disabled||e.resizing||(k(e.element,e.autoHideClass),e.handleElements.forEach((function(e){return yh(e)})))})))),e.trigger(new Lv({resizable:c(e)}))})),a(c(e),"onMouseDown",(function(t){var n=t.detail;n.caller===c(e)&&e.currentHandle&&e.currentDirection&&(e.disabled?n.cancel():e.isInsideHandle(n)?e.pressing=!0:n.cancel())})),a(c(e),"onDragStart",(function(t){var n,r=e.options.aspectRatio,i=t.detail;if(i.caller===c(e)&&e.currentHandle&&e.currentDirection){e.resizing=!0,e.helper=e.createHelper(i),e.offset.click={left:i.pageX,top:i.pageY},e.offset.helper=Z(e.helper),e.initializeResize(),e.aspectRatio=Pv(r)?r:null;var o=new Mv({source:e.element,helper:e.helper,originalElement:e.originalElement,originalSize:e.originalAttrs.size,originalPosition:e.originalAttrs.position,size:e.currentAttrs.size,position:e.currentAttrs.position,sensorEvent:i,originalEvent:i.originalEvent});e.trigger(o),o.canceled?e.onDragCancel(Oh(e.helper)):(k(e.helper,e.resizingClass),n=z(e.currentHandle,"cursor"),z(document.body,{cursor:n&&"auto"!==n?n:"".concat(e.elementClass,"-").concat(e.currentDirection)}))}})),a(c(e),"onDragCancel",(function(t){e.sensors.forEach((function(e){return e.cancel(t)})),e.clear()})),a(c(e),"onDragMove",(function(t){var r=t.detail;if(r.caller===c(e)&&e.currentHandle&&e.currentDirection){e.previousAttrs={size:n({},e.currentAttrs.size),position:n({},e.currentAttrs.position)},e.calculateResize(r);var i=new Tv({element:e.element,helper:e.helper,originalElement:e.originalElement,originalSize:e.originalAttrs.size,originalPosition:e.originalAttrs.position,size:e.currentAttrs.size,position:e.currentAttrs.position,sensorEvent:r,originalEvent:r.originalEvent});e.trigger(i),i.canceled||(e.currentAttrs.size=n({},i.size),e.currentAttrs.position=n({},i.position),e.applyResize(),e.helper===e.element&&e.updateResizableElements())}})),a(c(e),"onDragStop",(function(t){var n={},r=e.options,i=r.animate,o=r.flex,s=e.originalAttrs,l=s.size,u=s.position,f=e.currentAttrs,h=f.size,p=f.position,d=t.detail;if(d.caller===c(e)&&e.currentHandle&&e.currentDirection){n[o?"flexBasis":"width"]="".concat(ae(e.helper),"px"),n.height="".concat(K(e.helper),"px"),n.top="".concat(Mh(e.helper,"top"),"px"),n.left="".concat(Mh(e.helper,"left"),"px"),z(e.helper,h),i||(z(e.element,n),e.updateResizableElements());var g,v=new Rv({source:e.element,helper:e.helper,originalElement:e.originalElement,originalSize:e.originalAttrs.size,originalPosition:e.originalAttrs.position,size:h,position:p,sensorEvent:d,originalEvent:d.originalEvent});if(e.trigger(v),v.canceled)z(e.element,(a(g={},o?"flexBasis":"width","".concat(l.width,"px")),a(g,"height","".concat(l.height,"px")),a(g,"top","".concat(u.top,"px")),a(g,"left","".concat(u.left,"px")),g)),e.clear(),e.updateResizableElements();else e.clear()}})),e}return o(i,[{key:"cancel",value:function(){this.resizing?this.onDragCancel(Oh(this.helper)):this.clear()}},{key:"destroy",value:function(){this.resizing?this.pendingDestroy=!0:(this.plugins.forEach((function(e){return e.detach()})),this.sensors.forEach((function(e){return e.detach()})),document.removeEventListener("mouse:start",this.onDragStart),document.removeEventListener("mouse:move",this.onDragMove),document.removeEventListener("mouse:stop",this.onDragStop),ie(this.element,this.elementClass),this.wrapped?this.destroyWrapper():delete this.element[this.dataProperty],this.originalElement&&this.originalResize&&z(this.originalElement,{resize:this.originalResize}),this.destroyHandles(),this.listeners.forEach((function(e){return e()})),this.trigger(new jv({sortable:this})))}},{key:"dataProperty",get:function(){return"resizableInstance"}},{key:"elementClass",get:function(){return"ui-resizable"}},{key:"wrapperClass",get:function(){return"ui-resizable-wrapper"}},{key:"autoHideClass",get:function(){return"ui-resizable-autohide"}},{key:"handleClass",get:function(){return"ui-resizable-handle"}},{key:"handleDirectionProperty",get:function(){return"resizableDirection"}},{key:"helperClass",get:function(){return"ui-resizable-helper"}},{key:"resizingClass",get:function(){return"ui-resizable-resizing"}},{key:"ghostClass",get:function(){return"ui-resizable-ghost"}},{key:"createWrapper",value:function(){var e=Ph("div",null,this.element.parentNode);k(e,this.wrapperClass),z(e,{position:z(this.element,"position"),width:ae(this.element),height:K(this.element),top:z(this.element,"top"),left:z(this.element,"left"),marginTop:z(this.originalElement,"marginTop"),marginRight:z(this.originalElement,"marginRight"),marginBottom:z(this.originalElement,"marginBottom"),marginLeft:z(this.originalElement,"marginLeft")}),e[this.dataProperty]=this,z(this.originalElement,{display:"block",position:"static",zoom:1}),this.originalResize=z(this.originalElement,"resize"),z(this.originalElement,{resize:"none"}),this.resizableElements.push(this.originalElement),this.updateResizableElements(),this.wrapped=!0}},{key:"destroyWrapper",value:function(){var e,t=this.element,n=this.options.flex;z(this.originalElement,(a(e={position:z(t,"position")},n?"flexBasis":"width",ae(t)),a(e,"height",K(t)),a(e,"top",z(t,"top")),a(e,"left",z(t,"left")),e)),Sh(this.originalElement,t),ne(t),delete t[this.dataProperty]}},{key:"createHandles",value:function(){var e=this,t=this.options.handles,r=this.options,o=r.autoHide,s=r.zIndex;t&&Av(t)?"all"===t&&(t=Jh.join(",")):t="e,s,se",this.handleDirections=t.split(",").map((function(e){return e.trim()})),this.handleDirections.forEach((function(t){if(-1!==Jh.indexOf(t)){var r=Ph("div",null,e.element);if(k(r,e.handleClass),k(r,"".concat(e.elementClass,"-").concat(t)),i.injectedStyles[t]||(c="".concat(e.elementClass,"-").concat(t),f=n(n({},rp[t]),{display:"block",position:"absolute"}),h=[".".concat(c," {")],nf(f,(function(e,t){h.push("".concat(uh(t),": ").concat(e,";"))})),h.push("}"),Iu(h.join("\n")),i.injectedStyles=!0),bh(r),z(r,{zIndex:s+(2===t.length?1:0)}),e.listeners.push(M(r,"mouseover",(function(t){e.pressing||(e.currentHandle=t.target,e.currentDirection=t.target[e.handleDirectionProperty])}))),r[e.handleDirectionProperty]=t,o&&yh(r),e.wrapped&&function(e){return!!e&&Q.test(e.nodeName)}(e.originalElement)){var l=/sw|ne|nw|se|n|s/.test(t)?K(r):ae(r),u=/ne|nw|n/.test(t)?"Top":/se|sw|s/.test(t)?"Bottom":/^e$/.test(t)?"Right":"Left";z(r,a({},"padding".concat(u),l)),e.updateResizableElements()}e.handleElements.push(r)}var c,f,h}))}},{key:"findHandles",value:function(){return this.handleElements}},{key:"destroyHandles",value:function(){var e=this;this.handleElements.forEach((function(t){delete t[e.handleDirectionProperty],ne(t)}))}},{key:"createHelper",value:function(){var e,t,n=this.options,r=n.animate,i=n.flex,o=n.ghost,s=n.zIndex,l=Z(this.element);r||o?(k(e=Ph("div",null,document.body),this.helperClass),z(e,(a(t={},i?"flexBasis":"width","".concat(ae(this.element),"px")),a(t,"height","".concat(K(this.element),"px")),a(t,"position","absolute"),a(t,"left","".concat(l.left,"px")),a(t,"top","".concat(l.top,"px")),a(t,"zIndex",(s||1)+1),t)),bh(e)):e=this.element;return e}},{key:"initializeResize",value:function(){var e={top:Mh(this.helper,"top"),left:Mh(this.helper,"left")};this.originalAttrs={size:{width:ae(this.element),height:K(this.element)},position:n({},e)},this.currentAttrs={size:n({},this.originalAttrs.size),position:n({},e)}}},{key:"calculateResize",value:function(e){var t=e.pageX,n=e.pageY,r=this.aspectRatio,i=this.currentDirection,o=this.offset.click,a=this.currentAttrs,s=a.size,l=a.position,u={y:n-o.top,x:t-o.left},c=Hv[this.currentDirection](this.originalAttrs,u);r&&(Pv(c.width)?c.height=c.width/r:Pv(c.height)&&(c.width=c.height*r),"sw"===i&&(c.left=l.left+(s.width-c.width),c.top=null),"nw"===i&&(c.top=l.top+(s.height-c.height),c.left=l.left+(s.width-c.width))),c=this.applyBoundaries(c),this.offset.helper=Z(this.helper),Pv(c.width)&&(this.currentAttrs.size.width=c.width),Pv(c.height)&&(this.currentAttrs.size.height=c.height),Pv(c.top)&&(this.currentAttrs.position.top=c.top),Pv(c.left)&&(this.currentAttrs.position.left=c.left)}},{key:"applyBoundaries",value:function(e){var t={minWidth:Pv(this.options.minWidth)?Math.max(this.options.minWidth,0):0,maxWidth:Pv(this.options.maxWidth)?this.options.maxWidth:1/0,minHeight:Pv(this.options.minHeight)?Math.max(this.options.minHeight,0):0,maxHeight:Pv(this.options.maxHeight)?this.options.maxHeight:1/0},n=this.originalAttrs,r=n.size,i=n.position,o=/sw|nw|w/.test(this.currentDirection),a=/nw|ne|n/.test(this.currentDirection);return Pv(e.width)&&t.minWidth>e.width&&(e.width=t.minWidth,o&&(e.left=i.left+r.width-t.minWidth)),Pv(e.width)&&t.maxWidth<e.width&&(e.width=t.maxWidth,o&&(e.left=i.left+r.width-t.maxWidth)),Pv(e.height)&&t.minHeight>e.height&&(e.height=t.minHeight,a&&(e.top=i.top+r.height-t.minHeight)),Pv(e.height)&&t.maxHeight<e.height&&(e.height=t.maxHeight,a&&(e.top=i.top+r.height-t.maxHeight)),e}},{key:"applyResize",value:function(){var e={},t=this.options.flex,n=this.currentAttrs,r=n.size,i=n.position,o=this.previousAttrs,a=o.size,s=o.position;return r.width!==a.width&&(e[t?"flexBasis":"width"]="".concat(r.width,"px")),r.height!==a.height&&(e.height="".concat(r.height,"px")),i.top!==s.top&&(e.top="".concat(i.top,"px")),i.left!==s.left&&(e.left="".concat(i.left,"px")),z(this.helper,e),e}},{key:"updateResizableElements",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this.resizableElements.length){var t=this.options.flex,n=e&&e.width&&e.height?e:{width:ae(this.helper||this.element),height:K(this.helper||this.element)};this.resizableElements.forEach((function(e){var r,i=Lh(e);z(e,(a(r={},t?"flexBasis":"width","".concat(n.width-i.width,"px")),a(r,"height","".concat(n.height-i.height,"px")),r))}))}}},{key:"clear",value:function(){this.resizing=!1,this.originalAttrs={},this.currentAttrs={},this.previousAttrs={},this.offset={click:null,helper:null},this.aspectRatio=null,this.helper&&this.helper!==this.element&&(this.helper.parentNode.removeChild(this.helper),this.helper=null),z(document.body,{cursor:"auto"}),ie(this.element,this.resizingClass),this.pendingDestroy&&(this.destroy(),this.pendingDestroy=!1)}}]),i}(jg);a(_v,"defaultOptions",{alsoResize:null,animate:!1,animateDuration:500,aspectRatio:!1,autoHide:!1,containment:null,disabled:!1,distance:0,flex:!1,ghost:!1,grid:null,handles:"e,s,se",maxHeight:null,maxWidth:null,minHeight:null,minWidth:null,zIndex:1}),a(_v,"injectedStyles",{});var $v={Plugin:x,Sensor:eg,Draggable:jg,Droppable:Bg,DragDropManager:Nh,Sortable:Ug,Resizable:_v};e.DragDropManager=Nh,e.Draggable=jg,e.Droppable=Bg,e.Plugin=x,e.Resizable=_v,e.Sensor=eg,e.Sortable=Ug,e.default=$v,Object.defineProperty(e,"__esModule",{value:!0})}));


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/style.css":
/*!*************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/style.css ***!
  \*************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `body {
    margin: 0;
    min-height: 100vh;
    display: grid;
    grid-template-columns: 300px 1fr;
    grid-template-rows: 100px;
    --faded: rgb(97, 92, 92);
    --cream: rgb(250, 245, 238);
    background-color: var(--cream);
}

h1, h2, h3, h4, h5, p {
    margin: 0;
}

svg {
    width: 20px;
    height: 20px;
}

svg path {
    fill: currentColor;
}

header {
    font-size: 2.75rem;
    grid-column: span 2;
    display: grid;
    grid-template-columns: 275px 1fr;
    border-bottom: 1px black solid;
}

header h1 {
    justify-self: center;
}

aside {
    padding: 20px;
    display: flex;
    flex-direction: column;
    gap: 10px;
    border-right: 1px solid black;
}

aside > div.projects {
    flex: 1;
    display: grid;
    align-content: start;
    align-items: center;
    gap: 5px;
    height: 32.5px;
}

.move-icon:hover {
    cursor: move;
}

div.project-container {
    display: grid;
    gap: 5px;
}

div.projects div.project {
    border: 1px solid black;
    padding: 5px;
    box-sizing: border-box;
}

div.projects div.project.ui-sortable-placeholder {
    background-color: transparent;
    border: none;
    height: 32.5px;
}

main {
    padding: 20px;
    display: flex;
    flex-direction: column;
    min-width: 300px;
}

main > h1 {
    align-self: center;
}

div.to-do {
    box-sizing: border-box;
    width: 250px;
    padding: 10px;
    border: 1px solid black;
    display: grid;
    gap: 5px;
    outline-offset: 3px;
}

#main[data-project] div.to-do {
    margin-bottom: 0;
}

.empty-message {
    text-align: center;
}

.to-do[data-priority='high'] {
    outline: 1px solid red;
}

.to-do[data-priority='medium'] {
    outline: 1px solid orange;
}

.to-do[data-priority='low'] {
    outline: 1px solid green;
}

div.to-do.checked {
    outline: none;
}

div.to-do.past {
    border: var(--faded) 1px solid;
    color: var(--faded);
    outline: none;
}

div.to-do.drop-zone {
    border-style: dashed;
    opacity: 0.4;
}

div.to-do > div.checklist {
    display: grid;
    gap: 5px;
    padding: 5px;
    border: 1px black solid;
}

div.to-do.past > div.checklist {
    border: var(--faded) 1px solid;
    color: var(--faded);
    outline: none;
}

div.title-box > div.checkbox {
    border-radius: 9px;
    width: 15px;
    height: 15px;
    align-self: start;
}

div.title-box > h4 {
    font-size: 1.25rem;
    max-width: 175px;
}

div.to-do div.title-box {
    word-wrap: break-word;
    display: grid;
    grid-template-columns: auto 1fr auto;
    gap: 5px;
}

div.to-do > p {
    max-width: 200px;
    word-wrap: break-word;
}

div.title-box:first-child {
    align-self: start;
}

div.to-do.checked > div.title-box > div.checkbox {
    border: 1px black solid;
    background-color: black;
}

div.to-do.unchecked > div.title-box > div.checkbox {
    border: 1px black solid;
}

div.to-do.past > div.title-box > div.checkbox {
    border: 1px var(--faded) solid;
}

div.to-do.past > div.buttons-box > button {
    color: var(--faded);
}

div.to-do.checked.past > div.title-box > div.checkbox {
    background-color: var(--faded);
}

div.to-do.checked > div.title-box > h4{
    text-decoration: line-through;
}

div.to-do.past div.check-item.checked > div.checklist-checkbox {
    background-color: var(--faded);
}

div.to-do.past button {
    color: var(--faded);
}

div.project div {
    height: 15px;
}

div.project div.name {
    display: flex;
    align-items: center;
}

div.project svg.move-icon {
    width: 15px;
    height: 15px;
}

div.project svg.move-icon:hover {
    color: rgb(187, 0, 0);
}

div.project {
    display: grid;
    grid-auto-flow: column;
    grid-template-columns: auto 1fr auto;
    gap: 5px;
    justify-content: space-between;
    align-items: center;
    position: relative;
}

div.check-item > div.checklist-checkbox {
    width: 10px;
    height: 10px;
    align-self: start;
    margin-top: 4.5px;
    border-radius: 1px;
}

div.check-item.checked > div.checklist-checkbox {
    border: 1px solid black;
    background-color: black;
}

div.check-item.unchecked > div.checklist-checkbox {
    border: 1px solid black;
}

div.check-item > button.pop-up {
    align-self: start;
}

div.to-do.past div.checklist-checkbox {
    border: gray 1px solid;
}

div.check-item {
    display: grid;
    gap: 5px;
    grid-auto-flow: column;
    grid-template-columns: auto 1fr auto;
    align-items: center;
    position: relative;
    min-height: 20px;
    word-wrap: break-word;
}

div.check-item > p {
    max-width: 150px;
}

div.checklist.minimized > button,
div.checklist.minimized > div.check-item {
    display: none;
} 

div.expander svg {
    height: 15px;
    width: 15px;
}

button.pop-up {
    border: none;
    padding: 0;
    margin-top: 2px;
    background-color: transparent;
}

button.pop-up > svg {
    width: 15px;
    height: 15px;
}

div.expander {
    text-align: right;
}

div.buttons-box {
    display: grid;
    grid-auto-flow: column;
    justify-content: end;
    gap: 3px;
    padding-top: 5px;
}

div.projects div.pop-up {
    right: -17px;
    top: -48px;
    height: 45px;
}

div.checklist div.pop-up {
    right: -22px;
    top: -53px;
}

div.pop-up {
    position: absolute;
    right: -1px;
    display: grid;
    gap: 2px;
    border: none;
    border-radius: 2px;
    background-color: white;
    box-shadow: rgba(0, 0, 0, 0.4) 0 2px 3px;
    padding: 5px;
}

div.pop-up > button {
    border: 1px rgb(155, 155, 155) solid;
    border-radius: 2px;
    background-color: white;
    color: rgb(55, 55, 55);
}

div.pop-up > button:hover {
    background-color: rgb(201, 201, 201);
}

.buttons-box > button {
    border: none;
    background-color: transparent;
    padding: 0;
    height: 17px;
    width: 17px;
}

.buttons-box svg{
    height: 15px;
    width: 15px;
}

.buttons-box button:last-child svg {
    height: 15px;
    width: 15px;
}

.buttons-box button:hover svg {
    margin-top: -5px;
}

.buttons-box button:first-child:hover {
    color: rgb(111, 60, 28);
}

.buttons-box button:last-child:hover {
    color: gray;
}

div.projects form,
div.checklist form {
    border: 1px solid black;
    padding: 5px;
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 5px;
}

div.projects form > input,
div.checklist form > input {
    grid-column: span 2;
    border: none;
    padding: 5px;
    border: 1px solid black;
}

div.projects form > button,
div.checklist form > button {
    border: none;
    background-color: white;
    border: 1px solid black;
}

div.projects form > button:hover,
div.checklist form > button:hover {
    background-color: rgb(201, 201, 201);
}

dialog {
    width: 300px;
    border: 1px solid black;
}

dialog form {
    display: grid;
    gap: 10px;
}

dialog .input {
    display: grid;
}

dialog .input.radio {
    grid-auto-flow: column;
    border: 1px black solid;
    align-content: space-between;
    margin-inline-start: 0;
    margin-inline-end: 0;
    padding-block-start: 5px;
    padding-block-end: 10px;
}

dialog .input.radio div {
    display: grid;
    justify-content: center;
    justify-items: center;
}

dialog .input > input,
dialog .input > textarea,
dialog .input > select {
    border: 1px solid black;
    padding: 5px;
}

dialog .input.date {
    grid-auto-flow: column;
    grid-template-columns: auto auto;
    gap: 5px;
    justify-content: space-between;
    align-items: center;
}

dialog div.close {
    display: grid;
    grid-auto-flow: column;
    gap: 5px;
}

dialog div.close > button {
    height: 30px;
    border: 1px solid black;
    background-color: white;
}

dialog textarea {
    resize: none;
    overflow: scroll;
}

.tooltip {
    position: absolute;
    width: 100px;
    font-size: 0.6rem;
    text-align: center;
    line-height: 10px;
    padding: 5px;
    border: 0.5px solid rgba(0, 0, 0, 0.8);
    outline: 0.5px solid rgba(0, 0, 0, 0.8);
    outline-offset: -3px;
    background-color: rgba(255, 255, 255, 0.8);
}

.tooltip-text {
    opacity: 1;
    font-family: sans-serif;
}

.packery-drop-placeholder {
    border: 1px black dashed;
}

div.to-do.is-dragging {
    border: 5px solid rebeccapurple;
}`, "",{"version":3,"sources":["webpack://./src/style.css"],"names":[],"mappings":"AAAA;IACI,SAAS;IACT,iBAAiB;IACjB,aAAa;IACb,gCAAgC;IAChC,yBAAyB;IACzB,wBAAwB;IACxB,2BAA2B;IAC3B,8BAA8B;AAClC;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;IACnB,aAAa;IACb,gCAAgC;IAChC,8BAA8B;AAClC;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,6BAA6B;AACjC;;AAEA;IACI,OAAO;IACP,aAAa;IACb,oBAAoB;IACpB,mBAAmB;IACnB,QAAQ;IACR,cAAc;AAClB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,QAAQ;AACZ;;AAEA;IACI,uBAAuB;IACvB,YAAY;IACZ,sBAAsB;AAC1B;;AAEA;IACI,6BAA6B;IAC7B,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;IACtB,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,aAAa;IACb,QAAQ;IACR,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,8BAA8B;IAC9B,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,oBAAoB;IACpB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,QAAQ;IACR,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;IACI,8BAA8B;IAC9B,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,qBAAqB;IACrB,aAAa;IACb,oCAAoC;IACpC,QAAQ;AACZ;;AAEA;IACI,gBAAgB;IAChB,qBAAqB;AACzB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,uBAAuB;IACvB,uBAAuB;AAC3B;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,oCAAoC;IACpC,QAAQ;IACR,8BAA8B;IAC9B,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,uBAAuB;IACvB,uBAAuB;AAC3B;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,QAAQ;IACR,sBAAsB;IACtB,oCAAoC;IACpC,mBAAmB;IACnB,kBAAkB;IAClB,gBAAgB;IAChB,qBAAqB;AACzB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;;IAEI,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,YAAY;IACZ,UAAU;IACV,eAAe;IACf,6BAA6B;AACjC;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,oBAAoB;IACpB,QAAQ;IACR,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,UAAU;AACd;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,aAAa;IACb,QAAQ;IACR,YAAY;IACZ,kBAAkB;IAClB,uBAAuB;IACvB,wCAAwC;IACxC,YAAY;AAChB;;AAEA;IACI,oCAAoC;IACpC,kBAAkB;IAClB,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,YAAY;IACZ,6BAA6B;IAC7B,UAAU;IACV,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,WAAW;AACf;;AAEA;;IAEI,uBAAuB;IACvB,YAAY;IACZ,aAAa;IACb,8BAA8B;IAC9B,QAAQ;AACZ;;AAEA;;IAEI,mBAAmB;IACnB,YAAY;IACZ,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;;IAEI,YAAY;IACZ,uBAAuB;IACvB,uBAAuB;AAC3B;;AAEA;;IAEI,oCAAoC;AACxC;;AAEA;IACI,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,sBAAsB;IACtB,uBAAuB;IACvB,4BAA4B;IAC5B,sBAAsB;IACtB,oBAAoB;IACpB,wBAAwB;IACxB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,qBAAqB;AACzB;;AAEA;;;IAGI,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,sBAAsB;IACtB,gCAAgC;IAChC,QAAQ;IACR,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;;AAEA;IACI,YAAY;IACZ,uBAAuB;IACvB,uBAAuB;AAC3B;;AAEA;IACI,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,iBAAiB;IACjB,YAAY;IACZ,sCAAsC;IACtC,uCAAuC;IACvC,oBAAoB;IACpB,0CAA0C;AAC9C;;AAEA;IACI,UAAU;IACV,uBAAuB;AAC3B;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,+BAA+B;AACnC","sourcesContent":["body {\n    margin: 0;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 300px 1fr;\n    grid-template-rows: 100px;\n    --faded: rgb(97, 92, 92);\n    --cream: rgb(250, 245, 238);\n    background-color: var(--cream);\n}\n\nh1, h2, h3, h4, h5, p {\n    margin: 0;\n}\n\nsvg {\n    width: 20px;\n    height: 20px;\n}\n\nsvg path {\n    fill: currentColor;\n}\n\nheader {\n    font-size: 2.75rem;\n    grid-column: span 2;\n    display: grid;\n    grid-template-columns: 275px 1fr;\n    border-bottom: 1px black solid;\n}\n\nheader h1 {\n    justify-self: center;\n}\n\naside {\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    border-right: 1px solid black;\n}\n\naside > div.projects {\n    flex: 1;\n    display: grid;\n    align-content: start;\n    align-items: center;\n    gap: 5px;\n    height: 32.5px;\n}\n\n.move-icon:hover {\n    cursor: move;\n}\n\ndiv.project-container {\n    display: grid;\n    gap: 5px;\n}\n\ndiv.projects div.project {\n    border: 1px solid black;\n    padding: 5px;\n    box-sizing: border-box;\n}\n\ndiv.projects div.project.ui-sortable-placeholder {\n    background-color: transparent;\n    border: none;\n    height: 32.5px;\n}\n\nmain {\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n}\n\nmain > h1 {\n    align-self: center;\n}\n\ndiv.to-do {\n    box-sizing: border-box;\n    width: 250px;\n    padding: 10px;\n    border: 1px solid black;\n    display: grid;\n    gap: 5px;\n    outline-offset: 3px;\n}\n\n#main[data-project] div.to-do {\n    margin-bottom: 0;\n}\n\n.empty-message {\n    text-align: center;\n}\n\n.to-do[data-priority='high'] {\n    outline: 1px solid red;\n}\n\n.to-do[data-priority='medium'] {\n    outline: 1px solid orange;\n}\n\n.to-do[data-priority='low'] {\n    outline: 1px solid green;\n}\n\ndiv.to-do.checked {\n    outline: none;\n}\n\ndiv.to-do.past {\n    border: var(--faded) 1px solid;\n    color: var(--faded);\n    outline: none;\n}\n\ndiv.to-do.drop-zone {\n    border-style: dashed;\n    opacity: 0.4;\n}\n\ndiv.to-do > div.checklist {\n    display: grid;\n    gap: 5px;\n    padding: 5px;\n    border: 1px black solid;\n}\n\ndiv.to-do.past > div.checklist {\n    border: var(--faded) 1px solid;\n    color: var(--faded);\n    outline: none;\n}\n\ndiv.title-box > div.checkbox {\n    border-radius: 9px;\n    width: 15px;\n    height: 15px;\n    align-self: start;\n}\n\ndiv.title-box > h4 {\n    font-size: 1.25rem;\n    max-width: 175px;\n}\n\ndiv.to-do div.title-box {\n    word-wrap: break-word;\n    display: grid;\n    grid-template-columns: auto 1fr auto;\n    gap: 5px;\n}\n\ndiv.to-do > p {\n    max-width: 200px;\n    word-wrap: break-word;\n}\n\ndiv.title-box:first-child {\n    align-self: start;\n}\n\ndiv.to-do.checked > div.title-box > div.checkbox {\n    border: 1px black solid;\n    background-color: black;\n}\n\ndiv.to-do.unchecked > div.title-box > div.checkbox {\n    border: 1px black solid;\n}\n\ndiv.to-do.past > div.title-box > div.checkbox {\n    border: 1px var(--faded) solid;\n}\n\ndiv.to-do.past > div.buttons-box > button {\n    color: var(--faded);\n}\n\ndiv.to-do.checked.past > div.title-box > div.checkbox {\n    background-color: var(--faded);\n}\n\ndiv.to-do.checked > div.title-box > h4{\n    text-decoration: line-through;\n}\n\ndiv.to-do.past div.check-item.checked > div.checklist-checkbox {\n    background-color: var(--faded);\n}\n\ndiv.to-do.past button {\n    color: var(--faded);\n}\n\ndiv.project div {\n    height: 15px;\n}\n\ndiv.project div.name {\n    display: flex;\n    align-items: center;\n}\n\ndiv.project svg.move-icon {\n    width: 15px;\n    height: 15px;\n}\n\ndiv.project svg.move-icon:hover {\n    color: rgb(187, 0, 0);\n}\n\ndiv.project {\n    display: grid;\n    grid-auto-flow: column;\n    grid-template-columns: auto 1fr auto;\n    gap: 5px;\n    justify-content: space-between;\n    align-items: center;\n    position: relative;\n}\n\ndiv.check-item > div.checklist-checkbox {\n    width: 10px;\n    height: 10px;\n    align-self: start;\n    margin-top: 4.5px;\n    border-radius: 1px;\n}\n\ndiv.check-item.checked > div.checklist-checkbox {\n    border: 1px solid black;\n    background-color: black;\n}\n\ndiv.check-item.unchecked > div.checklist-checkbox {\n    border: 1px solid black;\n}\n\ndiv.check-item > button.pop-up {\n    align-self: start;\n}\n\ndiv.to-do.past div.checklist-checkbox {\n    border: gray 1px solid;\n}\n\ndiv.check-item {\n    display: grid;\n    gap: 5px;\n    grid-auto-flow: column;\n    grid-template-columns: auto 1fr auto;\n    align-items: center;\n    position: relative;\n    min-height: 20px;\n    word-wrap: break-word;\n}\n\ndiv.check-item > p {\n    max-width: 150px;\n}\n\ndiv.checklist.minimized > button,\ndiv.checklist.minimized > div.check-item {\n    display: none;\n} \n\ndiv.expander svg {\n    height: 15px;\n    width: 15px;\n}\n\nbutton.pop-up {\n    border: none;\n    padding: 0;\n    margin-top: 2px;\n    background-color: transparent;\n}\n\nbutton.pop-up > svg {\n    width: 15px;\n    height: 15px;\n}\n\ndiv.expander {\n    text-align: right;\n}\n\ndiv.buttons-box {\n    display: grid;\n    grid-auto-flow: column;\n    justify-content: end;\n    gap: 3px;\n    padding-top: 5px;\n}\n\ndiv.projects div.pop-up {\n    right: -17px;\n    top: -48px;\n    height: 45px;\n}\n\ndiv.checklist div.pop-up {\n    right: -22px;\n    top: -53px;\n}\n\ndiv.pop-up {\n    position: absolute;\n    right: -1px;\n    display: grid;\n    gap: 2px;\n    border: none;\n    border-radius: 2px;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.4) 0 2px 3px;\n    padding: 5px;\n}\n\ndiv.pop-up > button {\n    border: 1px rgb(155, 155, 155) solid;\n    border-radius: 2px;\n    background-color: white;\n    color: rgb(55, 55, 55);\n}\n\ndiv.pop-up > button:hover {\n    background-color: rgb(201, 201, 201);\n}\n\n.buttons-box > button {\n    border: none;\n    background-color: transparent;\n    padding: 0;\n    height: 17px;\n    width: 17px;\n}\n\n.buttons-box svg{\n    height: 15px;\n    width: 15px;\n}\n\n.buttons-box button:last-child svg {\n    height: 15px;\n    width: 15px;\n}\n\n.buttons-box button:hover svg {\n    margin-top: -5px;\n}\n\n.buttons-box button:first-child:hover {\n    color: rgb(111, 60, 28);\n}\n\n.buttons-box button:last-child:hover {\n    color: gray;\n}\n\ndiv.projects form,\ndiv.checklist form {\n    border: 1px solid black;\n    padding: 5px;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 5px;\n}\n\ndiv.projects form > input,\ndiv.checklist form > input {\n    grid-column: span 2;\n    border: none;\n    padding: 5px;\n    border: 1px solid black;\n}\n\ndiv.projects form > button,\ndiv.checklist form > button {\n    border: none;\n    background-color: white;\n    border: 1px solid black;\n}\n\ndiv.projects form > button:hover,\ndiv.checklist form > button:hover {\n    background-color: rgb(201, 201, 201);\n}\n\ndialog {\n    width: 300px;\n    border: 1px solid black;\n}\n\ndialog form {\n    display: grid;\n    gap: 10px;\n}\n\ndialog .input {\n    display: grid;\n}\n\ndialog .input.radio {\n    grid-auto-flow: column;\n    border: 1px black solid;\n    align-content: space-between;\n    margin-inline-start: 0;\n    margin-inline-end: 0;\n    padding-block-start: 5px;\n    padding-block-end: 10px;\n}\n\ndialog .input.radio div {\n    display: grid;\n    justify-content: center;\n    justify-items: center;\n}\n\ndialog .input > input,\ndialog .input > textarea,\ndialog .input > select {\n    border: 1px solid black;\n    padding: 5px;\n}\n\ndialog .input.date {\n    grid-auto-flow: column;\n    grid-template-columns: auto auto;\n    gap: 5px;\n    justify-content: space-between;\n    align-items: center;\n}\n\ndialog div.close {\n    display: grid;\n    grid-auto-flow: column;\n    gap: 5px;\n}\n\ndialog div.close > button {\n    height: 30px;\n    border: 1px solid black;\n    background-color: white;\n}\n\ndialog textarea {\n    resize: none;\n    overflow: scroll;\n}\n\n.tooltip {\n    position: absolute;\n    width: 100px;\n    font-size: 0.6rem;\n    text-align: center;\n    line-height: 10px;\n    padding: 5px;\n    border: 0.5px solid rgba(0, 0, 0, 0.8);\n    outline: 0.5px solid rgba(0, 0, 0, 0.8);\n    outline-offset: -3px;\n    background-color: rgba(255, 255, 255, 0.8);\n}\n\n.tooltip-text {\n    opacity: 1;\n    font-family: sans-serif;\n}\n\n.packery-drop-placeholder {\n    border: 1px black dashed;\n}\n\ndiv.to-do.is-dragging {\n    border: 5px solid rebeccapurple;\n}"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
module.exports = function (cssWithMappingToString) {
  var list = [];

  // return the list of modules as css string
  list.toString = function toString() {
    return this.map(function (item) {
      var content = "";
      var needLayer = typeof item[5] !== "undefined";
      if (item[4]) {
        content += "@supports (".concat(item[4], ") {");
      }
      if (item[2]) {
        content += "@media ".concat(item[2], " {");
      }
      if (needLayer) {
        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");
      }
      content += cssWithMappingToString(item);
      if (needLayer) {
        content += "}";
      }
      if (item[2]) {
        content += "}";
      }
      if (item[4]) {
        content += "}";
      }
      return content;
    }).join("");
  };

  // import a list of modules into the list
  list.i = function i(modules, media, dedupe, supports, layer) {
    if (typeof modules === "string") {
      modules = [[null, modules, undefined]];
    }
    var alreadyImportedModules = {};
    if (dedupe) {
      for (var k = 0; k < this.length; k++) {
        var id = this[k][0];
        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }
    for (var _k = 0; _k < modules.length; _k++) {
      var item = [].concat(modules[_k]);
      if (dedupe && alreadyImportedModules[item[0]]) {
        continue;
      }
      if (typeof layer !== "undefined") {
        if (typeof item[5] === "undefined") {
          item[5] = layer;
        } else {
          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");
          item[5] = layer;
        }
      }
      if (media) {
        if (!item[2]) {
          item[2] = media;
        } else {
          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");
          item[2] = media;
        }
      }
      if (supports) {
        if (!item[4]) {
          item[4] = "".concat(supports);
        } else {
          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");
          item[4] = supports;
        }
      }
      list.push(item);
    }
  };
  return list;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/sourceMaps.js":
/*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/sourceMaps.js ***!
  \************************************************************/
/***/ ((module) => {

"use strict";


module.exports = function (item) {
  var content = item[1];
  var cssMapping = item[3];
  if (!cssMapping) {
    return content;
  }
  if (typeof btoa === "function") {
    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));
    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
    var sourceMapping = "/*# ".concat(data, " */");
    return [content].concat([sourceMapping]).join("\n");
  }
  return [content].join("\n");
};

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ addLeadingZeros)
/* harmony export */ });
function addLeadingZeros(number, targetLength) {
  var sign = number < 0 ? '-' : '';
  var output = Math.abs(number).toString();
  while (output.length < targetLength) {
    output = '0' + output;
  }
  return sign + output;
}

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/defaultLocale/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/defaultLocale/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../locale/en-US/index.js */ "./node_modules/date-fns/esm/locale/en-US/index.js");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/defaultOptions/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/defaultOptions/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getDefaultOptions: () => (/* binding */ getDefaultOptions),
/* harmony export */   setDefaultOptions: () => (/* binding */ setDefaultOptions)
/* harmony export */ });
var defaultOptions = {};
function getDefaultOptions() {
  return defaultOptions;
}
function setDefaultOptions(newOptions) {
  defaultOptions = newOptions;
}

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/format/formatters/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/format/formatters/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _lib_getUTCDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../_lib/getUTCDayOfYear/index.js */ "./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js");
/* harmony import */ var _lib_getUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../_lib/getUTCISOWeek/index.js */ "./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js");
/* harmony import */ var _lib_getUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../_lib/getUTCISOWeekYear/index.js */ "./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js");
/* harmony import */ var _lib_getUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../_lib/getUTCWeek/index.js */ "./node_modules/date-fns/esm/_lib/getUTCWeek/index.js");
/* harmony import */ var _lib_getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../_lib/getUTCWeekYear/index.js */ "./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js");
/* harmony import */ var _addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../addLeadingZeros/index.js */ "./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js");
/* harmony import */ var _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lightFormatters/index.js */ "./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js");







var dayPeriodEnum = {
  am: 'am',
  pm: 'pm',
  midnight: 'midnight',
  noon: 'noon',
  morning: 'morning',
  afternoon: 'afternoon',
  evening: 'evening',
  night: 'night'
};
/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* | Milliseconds in day            |
 * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
 * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
 * |  d  | Day of month                   |  D  | Day of year                    |
 * |  e  | Local day of week              |  E  | Day of week                    |
 * |  f  |                                |  F* | Day of week in month           |
 * |  g* | Modified Julian day            |  G  | Era                            |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  i! | ISO day of week                |  I! | ISO week of year               |
 * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
 * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
 * |  l* | (deprecated)                   |  L  | Stand-alone month              |
 * |  m  | Minute                         |  M  | Month                          |
 * |  n  |                                |  N  |                                |
 * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |
 * |  p! | Long localized time            |  P! | Long localized date            |
 * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
 * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
 * |  u  | Extended year                  |  U* | Cyclic year                    |
 * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
 * |  w  | Local week of year             |  W* | Week of month                  |
 * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
 * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
 * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 *
 * Letters marked by ! are non-standard, but implemented by date-fns:
 * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)
 * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
 *   i.e. 7 for Sunday, 1 for Monday, etc.
 * - `I` is ISO week of year, as opposed to `w` which is local week of year.
 * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
 *   `R` is supposed to be used in conjunction with `I` and `i`
 *   for universal ISO week-numbering date, whereas
 *   `Y` is supposed to be used in conjunction with `w` and `e`
 *   for week-numbering date specific to the locale.
 * - `P` is long localized date format
 * - `p` is long localized time format
 */

var formatters = {
  // Era
  G: function G(date, token, localize) {
    var era = date.getUTCFullYear() > 0 ? 1 : 0;
    switch (token) {
      // AD, BC
      case 'G':
      case 'GG':
      case 'GGG':
        return localize.era(era, {
          width: 'abbreviated'
        });
      // A, B
      case 'GGGGG':
        return localize.era(era, {
          width: 'narrow'
        });
      // Anno Domini, Before Christ
      case 'GGGG':
      default:
        return localize.era(era, {
          width: 'wide'
        });
    }
  },
  // Year
  y: function y(date, token, localize) {
    // Ordinal number
    if (token === 'yo') {
      var signedYear = date.getUTCFullYear();
      // Returns 1 for 1 BC (which is year 0 in JavaScript)
      var year = signedYear > 0 ? signedYear : 1 - signedYear;
      return localize.ordinalNumber(year, {
        unit: 'year'
      });
    }
    return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].y(date, token);
  },
  // Local week-numbering year
  Y: function Y(date, token, localize, options) {
    var signedWeekYear = (0,_lib_getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, options);
    // Returns 1 for 1 BC (which is year 0 in JavaScript)
    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;

    // Two digit year
    if (token === 'YY') {
      var twoDigitYear = weekYear % 100;
      return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(twoDigitYear, 2);
    }

    // Ordinal number
    if (token === 'Yo') {
      return localize.ordinalNumber(weekYear, {
        unit: 'year'
      });
    }

    // Padding
    return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(weekYear, token.length);
  },
  // ISO week-numbering year
  R: function R(date, token) {
    var isoWeekYear = (0,_lib_getUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(date);

    // Padding
    return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(isoWeekYear, token.length);
  },
  // Extended year. This is a single number designating the year of this calendar system.
  // The main difference between `y` and `u` localizers are B.C. years:
  // | Year | `y` | `u` |
  // |------|-----|-----|
  // | AC 1 |   1 |   1 |
  // | BC 1 |   1 |   0 |
  // | BC 2 |   2 |  -1 |
  // Also `yy` always returns the last two digits of a year,
  // while `uu` pads single digit years to 2 characters and returns other years unchanged.
  u: function u(date, token) {
    var year = date.getUTCFullYear();
    return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(year, token.length);
  },
  // Quarter
  Q: function Q(date, token, localize) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      // 1, 2, 3, 4
      case 'Q':
        return String(quarter);
      // 01, 02, 03, 04
      case 'QQ':
        return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(quarter, 2);
      // 1st, 2nd, 3rd, 4th
      case 'Qo':
        return localize.ordinalNumber(quarter, {
          unit: 'quarter'
        });
      // Q1, Q2, Q3, Q4
      case 'QQQ':
        return localize.quarter(quarter, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)
      case 'QQQQQ':
        return localize.quarter(quarter, {
          width: 'narrow',
          context: 'formatting'
        });
      // 1st quarter, 2nd quarter, ...
      case 'QQQQ':
      default:
        return localize.quarter(quarter, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone quarter
  q: function q(date, token, localize) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      // 1, 2, 3, 4
      case 'q':
        return String(quarter);
      // 01, 02, 03, 04
      case 'qq':
        return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(quarter, 2);
      // 1st, 2nd, 3rd, 4th
      case 'qo':
        return localize.ordinalNumber(quarter, {
          unit: 'quarter'
        });
      // Q1, Q2, Q3, Q4
      case 'qqq':
        return localize.quarter(quarter, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)
      case 'qqqqq':
        return localize.quarter(quarter, {
          width: 'narrow',
          context: 'standalone'
        });
      // 1st quarter, 2nd quarter, ...
      case 'qqqq':
      default:
        return localize.quarter(quarter, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // Month
  M: function M(date, token, localize) {
    var month = date.getUTCMonth();
    switch (token) {
      case 'M':
      case 'MM':
        return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].M(date, token);
      // 1st, 2nd, ..., 12th
      case 'Mo':
        return localize.ordinalNumber(month + 1, {
          unit: 'month'
        });
      // Jan, Feb, ..., Dec
      case 'MMM':
        return localize.month(month, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // J, F, ..., D
      case 'MMMMM':
        return localize.month(month, {
          width: 'narrow',
          context: 'formatting'
        });
      // January, February, ..., December
      case 'MMMM':
      default:
        return localize.month(month, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone month
  L: function L(date, token, localize) {
    var month = date.getUTCMonth();
    switch (token) {
      // 1, 2, ..., 12
      case 'L':
        return String(month + 1);
      // 01, 02, ..., 12
      case 'LL':
        return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(month + 1, 2);
      // 1st, 2nd, ..., 12th
      case 'Lo':
        return localize.ordinalNumber(month + 1, {
          unit: 'month'
        });
      // Jan, Feb, ..., Dec
      case 'LLL':
        return localize.month(month, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // J, F, ..., D
      case 'LLLLL':
        return localize.month(month, {
          width: 'narrow',
          context: 'standalone'
        });
      // January, February, ..., December
      case 'LLLL':
      default:
        return localize.month(month, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // Local week of year
  w: function w(date, token, localize, options) {
    var week = (0,_lib_getUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(date, options);
    if (token === 'wo') {
      return localize.ordinalNumber(week, {
        unit: 'week'
      });
    }
    return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(week, token.length);
  },
  // ISO week of year
  I: function I(date, token, localize) {
    var isoWeek = (0,_lib_getUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(date);
    if (token === 'Io') {
      return localize.ordinalNumber(isoWeek, {
        unit: 'week'
      });
    }
    return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(isoWeek, token.length);
  },
  // Day of the month
  d: function d(date, token, localize) {
    if (token === 'do') {
      return localize.ordinalNumber(date.getUTCDate(), {
        unit: 'date'
      });
    }
    return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].d(date, token);
  },
  // Day of year
  D: function D(date, token, localize) {
    var dayOfYear = (0,_lib_getUTCDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(date);
    if (token === 'Do') {
      return localize.ordinalNumber(dayOfYear, {
        unit: 'dayOfYear'
      });
    }
    return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dayOfYear, token.length);
  },
  // Day of week
  E: function E(date, token, localize) {
    var dayOfWeek = date.getUTCDay();
    switch (token) {
      // Tue
      case 'E':
      case 'EE':
      case 'EEE':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T
      case 'EEEEE':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu
      case 'EEEEEE':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday
      case 'EEEE':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Local day of week
  e: function e(date, token, localize, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      // Numerical value (Nth day of week with current locale or weekStartsOn)
      case 'e':
        return String(localDayOfWeek);
      // Padded numerical value
      case 'ee':
        return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(localDayOfWeek, 2);
      // 1st, 2nd, ..., 7th
      case 'eo':
        return localize.ordinalNumber(localDayOfWeek, {
          unit: 'day'
        });
      case 'eee':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T
      case 'eeeee':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu
      case 'eeeeee':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday
      case 'eeee':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone local day of week
  c: function c(date, token, localize, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      // Numerical value (same as in `e`)
      case 'c':
        return String(localDayOfWeek);
      // Padded numerical value
      case 'cc':
        return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(localDayOfWeek, token.length);
      // 1st, 2nd, ..., 7th
      case 'co':
        return localize.ordinalNumber(localDayOfWeek, {
          unit: 'day'
        });
      case 'ccc':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // T
      case 'ccccc':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'standalone'
        });
      // Tu
      case 'cccccc':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'standalone'
        });
      // Tuesday
      case 'cccc':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // ISO day of week
  i: function i(date, token, localize) {
    var dayOfWeek = date.getUTCDay();
    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
    switch (token) {
      // 2
      case 'i':
        return String(isoDayOfWeek);
      // 02
      case 'ii':
        return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(isoDayOfWeek, token.length);
      // 2nd
      case 'io':
        return localize.ordinalNumber(isoDayOfWeek, {
          unit: 'day'
        });
      // Tue
      case 'iii':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T
      case 'iiiii':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu
      case 'iiiiii':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday
      case 'iiii':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // AM or PM
  a: function a(date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';
    switch (token) {
      case 'a':
      case 'aa':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });
      case 'aaa':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        }).toLowerCase();
      case 'aaaaa':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });
      case 'aaaa':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // AM, PM, midnight, noon
  b: function b(date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours === 12) {
      dayPeriodEnumValue = dayPeriodEnum.noon;
    } else if (hours === 0) {
      dayPeriodEnumValue = dayPeriodEnum.midnight;
    } else {
      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';
    }
    switch (token) {
      case 'b':
      case 'bb':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });
      case 'bbb':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        }).toLowerCase();
      case 'bbbbb':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });
      case 'bbbb':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // in the morning, in the afternoon, in the evening, at night
  B: function B(date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;
    if (hours >= 17) {
      dayPeriodEnumValue = dayPeriodEnum.evening;
    } else if (hours >= 12) {
      dayPeriodEnumValue = dayPeriodEnum.afternoon;
    } else if (hours >= 4) {
      dayPeriodEnumValue = dayPeriodEnum.morning;
    } else {
      dayPeriodEnumValue = dayPeriodEnum.night;
    }
    switch (token) {
      case 'B':
      case 'BB':
      case 'BBB':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });
      case 'BBBBB':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });
      case 'BBBB':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Hour [1-12]
  h: function h(date, token, localize) {
    if (token === 'ho') {
      var hours = date.getUTCHours() % 12;
      if (hours === 0) hours = 12;
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }
    return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].h(date, token);
  },
  // Hour [0-23]
  H: function H(date, token, localize) {
    if (token === 'Ho') {
      return localize.ordinalNumber(date.getUTCHours(), {
        unit: 'hour'
      });
    }
    return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].H(date, token);
  },
  // Hour [0-11]
  K: function K(date, token, localize) {
    var hours = date.getUTCHours() % 12;
    if (token === 'Ko') {
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }
    return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(hours, token.length);
  },
  // Hour [1-24]
  k: function k(date, token, localize) {
    var hours = date.getUTCHours();
    if (hours === 0) hours = 24;
    if (token === 'ko') {
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }
    return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(hours, token.length);
  },
  // Minute
  m: function m(date, token, localize) {
    if (token === 'mo') {
      return localize.ordinalNumber(date.getUTCMinutes(), {
        unit: 'minute'
      });
    }
    return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].m(date, token);
  },
  // Second
  s: function s(date, token, localize) {
    if (token === 'so') {
      return localize.ordinalNumber(date.getUTCSeconds(), {
        unit: 'second'
      });
    }
    return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].s(date, token);
  },
  // Fraction of second
  S: function S(date, token) {
    return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].S(date, token);
  },
  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
  X: function X(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    if (timezoneOffset === 0) {
      return 'Z';
    }
    switch (token) {
      // Hours and optional minutes
      case 'X':
        return formatTimezoneWithOptionalMinutes(timezoneOffset);

      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XX`
      case 'XXXX':
      case 'XX':
        // Hours and minutes without `:` delimiter
        return formatTimezone(timezoneOffset);

      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XXX`
      case 'XXXXX':
      case 'XXX': // Hours and minutes with `:` delimiter
      default:
        return formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
  x: function x(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      // Hours and optional minutes
      case 'x':
        return formatTimezoneWithOptionalMinutes(timezoneOffset);

      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xx`
      case 'xxxx':
      case 'xx':
        // Hours and minutes without `:` delimiter
        return formatTimezone(timezoneOffset);

      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xxx`
      case 'xxxxx':
      case 'xxx': // Hours and minutes with `:` delimiter
      default:
        return formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (GMT)
  O: function O(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      // Short
      case 'O':
      case 'OO':
      case 'OOO':
        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
      // Long
      case 'OOOO':
      default:
        return 'GMT' + formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (specific non-location)
  z: function z(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      // Short
      case 'z':
      case 'zz':
      case 'zzz':
        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
      // Long
      case 'zzzz':
      default:
        return 'GMT' + formatTimezone(timezoneOffset, ':');
    }
  },
  // Seconds timestamp
  t: function t(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = Math.floor(originalDate.getTime() / 1000);
    return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(timestamp, token.length);
  },
  // Milliseconds timestamp
  T: function T(date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = originalDate.getTime();
    return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(timestamp, token.length);
  }
};
function formatTimezoneShort(offset, dirtyDelimiter) {
  var sign = offset > 0 ? '-' : '+';
  var absOffset = Math.abs(offset);
  var hours = Math.floor(absOffset / 60);
  var minutes = absOffset % 60;
  if (minutes === 0) {
    return sign + String(hours);
  }
  var delimiter = dirtyDelimiter || '';
  return sign + String(hours) + delimiter + (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(minutes, 2);
}
function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
  if (offset % 60 === 0) {
    var sign = offset > 0 ? '-' : '+';
    return sign + (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Math.abs(offset) / 60, 2);
  }
  return formatTimezone(offset, dirtyDelimiter);
}
function formatTimezone(offset, dirtyDelimiter) {
  var delimiter = dirtyDelimiter || '';
  var sign = offset > 0 ? '-' : '+';
  var absOffset = Math.abs(offset);
  var hours = (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Math.floor(absOffset / 60), 2);
  var minutes = (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(absOffset % 60, 2);
  return sign + hours + delimiter + minutes;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (formatters);

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../addLeadingZeros/index.js */ "./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js");

/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* |                                |
 * |  d  | Day of month                   |  D  |                                |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  m  | Minute                         |  M  | Month                          |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  y  | Year (abs)                     |  Y  |                                |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 */
var formatters = {
  // Year
  y: function y(date, token) {
    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens
    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
    // |----------|-------|----|-------|-------|-------|
    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |

    var signedYear = date.getUTCFullYear();
    // Returns 1 for 1 BC (which is year 0 in JavaScript)
    var year = signedYear > 0 ? signedYear : 1 - signedYear;
    return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(token === 'yy' ? year % 100 : year, token.length);
  },
  // Month
  M: function M(date, token) {
    var month = date.getUTCMonth();
    return token === 'M' ? String(month + 1) : (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(month + 1, 2);
  },
  // Day of the month
  d: function d(date, token) {
    return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date.getUTCDate(), token.length);
  },
  // AM or PM
  a: function a(date, token) {
    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';
    switch (token) {
      case 'a':
      case 'aa':
        return dayPeriodEnumValue.toUpperCase();
      case 'aaa':
        return dayPeriodEnumValue;
      case 'aaaaa':
        return dayPeriodEnumValue[0];
      case 'aaaa':
      default:
        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';
    }
  },
  // Hour [1-12]
  h: function h(date, token) {
    return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date.getUTCHours() % 12 || 12, token.length);
  },
  // Hour [0-23]
  H: function H(date, token) {
    return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date.getUTCHours(), token.length);
  },
  // Minute
  m: function m(date, token) {
    return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date.getUTCMinutes(), token.length);
  },
  // Second
  s: function s(date, token) {
    return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date.getUTCSeconds(), token.length);
  },
  // Fraction of second
  S: function S(date, token) {
    var numberOfDigits = token.length;
    var milliseconds = date.getUTCMilliseconds();
    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
    return (0,_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(fractionalSeconds, token.length);
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (formatters);

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/format/longFormatters/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/format/longFormatters/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var dateLongFormatter = function dateLongFormatter(pattern, formatLong) {
  switch (pattern) {
    case 'P':
      return formatLong.date({
        width: 'short'
      });
    case 'PP':
      return formatLong.date({
        width: 'medium'
      });
    case 'PPP':
      return formatLong.date({
        width: 'long'
      });
    case 'PPPP':
    default:
      return formatLong.date({
        width: 'full'
      });
  }
};
var timeLongFormatter = function timeLongFormatter(pattern, formatLong) {
  switch (pattern) {
    case 'p':
      return formatLong.time({
        width: 'short'
      });
    case 'pp':
      return formatLong.time({
        width: 'medium'
      });
    case 'ppp':
      return formatLong.time({
        width: 'long'
      });
    case 'pppp':
    default:
      return formatLong.time({
        width: 'full'
      });
  }
};
var dateTimeLongFormatter = function dateTimeLongFormatter(pattern, formatLong) {
  var matchResult = pattern.match(/(P+)(p+)?/) || [];
  var datePattern = matchResult[1];
  var timePattern = matchResult[2];
  if (!timePattern) {
    return dateLongFormatter(pattern, formatLong);
  }
  var dateTimeFormat;
  switch (datePattern) {
    case 'P':
      dateTimeFormat = formatLong.dateTime({
        width: 'short'
      });
      break;
    case 'PP':
      dateTimeFormat = formatLong.dateTime({
        width: 'medium'
      });
      break;
    case 'PPP':
      dateTimeFormat = formatLong.dateTime({
        width: 'long'
      });
      break;
    case 'PPPP':
    default:
      dateTimeFormat = formatLong.dateTime({
        width: 'full'
      });
      break;
  }
  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));
};
var longFormatters = {
  p: timeLongFormatter,
  P: dateTimeLongFormatter
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (longFormatters);

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getTimezoneOffsetInMilliseconds)
/* harmony export */ });
/**
 * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
 * They usually appear for dates that denote time before the timezones were introduced
 * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
 * and GMT+01:00:00 after that date)
 *
 * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
 * which would lead to incorrect calculations.
 *
 * This function returns the timezone offset in milliseconds that takes seconds in account.
 */
function getTimezoneOffsetInMilliseconds(date) {
  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
  utcDate.setUTCFullYear(date.getFullYear());
  return date.getTime() - utcDate.getTime();
}

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getUTCDayOfYear)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../toDate/index.js */ "./node_modules/date-fns/esm/toDate/index.js");
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");


var MILLISECONDS_IN_DAY = 86400000;
function getUTCDayOfYear(dirtyDate) {
  (0,_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var timestamp = date.getTime();
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
  var startOfYearTimestamp = date.getTime();
  var difference = timestamp - startOfYearTimestamp;
  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
}

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getUTCISOWeek)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../toDate/index.js */ "./node_modules/date-fns/esm/toDate/index.js");
/* harmony import */ var _startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../startOfUTCISOWeek/index.js */ "./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js");
/* harmony import */ var _startOfUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../startOfUTCISOWeekYear/index.js */ "./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js");
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");




var MILLISECONDS_IN_WEEK = 604800000;
function getUTCISOWeek(dirtyDate) {
  (0,_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var diff = (0,_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date).getTime() - (0,_startOfUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(date).getTime();

  // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)
  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getUTCISOWeekYear)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../toDate/index.js */ "./node_modules/date-fns/esm/toDate/index.js");
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
/* harmony import */ var _startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../startOfUTCISOWeek/index.js */ "./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js");



function getUTCISOWeekYear(dirtyDate) {
  (0,_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var year = date.getUTCFullYear();
  var fourthOfJanuaryOfNextYear = new Date(0);
  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = (0,_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = new Date(0);
  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = (0,_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(fourthOfJanuaryOfThisYear);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/getUTCWeek/index.js":
/*!************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/getUTCWeek/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getUTCWeek)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../toDate/index.js */ "./node_modules/date-fns/esm/toDate/index.js");
/* harmony import */ var _startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../startOfUTCWeek/index.js */ "./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js");
/* harmony import */ var _startOfUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../startOfUTCWeekYear/index.js */ "./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js");
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");




var MILLISECONDS_IN_WEEK = 604800000;
function getUTCWeek(dirtyDate, options) {
  (0,_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var diff = (0,_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date, options).getTime() - (0,_startOfUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(date, options).getTime();

  // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)
  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getUTCWeekYear)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../toDate/index.js */ "./node_modules/date-fns/esm/toDate/index.js");
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
/* harmony import */ var _startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../startOfUTCWeek/index.js */ "./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js");
/* harmony import */ var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../toInteger/index.js */ "./node_modules/date-fns/esm/_lib/toInteger/index.js");
/* harmony import */ var _defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../defaultOptions/index.js */ "./node_modules/date-fns/esm/_lib/defaultOptions/index.js");





function getUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  (0,_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var year = date.getUTCFullYear();
  var defaultOptions = (0,_defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_2__.getDefaultOptions)();
  var firstWeekContainsDate = (0,_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);

  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
  }
  var firstWeekOfNextYear = new Date(0);
  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = (0,_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(firstWeekOfNextYear, options);
  var firstWeekOfThisYear = new Date(0);
  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = (0,_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(firstWeekOfThisYear, options);
  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/protectedTokens/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/protectedTokens/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isProtectedDayOfYearToken: () => (/* binding */ isProtectedDayOfYearToken),
/* harmony export */   isProtectedWeekYearToken: () => (/* binding */ isProtectedWeekYearToken),
/* harmony export */   throwProtectedError: () => (/* binding */ throwProtectedError)
/* harmony export */ });
var protectedDayOfYearTokens = ['D', 'DD'];
var protectedWeekYearTokens = ['YY', 'YYYY'];
function isProtectedDayOfYearToken(token) {
  return protectedDayOfYearTokens.indexOf(token) !== -1;
}
function isProtectedWeekYearToken(token) {
  return protectedWeekYearTokens.indexOf(token) !== -1;
}
function throwProtectedError(token, format, input) {
  if (token === 'YYYY') {
    throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === 'YY') {
    throw new RangeError("Use `yy` instead of `YY` (in `".concat(format, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === 'D') {
    throw new RangeError("Use `d` instead of `D` (in `".concat(format, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  } else if (token === 'DD') {
    throw new RangeError("Use `dd` instead of `DD` (in `".concat(format, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  }
}

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/requiredArgs/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ requiredArgs)
/* harmony export */ });
function requiredArgs(required, args) {
  if (args.length < required) {
    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');
  }
}

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ startOfUTCISOWeek)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../toDate/index.js */ "./node_modules/date-fns/esm/toDate/index.js");
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");


function startOfUTCISOWeek(dirtyDate) {
  (0,_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
  var weekStartsOn = 1;
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ startOfUTCISOWeekYear)
/* harmony export */ });
/* harmony import */ var _getUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../getUTCISOWeekYear/index.js */ "./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js");
/* harmony import */ var _startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../startOfUTCISOWeek/index.js */ "./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js");
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");



function startOfUTCISOWeekYear(dirtyDate) {
  (0,_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
  var year = (0,_getUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var fourthOfJanuary = new Date(0);
  fourthOfJanuary.setUTCFullYear(year, 0, 4);
  fourthOfJanuary.setUTCHours(0, 0, 0, 0);
  var date = (0,_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(fourthOfJanuary);
  return date;
}

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ startOfUTCWeek)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../toDate/index.js */ "./node_modules/date-fns/esm/toDate/index.js");
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
/* harmony import */ var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../toInteger/index.js */ "./node_modules/date-fns/esm/_lib/toInteger/index.js");
/* harmony import */ var _defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../defaultOptions/index.js */ "./node_modules/date-fns/esm/_lib/defaultOptions/index.js");




function startOfUTCWeek(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  (0,_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
  var defaultOptions = (0,_defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_1__.getDefaultOptions)();
  var weekStartsOn = (0,_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);

  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ startOfUTCWeekYear)
/* harmony export */ });
/* harmony import */ var _getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../getUTCWeekYear/index.js */ "./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js");
/* harmony import */ var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
/* harmony import */ var _startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../startOfUTCWeek/index.js */ "./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js");
/* harmony import */ var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../toInteger/index.js */ "./node_modules/date-fns/esm/_lib/toInteger/index.js");
/* harmony import */ var _defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../defaultOptions/index.js */ "./node_modules/date-fns/esm/_lib/defaultOptions/index.js");





function startOfUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  (0,_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
  var defaultOptions = (0,_defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_1__.getDefaultOptions)();
  var firstWeekContainsDate = (0,_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  var year = (0,_getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(dirtyDate, options);
  var firstWeek = new Date(0);
  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setUTCHours(0, 0, 0, 0);
  var date = (0,_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(firstWeek, options);
  return date;
}

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/toInteger/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/toInteger/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ toInteger)
/* harmony export */ });
function toInteger(dirtyNumber) {
  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
    return NaN;
  }
  var number = Number(dirtyNumber);
  if (isNaN(number)) {
    return number;
  }
  return number < 0 ? Math.ceil(number) : Math.floor(number);
}

/***/ }),

/***/ "./node_modules/date-fns/esm/addDays/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/esm/addDays/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ addDays)
/* harmony export */ });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ "./node_modules/date-fns/esm/_lib/toInteger/index.js");
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ "./node_modules/date-fns/esm/toDate/index.js");
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");



/**
 * @name addDays
 * @category Day Helpers
 * @summary Add the specified number of days to the given date.
 *
 * @description
 * Add the specified number of days to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} - the new date with the days added
 * @throws {TypeError} - 2 arguments required
 *
 * @example
 * // Add 10 days to 1 September 2014:
 * const result = addDays(new Date(2014, 8, 1), 10)
 * //=> Thu Sep 11 2014 00:00:00
 */
function addDays(dirtyDate, dirtyAmount) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(2, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var amount = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyAmount);
  if (isNaN(amount)) {
    return new Date(NaN);
  }
  if (!amount) {
    // If 0 days, no-op to avoid changing times in the hour before end of DST
    return date;
  }
  date.setDate(date.getDate() + amount);
  return date;
}

/***/ }),

/***/ "./node_modules/date-fns/esm/addMilliseconds/index.js":
/*!************************************************************!*\
  !*** ./node_modules/date-fns/esm/addMilliseconds/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ addMilliseconds)
/* harmony export */ });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ "./node_modules/date-fns/esm/_lib/toInteger/index.js");
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ "./node_modules/date-fns/esm/toDate/index.js");
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");



/**
 * @name addMilliseconds
 * @category Millisecond Helpers
 * @summary Add the specified number of milliseconds to the given date.
 *
 * @description
 * Add the specified number of milliseconds to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the milliseconds added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 750 milliseconds to 10 July 2014 12:45:30.000:
 * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:30.750
 */
function addMilliseconds(dirtyDate, dirtyAmount) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(2, arguments);
  var timestamp = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate).getTime();
  var amount = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyAmount);
  return new Date(timestamp + amount);
}

/***/ }),

/***/ "./node_modules/date-fns/esm/addWeeks/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/esm/addWeeks/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ addWeeks)
/* harmony export */ });
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ "./node_modules/date-fns/esm/_lib/toInteger/index.js");
/* harmony import */ var _addDays_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../addDays/index.js */ "./node_modules/date-fns/esm/addDays/index.js");
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");



/**
 * @name addWeeks
 * @category Week Helpers
 * @summary Add the specified number of weeks to the given date.
 *
 * @description
 * Add the specified number of week to the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the weeks added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 4 weeks to 1 September 2014:
 * const result = addWeeks(new Date(2014, 8, 1), 4)
 * //=> Mon Sep 29 2014 00:00:00
 */
function addWeeks(dirtyDate, dirtyAmount) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(2, arguments);
  var amount = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyAmount);
  var days = amount * 7;
  return (0,_addDays_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate, days);
}

/***/ }),

/***/ "./node_modules/date-fns/esm/format/index.js":
/*!***************************************************!*\
  !*** ./node_modules/date-fns/esm/format/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ format)
/* harmony export */ });
/* harmony import */ var _isValid_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../isValid/index.js */ "./node_modules/date-fns/esm/isValid/index.js");
/* harmony import */ var _subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../subMilliseconds/index.js */ "./node_modules/date-fns/esm/subMilliseconds/index.js");
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../toDate/index.js */ "./node_modules/date-fns/esm/toDate/index.js");
/* harmony import */ var _lib_format_formatters_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../_lib/format/formatters/index.js */ "./node_modules/date-fns/esm/_lib/format/formatters/index.js");
/* harmony import */ var _lib_format_longFormatters_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../_lib/format/longFormatters/index.js */ "./node_modules/date-fns/esm/_lib/format/longFormatters/index.js");
/* harmony import */ var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */ "./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js");
/* harmony import */ var _lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../_lib/protectedTokens/index.js */ "./node_modules/date-fns/esm/_lib/protectedTokens/index.js");
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ "./node_modules/date-fns/esm/_lib/toInteger/index.js");
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
/* harmony import */ var _lib_defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/defaultOptions/index.js */ "./node_modules/date-fns/esm/_lib/defaultOptions/index.js");
/* harmony import */ var _lib_defaultLocale_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_lib/defaultLocale/index.js */ "./node_modules/date-fns/esm/_lib/defaultLocale/index.js");










 // This RegExp consists of three parts separated by `|`:
// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
//   (one of the certain letters followed by `o`)
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps
var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;

// This RegExp catches symbols escaped by quotes, and also
// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`
var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;

/**
 * @name format
 * @category Common Helpers
 * @summary Format the date.
 *
 * @description
 * Return the formatted date string in the given format. The result may vary by locale.
 *
 * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
 * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * The characters wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 * (see the last example)
 *
 * Format of the string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * with a few additions (see note 7 below the table).
 *
 * Accepted patterns:
 * | Unit                            | Pattern | Result examples                   | Notes |
 * |---------------------------------|---------|-----------------------------------|-------|
 * | Era                             | G..GGG  | AD, BC                            |       |
 * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |
 * |                                 | GGGGG   | A, B                              |       |
 * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |
 * |                                 | yy      | 44, 01, 00, 17                    | 5     |
 * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |
 * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |
 * |                                 | yyyyy   | ...                               | 3,5   |
 * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |
 * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |
 * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |
 * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |
 * |                                 | YYYYY   | ...                               | 3,5   |
 * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |
 * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |
 * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |
 * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |
 * |                                 | RRRRR   | ...                               | 3,5,7 |
 * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |
 * |                                 | uu      | -43, 01, 1900, 2017               | 5     |
 * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |
 * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |
 * |                                 | uuuuu   | ...                               | 3,5   |
 * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |
 * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | QQ      | 01, 02, 03, 04                    |       |
 * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |
 * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |
 * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | qq      | 01, 02, 03, 04                    |       |
 * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |
 * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |
 * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | MM      | 01, 02, ..., 12                   |       |
 * |                                 | MMM     | Jan, Feb, ..., Dec                |       |
 * |                                 | MMMM    | January, February, ..., December  | 2     |
 * |                                 | MMMMM   | J, F, ..., D                      |       |
 * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |
 * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | LL      | 01, 02, ..., 12                   |       |
 * |                                 | LLL     | Jan, Feb, ..., Dec                |       |
 * |                                 | LLLL    | January, February, ..., December  | 2     |
 * |                                 | LLLLL   | J, F, ..., D                      |       |
 * | Local week of year              | w       | 1, 2, ..., 53                     |       |
 * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | ww      | 01, 02, ..., 53                   |       |
 * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |
 * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | II      | 01, 02, ..., 53                   | 7     |
 * | Day of month                    | d       | 1, 2, ..., 31                     |       |
 * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |
 * |                                 | dd      | 01, 02, ..., 31                   |       |
 * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |
 * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |
 * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |
 * |                                 | DDD     | 001, 002, ..., 365, 366           |       |
 * |                                 | DDDD    | ...                               | 3     |
 * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |
 * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |
 * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |
 * |                                 | ii      | 01, 02, ..., 07                   | 7     |
 * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |
 * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |
 * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |
 * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |
 * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |
 * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | ee      | 02, 03, ..., 01                   |       |
 * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | eeeee   | M, T, W, T, F, S, S               |       |
 * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |
 * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | cc      | 02, 03, ..., 01                   |       |
 * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |
 * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | ccccc   | M, T, W, T, F, S, S               |       |
 * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
 * | AM, PM                          | a..aa   | AM, PM                            |       |
 * |                                 | aaa     | am, pm                            |       |
 * |                                 | aaaa    | a.m., p.m.                        | 2     |
 * |                                 | aaaaa   | a, p                              |       |
 * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |
 * |                                 | bbb     | am, pm, noon, midnight            |       |
 * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |
 * |                                 | bbbbb   | a, p, n, mi                       |       |
 * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |
 * |                                 | BBBB    | at night, in the morning, ...     | 2     |
 * |                                 | BBBBB   | at night, in the morning, ...     |       |
 * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |
 * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |
 * |                                 | hh      | 01, 02, ..., 11, 12               |       |
 * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |
 * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |
 * |                                 | HH      | 00, 01, 02, ..., 23               |       |
 * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |
 * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |
 * |                                 | KK      | 01, 02, ..., 11, 00               |       |
 * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |
 * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |
 * |                                 | kk      | 24, 01, 02, ..., 23               |       |
 * | Minute                          | m       | 0, 1, ..., 59                     |       |
 * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | mm      | 00, 01, ..., 59                   |       |
 * | Second                          | s       | 0, 1, ..., 59                     |       |
 * |                                 | so      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | ss      | 00, 01, ..., 59                   |       |
 * | Fraction of second              | S       | 0, 1, ..., 9                      |       |
 * |                                 | SS      | 00, 01, ..., 99                   |       |
 * |                                 | SSS     | 000, 001, ..., 999                |       |
 * |                                 | SSSS    | ...                               | 3     |
 * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |
 * |                                 | XX      | -0800, +0530, Z                   |       |
 * |                                 | XXX     | -08:00, +05:30, Z                 |       |
 * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |
 * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
 * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |
 * |                                 | xx      | -0800, +0530, +0000               |       |
 * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |
 * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |
 * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
 * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |
 * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |
 * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |
 * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |
 * | Seconds timestamp               | t       | 512969520                         | 7     |
 * |                                 | tt      | ...                               | 3,7   |
 * | Milliseconds timestamp          | T       | 512969520900                      | 7     |
 * |                                 | TT      | ...                               | 3,7   |
 * | Long localized date             | P       | 04/29/1453                        | 7     |
 * |                                 | PP      | Apr 29, 1453                      | 7     |
 * |                                 | PPP     | April 29th, 1453                  | 7     |
 * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |
 * | Long localized time             | p       | 12:00 AM                          | 7     |
 * |                                 | pp      | 12:00:00 AM                       | 7     |
 * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |
 * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |
 * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |
 * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |
 * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |
 * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |
 * Notes:
 * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
 *    are the same as "stand-alone" units, but are different in some languages.
 *    "Formatting" units are declined according to the rules of the language
 *    in the context of a date. "Stand-alone" units are always nominative singular:
 *
 *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
 *
 *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
 *
 * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
 *    the single quote characters (see below).
 *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)
 *    the output will be the same as default pattern for this unit, usually
 *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units
 *    are marked with "2" in the last column of the table.
 *
 *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`
 *
 * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).
 *    The output will be padded with zeros to match the length of the pattern.
 *
 *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`
 *
 * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
 *    These tokens represent the shortest form of the quarter.
 *
 * 5. The main difference between `y` and `u` patterns are B.C. years:
 *
 *    | Year | `y` | `u` |
 *    |------|-----|-----|
 *    | AC 1 |   1 |   1 |
 *    | BC 1 |   1 |   0 |
 *    | BC 2 |   2 |  -1 |
 *
 *    Also `yy` always returns the last two digits of a year,
 *    while `uu` pads single digit years to 2 characters and returns other years unchanged:
 *
 *    | Year | `yy` | `uu` |
 *    |------|------|------|
 *    | 1    |   01 |   01 |
 *    | 14   |   14 |   14 |
 *    | 376  |   76 |  376 |
 *    | 1453 |   53 | 1453 |
 *
 *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
 *    except local week-numbering years are dependent on `options.weekStartsOn`
 *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}
 *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).
 *
 * 6. Specific non-location timezones are currently unavailable in `date-fns`,
 *    so right now these tokens fall back to GMT timezones.
 *
 * 7. These patterns are not in the Unicode Technical Standard #35:
 *    - `i`: ISO day of week
 *    - `I`: ISO week of year
 *    - `R`: ISO week-numbering year
 *    - `t`: seconds timestamp
 *    - `T`: milliseconds timestamp
 *    - `o`: ordinal number modifier
 *    - `P`: long localized date
 *    - `p`: long localized time
 *
 * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
 *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.
 *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 *
 * @param {Date|Number} date - the original date
 * @param {String} format - the string of tokens
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is
 * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
 *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
 *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @returns {String} the formatted date string
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `date` must not be Invalid Date
 * @throws {RangeError} `options.locale` must contain `localize` property
 * @throws {RangeError} `options.locale` must contain `formatLong` property
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md
 * @throws {RangeError} format string contains an unescaped latin alphabet character
 *
 * @example
 * // Represent 11 February 2014 in middle-endian format:
 * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')
 * //=> '02/11/2014'
 *
 * @example
 * // Represent 2 July 2014 in Esperanto:
 * import { eoLocale } from 'date-fns/locale/eo'
 * const result = format(new Date(2014, 6, 2), "do 'de' MMMM yyyy", {
 *   locale: eoLocale
 * })
 * //=> '2-a de julio 2014'
 *
 * @example
 * // Escape string by single quote characters:
 * const result = format(new Date(2014, 6, 2, 15), "h 'o''clock'")
 * //=> "3 o'clock"
 */

function format(dirtyDate, dirtyFormatStr, options) {
  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(2, arguments);
  var formatStr = String(dirtyFormatStr);
  var defaultOptions = (0,_lib_defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_1__.getDefaultOptions)();
  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : _lib_defaultLocale_index_js__WEBPACK_IMPORTED_MODULE_2__["default"];
  var firstWeekContainsDate = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);

  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
  }
  var weekStartsOn = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);

  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }
  if (!locale.localize) {
    throw new RangeError('locale must contain localize property');
  }
  if (!locale.formatLong) {
    throw new RangeError('locale must contain formatLong property');
  }
  var originalDate = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dirtyDate);
  if (!(0,_isValid_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(originalDate)) {
    throw new RangeError('Invalid time value');
  }

  // Convert the date in system timezone to the same date in UTC+00:00 timezone.
  // This ensures that when UTC functions will be implemented, locales will be compatible with them.
  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376
  var timezoneOffset = (0,_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(originalDate);
  var utcDate = (0,_subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(originalDate, timezoneOffset);
  var formatterOptions = {
    firstWeekContainsDate: firstWeekContainsDate,
    weekStartsOn: weekStartsOn,
    locale: locale,
    _originalDate: originalDate
  };
  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {
    var firstCharacter = substring[0];
    if (firstCharacter === 'p' || firstCharacter === 'P') {
      var longFormatter = _lib_format_longFormatters_index_js__WEBPACK_IMPORTED_MODULE_8__["default"][firstCharacter];
      return longFormatter(substring, locale.formatLong);
    }
    return substring;
  }).join('').match(formattingTokensRegExp).map(function (substring) {
    // Replace two single quote characters with one single quote character
    if (substring === "''") {
      return "'";
    }
    var firstCharacter = substring[0];
    if (firstCharacter === "'") {
      return cleanEscapedString(substring);
    }
    var formatter = _lib_format_formatters_index_js__WEBPACK_IMPORTED_MODULE_9__["default"][firstCharacter];
    if (formatter) {
      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && (0,_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_10__.isProtectedWeekYearToken)(substring)) {
        (0,_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_10__.throwProtectedError)(substring, dirtyFormatStr, String(dirtyDate));
      }
      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && (0,_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_10__.isProtectedDayOfYearToken)(substring)) {
        (0,_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_10__.throwProtectedError)(substring, dirtyFormatStr, String(dirtyDate));
      }
      return formatter(utcDate, substring, locale.localize, formatterOptions);
    }
    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
    }
    return substring;
  }).join('');
  return result;
}
function cleanEscapedString(input) {
  var matched = input.match(escapedStringRegExp);
  if (!matched) {
    return input;
  }
  return matched[1].replace(doubleQuoteRegExp, "'");
}

/***/ }),

/***/ "./node_modules/date-fns/esm/formatISO/index.js":
/*!******************************************************!*\
  !*** ./node_modules/date-fns/esm/formatISO/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ formatISO)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ "./node_modules/date-fns/esm/toDate/index.js");
/* harmony import */ var _lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_lib/addLeadingZeros/index.js */ "./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js");
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");



/**
 * @name formatISO
 * @category Common Helpers
 * @summary Format the date according to the ISO 8601 standard (https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).
 *
 * @description
 * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.
 *
 * @param {Date|Number} date - the original date
 * @param {Object} [options] - an object with options.
 * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.
 * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time with local time zone, or both.
 * @returns {String} the formatted date string (in local time zone)
 * @throws {TypeError} 1 argument required
 * @throws {RangeError} `date` must not be Invalid Date
 * @throws {RangeError} `options.format` must be 'extended' or 'basic'
 * @throws {RangeError} `options.representation` must be 'date', 'time' or 'complete'
 *
 * @example
 * // Represent 18 September 2019 in ISO 8601 format (local time zone is UTC):
 * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))
 * //=> '2019-09-18T19:00:52Z'
 *
 * @example
 * // Represent 18 September 2019 in ISO 8601, short format (local time zone is UTC):
 * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })
 * //=> '20190918T190052'
 *
 * @example
 * // Represent 18 September 2019 in ISO 8601 format, date only:
 * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })
 * //=> '2019-09-18'
 *
 * @example
 * // Represent 18 September 2019 in ISO 8601 format, time only (local time zone is UTC):
 * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })
 * //=> '19:00:52Z'
 */
function formatISO(date, options) {
  var _options$format, _options$representati;
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
  var originalDate = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date);
  if (isNaN(originalDate.getTime())) {
    throw new RangeError('Invalid time value');
  }
  var format = String((_options$format = options === null || options === void 0 ? void 0 : options.format) !== null && _options$format !== void 0 ? _options$format : 'extended');
  var representation = String((_options$representati = options === null || options === void 0 ? void 0 : options.representation) !== null && _options$representati !== void 0 ? _options$representati : 'complete');
  if (format !== 'extended' && format !== 'basic') {
    throw new RangeError("format must be 'extended' or 'basic'");
  }
  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {
    throw new RangeError("representation must be 'date', 'time', or 'complete'");
  }
  var result = '';
  var tzOffset = '';
  var dateDelimiter = format === 'extended' ? '-' : '';
  var timeDelimiter = format === 'extended' ? ':' : '';

  // Representation is either 'date' or 'complete'
  if (representation !== 'time') {
    var day = (0,_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getDate(), 2);
    var month = (0,_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getMonth() + 1, 2);
    var year = (0,_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getFullYear(), 4);

    // yyyyMMdd or yyyy-MM-dd.
    result = "".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);
  }

  // Representation is either 'time' or 'complete'
  if (representation !== 'date') {
    // Add the timezone.
    var offset = originalDate.getTimezoneOffset();
    if (offset !== 0) {
      var absoluteOffset = Math.abs(offset);
      var hourOffset = (0,_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Math.floor(absoluteOffset / 60), 2);
      var minuteOffset = (0,_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(absoluteOffset % 60, 2);
      // If less than 0, the sign is +, because it is ahead of time.
      var sign = offset < 0 ? '+' : '-';
      tzOffset = "".concat(sign).concat(hourOffset, ":").concat(minuteOffset);
    } else {
      tzOffset = 'Z';
    }
    var hour = (0,_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getHours(), 2);
    var minute = (0,_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getMinutes(), 2);
    var second = (0,_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getSeconds(), 2);

    // If there's also date, separate it with time with 'T'
    var separator = result === '' ? '' : 'T';

    // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.
    var time = [hour, minute, second].join(timeDelimiter);

    // HHmmss or HH:mm:ss.
    result = "".concat(result).concat(separator).concat(time).concat(tzOffset);
  }
  return result;
}

/***/ }),

/***/ "./node_modules/date-fns/esm/isAfter/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/esm/isAfter/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isAfter)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ "./node_modules/date-fns/esm/toDate/index.js");
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");


/**
 * @name isAfter
 * @category Common Helpers
 * @summary Is the first date after the second one?
 *
 * @description
 * Is the first date after the second one?
 *
 * @param {Date|Number} date - the date that should be after the other one to return true
 * @param {Date|Number} dateToCompare - the date to compare with
 * @returns {Boolean} the first date is after the second date
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Is 10 July 1989 after 11 February 1987?
 * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))
 * //=> true
 */
function isAfter(dirtyDate, dirtyDateToCompare) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(2, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  var dateToCompare = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateToCompare);
  return date.getTime() > dateToCompare.getTime();
}

/***/ }),

/***/ "./node_modules/date-fns/esm/isDate/index.js":
/*!***************************************************!*\
  !*** ./node_modules/date-fns/esm/isDate/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isDate)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/typeof */ "./node_modules/@babel/runtime/helpers/esm/typeof.js");
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");


/**
 * @name isDate
 * @category Common Helpers
 * @summary Is the given value a date?
 *
 * @description
 * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.
 *
 * @param {*} value - the value to check
 * @returns {boolean} true if the given value is a date
 * @throws {TypeError} 1 arguments required
 *
 * @example
 * // For a valid date:
 * const result = isDate(new Date())
 * //=> true
 *
 * @example
 * // For an invalid date:
 * const result = isDate(new Date(NaN))
 * //=> true
 *
 * @example
 * // For some value:
 * const result = isDate('2014-02-31')
 * //=> false
 *
 * @example
 * // For an object:
 * const result = isDate({})
 * //=> false
 */
function isDate(value) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  return value instanceof Date || (0,_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__["default"])(value) === 'object' && Object.prototype.toString.call(value) === '[object Date]';
}

/***/ }),

/***/ "./node_modules/date-fns/esm/isSameDay/index.js":
/*!******************************************************!*\
  !*** ./node_modules/date-fns/esm/isSameDay/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isSameDay)
/* harmony export */ });
/* harmony import */ var _startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../startOfDay/index.js */ "./node_modules/date-fns/esm/startOfDay/index.js");
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");


/**
 * @name isSameDay
 * @category Day Helpers
 * @summary Are the given dates in the same day (and year and month)?
 *
 * @description
 * Are the given dates in the same day (and year and month)?
 *
 * @param {Date|Number} dateLeft - the first date to check
 * @param {Date|Number} dateRight - the second date to check
 * @returns {Boolean} the dates are in the same day (and year and month)
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?
 * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))
 * //=> true
 *
 * @example
 * // Are 4 September and 4 October in the same day?
 * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))
 * //=> false
 *
 * @example
 * // Are 4 September, 2014 and 4 September, 2015 in the same day?
 * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))
 * //=> false
 */
function isSameDay(dirtyDateLeft, dirtyDateRight) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(2, arguments);
  var dateLeftStartOfDay = (0,_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateLeft);
  var dateRightStartOfDay = (0,_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateRight);
  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
}

/***/ }),

/***/ "./node_modules/date-fns/esm/isToday/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/esm/isToday/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isToday)
/* harmony export */ });
/* harmony import */ var _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../isSameDay/index.js */ "./node_modules/date-fns/esm/isSameDay/index.js");
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");


/**
 * @name isToday
 * @category Day Helpers
 * @summary Is the given date today?
 * @pure false
 *
 * @description
 * Is the given date today?
 *
 * > ⚠️ Please note that this function is not present in the FP submodule as
 * > it uses `Date.now()` internally hence impure and can't be safely curried.
 *
 * @param {Date|Number} date - the date to check
 * @returns {Boolean} the date is today
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // If today is 6 October 2014, is 6 October 14:00:00 today?
 * const result = isToday(new Date(2014, 9, 6, 14, 0))
 * //=> true
 */
function isToday(dirtyDate) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
  return (0,_isSameDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, Date.now());
}

/***/ }),

/***/ "./node_modules/date-fns/esm/isValid/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/esm/isValid/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isValid)
/* harmony export */ });
/* harmony import */ var _isDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../isDate/index.js */ "./node_modules/date-fns/esm/isDate/index.js");
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../toDate/index.js */ "./node_modules/date-fns/esm/toDate/index.js");
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");



/**
 * @name isValid
 * @category Common Helpers
 * @summary Is the given date valid?
 *
 * @description
 * Returns false if argument is Invalid Date and true otherwise.
 * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
 * Invalid Date is a Date, whose time value is NaN.
 *
 * Time value of Date: http://es5.github.io/#x15.9.1.1
 *
 * @param {*} date - the date to check
 * @returns {Boolean} the date is valid
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // For the valid date:
 * const result = isValid(new Date(2014, 1, 31))
 * //=> true
 *
 * @example
 * // For the value, convertable into a date:
 * const result = isValid(1393804800000)
 * //=> true
 *
 * @example
 * // For the invalid date:
 * const result = isValid(new Date(''))
 * //=> false
 */
function isValid(dirtyDate) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
  if (!(0,_isDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate) && typeof dirtyDate !== 'number') {
    return false;
  }
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
  return !isNaN(Number(date));
}

/***/ }),

/***/ "./node_modules/date-fns/esm/isWithinInterval/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/date-fns/esm/isWithinInterval/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isWithinInterval)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ "./node_modules/date-fns/esm/toDate/index.js");
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");


/**
 * @name isWithinInterval
 * @category Interval Helpers
 * @summary Is the given date within the interval?
 *
 * @description
 * Is the given date within the interval? (Including start and end.)
 *
 * @param {Date|Number} date - the date to check
 * @param {Interval} interval - the interval to check
 * @returns {Boolean} the date is within the interval
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} The start of an interval cannot be after its end
 * @throws {RangeError} Date in interval cannot be `Invalid Date`
 *
 * @example
 * // For the date within the interval:
 * isWithinInterval(new Date(2014, 0, 3), {
 *   start: new Date(2014, 0, 1),
 *   end: new Date(2014, 0, 7)
 * })
 * //=> true
 *
 * @example
 * // For the date outside of the interval:
 * isWithinInterval(new Date(2014, 0, 10), {
 *   start: new Date(2014, 0, 1),
 *   end: new Date(2014, 0, 7)
 * })
 * //=> false
 *
 * @example
 * // For date equal to interval start:
 * isWithinInterval(date, { start, end: date }) // => true
 *
 * @example
 * // For date equal to interval end:
 * isWithinInterval(date, { start: date, end }) // => true
 */
function isWithinInterval(dirtyDate, interval) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(2, arguments);
  var time = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate).getTime();
  var startTime = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(interval.start).getTime();
  var endTime = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(interval.end).getTime();

  // Throw an exception if start date is after end date or if any date is `Invalid Date`
  if (!(startTime <= endTime)) {
    throw new RangeError('Invalid interval');
  }
  return time >= startTime && time <= endTime;
}

/***/ }),

/***/ "./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ buildFormatLongFn)
/* harmony export */ });
function buildFormatLongFn(args) {
  return function () {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    // TODO: Remove String()
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format = args.formats[width] || args.formats[args.defaultWidth];
    return format;
  };
}

/***/ }),

/***/ "./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ buildLocalizeFn)
/* harmony export */ });
function buildLocalizeFn(args) {
  return function (dirtyIndex, options) {
    var context = options !== null && options !== void 0 && options.context ? String(options.context) : 'standalone';
    var valuesArray;
    if (context === 'formatting' && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
    // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!
    return valuesArray[index];
  };
}

/***/ }),

/***/ "./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ buildMatchFn)
/* harmony export */ });
function buildMatchFn(args) {
  return function (string) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {
      return pattern.test(matchedString);
    }) : findKey(parsePatterns, function (pattern) {
      return pattern.test(matchedString);
    });
    var value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value: value,
      rest: rest
    };
  };
}
function findKey(object, predicate) {
  for (var key in object) {
    if (object.hasOwnProperty(key) && predicate(object[key])) {
      return key;
    }
  }
  return undefined;
}
function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return undefined;
}

/***/ }),

/***/ "./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ buildMatchPatternFn)
/* harmony export */ });
function buildMatchPatternFn(args) {
  return function (string) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult) return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult) return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value: value,
      rest: rest
    };
  };
}

/***/ }),

/***/ "./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: 'less than a second',
    other: 'less than {{count}} seconds'
  },
  xSeconds: {
    one: '1 second',
    other: '{{count}} seconds'
  },
  halfAMinute: 'half a minute',
  lessThanXMinutes: {
    one: 'less than a minute',
    other: 'less than {{count}} minutes'
  },
  xMinutes: {
    one: '1 minute',
    other: '{{count}} minutes'
  },
  aboutXHours: {
    one: 'about 1 hour',
    other: 'about {{count}} hours'
  },
  xHours: {
    one: '1 hour',
    other: '{{count}} hours'
  },
  xDays: {
    one: '1 day',
    other: '{{count}} days'
  },
  aboutXWeeks: {
    one: 'about 1 week',
    other: 'about {{count}} weeks'
  },
  xWeeks: {
    one: '1 week',
    other: '{{count}} weeks'
  },
  aboutXMonths: {
    one: 'about 1 month',
    other: 'about {{count}} months'
  },
  xMonths: {
    one: '1 month',
    other: '{{count}} months'
  },
  aboutXYears: {
    one: 'about 1 year',
    other: 'about {{count}} years'
  },
  xYears: {
    one: '1 year',
    other: '{{count}} years'
  },
  overXYears: {
    one: 'over 1 year',
    other: 'over {{count}} years'
  },
  almostXYears: {
    one: 'almost 1 year',
    other: 'almost {{count}} years'
  }
};
var formatDistance = function formatDistance(token, count, options) {
  var result;
  var tokenValue = formatDistanceLocale[token];
  if (typeof tokenValue === 'string') {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace('{{count}}', count.toString());
  }
  if (options !== null && options !== void 0 && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return 'in ' + result;
    } else {
      return result + ' ago';
    }
  }
  return result;
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (formatDistance);

/***/ }),

/***/ "./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _lib_buildFormatLongFn_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../_lib/buildFormatLongFn/index.js */ "./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js");

var dateFormats = {
  full: 'EEEE, MMMM do, y',
  long: 'MMMM do, y',
  medium: 'MMM d, y',
  short: 'MM/dd/yyyy'
};
var timeFormats = {
  full: 'h:mm:ss a zzzz',
  long: 'h:mm:ss a z',
  medium: 'h:mm:ss a',
  short: 'h:mm a'
};
var dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: '{{date}}, {{time}}',
  short: '{{date}}, {{time}}'
};
var formatLong = {
  date: (0,_lib_buildFormatLongFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    formats: dateFormats,
    defaultWidth: 'full'
  }),
  time: (0,_lib_buildFormatLongFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    formats: timeFormats,
    defaultWidth: 'full'
  }),
  dateTime: (0,_lib_buildFormatLongFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    formats: dateTimeFormats,
    defaultWidth: 'full'
  })
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (formatLong);

/***/ }),

/***/ "./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: 'P'
};
var formatRelative = function formatRelative(token, _date, _baseDate, _options) {
  return formatRelativeLocale[token];
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (formatRelative);

/***/ }),

/***/ "./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../_lib/buildLocalizeFn/index.js */ "./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js");

var eraValues = {
  narrow: ['B', 'A'],
  abbreviated: ['BC', 'AD'],
  wide: ['Before Christ', 'Anno Domini']
};
var quarterValues = {
  narrow: ['1', '2', '3', '4'],
  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],
  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']
};

// Note: in English, the names of days of the week and months are capitalized.
// If you are making a new locale based on this one, check if the same is true for the language you're working on.
// Generally, formatted dates should look like they are in the middle of a sentence,
// e.g. in Spanish language the weekdays and months should be in the lowercase.
var monthValues = {
  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
};
var dayValues = {
  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
};
var dayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  }
};
var ordinalNumber = function ordinalNumber(dirtyNumber, _options) {
  var number = Number(dirtyNumber);

  // If ordinal numbers depend on context, for example,
  // if they are different for different grammatical genders,
  // use `options.unit`.
  //
  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
  // 'day', 'hour', 'minute', 'second'.

  var rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + 'st';
      case 2:
        return number + 'nd';
      case 3:
        return number + 'rd';
    }
  }
  return number + 'th';
};
var localize = {
  ordinalNumber: ordinalNumber,
  era: (0,_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    values: eraValues,
    defaultWidth: 'wide'
  }),
  quarter: (0,_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    values: quarterValues,
    defaultWidth: 'wide',
    argumentCallback: function argumentCallback(quarter) {
      return quarter - 1;
    }
  }),
  month: (0,_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    values: monthValues,
    defaultWidth: 'wide'
  }),
  day: (0,_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    values: dayValues,
    defaultWidth: 'wide'
  }),
  dayPeriod: (0,_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    values: dayPeriodValues,
    defaultWidth: 'wide',
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: 'wide'
  })
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (localize);

/***/ }),

/***/ "./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../_lib/buildMatchFn/index.js */ "./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js");
/* harmony import */ var _lib_buildMatchPatternFn_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../_lib/buildMatchPatternFn/index.js */ "./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js");


var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns = {
  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
};
var matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
};
var match = {
  ordinalNumber: (0,_lib_buildMatchPatternFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function valueCallback(value) {
      return parseInt(value, 10);
    }
  }),
  era: (0,_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseEraPatterns,
    defaultParseWidth: 'any'
  }),
  quarter: (0,_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: 'any',
    valueCallback: function valueCallback(index) {
      return index + 1;
    }
  }),
  month: (0,_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: 'any'
  }),
  day: (0,_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseDayPatterns,
    defaultParseWidth: 'any'
  }),
  dayPeriod: (0,_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: 'any',
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: 'any'
  })
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (match);

/***/ }),

/***/ "./node_modules/date-fns/esm/locale/en-US/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/date-fns/esm/locale/en-US/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _lib_formatDistance_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_lib/formatDistance/index.js */ "./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js");
/* harmony import */ var _lib_formatLong_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_lib/formatLong/index.js */ "./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js");
/* harmony import */ var _lib_formatRelative_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_lib/formatRelative/index.js */ "./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js");
/* harmony import */ var _lib_localize_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_lib/localize/index.js */ "./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js");
/* harmony import */ var _lib_match_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./_lib/match/index.js */ "./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js");





/**
 * @type {Locale}
 * @category Locales
 * @summary English locale (United States).
 * @language English
 * @iso-639-2 eng
 * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
 * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
 */
var locale = {
  code: 'en-US',
  formatDistance: _lib_formatDistance_index_js__WEBPACK_IMPORTED_MODULE_0__["default"],
  formatLong: _lib_formatLong_index_js__WEBPACK_IMPORTED_MODULE_1__["default"],
  formatRelative: _lib_formatRelative_index_js__WEBPACK_IMPORTED_MODULE_2__["default"],
  localize: _lib_localize_index_js__WEBPACK_IMPORTED_MODULE_3__["default"],
  match: _lib_match_index_js__WEBPACK_IMPORTED_MODULE_4__["default"],
  options: {
    weekStartsOn: 0 /* Sunday */,
    firstWeekContainsDate: 1
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (locale);

/***/ }),

/***/ "./node_modules/date-fns/esm/parseJSON/index.js":
/*!******************************************************!*\
  !*** ./node_modules/date-fns/esm/parseJSON/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ parseJSON)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ "./node_modules/date-fns/esm/toDate/index.js");
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");


/**
 * @name parseJSON
 * @category Common Helpers
 * @summary Parse a JSON date string
 *
 * @description
 * Converts a complete ISO date string in UTC time, the typical format for transmitting
 * a date in JSON, to a JavaScript `Date` instance.
 *
 * This is a minimal implementation for converting dates retrieved from a JSON API to
 * a `Date` instance which can be used with other functions in the `date-fns` library.
 * The following formats are supported:
 *
 * - `2000-03-15T05:20:10.123Z`: The output of `.toISOString()` and `JSON.stringify(new Date())`
 * - `2000-03-15T05:20:10Z`: Without milliseconds
 * - `2000-03-15T05:20:10+00:00`: With a zero offset, the default JSON encoded format in some other languages
 * - `2000-03-15T05:20:10+05:45`: With a positive or negative offset, the default JSON encoded format in some other languages
 * - `2000-03-15T05:20:10+0000`: With a zero offset without a colon
 * - `2000-03-15T05:20:10`: Without a trailing 'Z' symbol
 * - `2000-03-15T05:20:10.1234567`: Up to 7 digits in milliseconds field. Only first 3 are taken into account since JS does not allow fractional milliseconds
 * - `2000-03-15 05:20:10`: With a space instead of a 'T' separator for APIs returning a SQL date without reformatting
 *
 * For convenience and ease of use these other input types are also supported
 * via [toDate]{@link https://date-fns.org/docs/toDate}:
 *
 * - A `Date` instance will be cloned
 * - A `number` will be treated as a timestamp
 *
 * Any other input type or invalid date strings will return an `Invalid Date`.
 *
 * @param {String|Number|Date} argument A fully formed ISO8601 date string to convert
 * @returns {Date} the parsed date in the local time zone
 * @throws {TypeError} 1 argument required
 */
function parseJSON(argument) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
  if (typeof argument === 'string') {
    var parts = argument.match(/(\d{4})-(\d{2})-(\d{2})[T ](\d{2}):(\d{2}):(\d{2})(?:\.(\d{0,7}))?(?:Z|(.)(\d{2}):?(\d{2})?)?/);
    if (parts) {
      // Group 8 matches the sign
      return new Date(Date.UTC(+parts[1], +parts[2] - 1, +parts[3], +parts[4] - (+parts[9] || 0) * (parts[8] == '-' ? -1 : 1), +parts[5] - (+parts[10] || 0) * (parts[8] == '-' ? -1 : 1), +parts[6], +((parts[7] || '0') + '00').substring(0, 3)));
    }
    return new Date(NaN);
  }
  return (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(argument);
}

/***/ }),

/***/ "./node_modules/date-fns/esm/startOfDay/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/date-fns/esm/startOfDay/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ startOfDay)
/* harmony export */ });
/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ "./node_modules/date-fns/esm/toDate/index.js");
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");


/**
 * @name startOfDay
 * @category Day Helpers
 * @summary Return the start of a day for the given date.
 *
 * @description
 * Return the start of a day for the given date.
 * The result will be in the local timezone.
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a day
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a day for 2 September 2014 11:55:00:
 * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 02 2014 00:00:00
 */
function startOfDay(dirtyDate) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
  date.setHours(0, 0, 0, 0);
  return date;
}

/***/ }),

/***/ "./node_modules/date-fns/esm/subMilliseconds/index.js":
/*!************************************************************!*\
  !*** ./node_modules/date-fns/esm/subMilliseconds/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ subMilliseconds)
/* harmony export */ });
/* harmony import */ var _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../addMilliseconds/index.js */ "./node_modules/date-fns/esm/addMilliseconds/index.js");
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ "./node_modules/date-fns/esm/_lib/toInteger/index.js");



/**
 * @name subMilliseconds
 * @category Millisecond Helpers
 * @summary Subtract the specified number of milliseconds from the given date.
 *
 * @description
 * Subtract the specified number of milliseconds from the given date.
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
 * @returns {Date} the new date with the milliseconds subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:
 * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:29.250
 */
function subMilliseconds(dirtyDate, dirtyAmount) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(2, arguments);
  var amount = (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyAmount);
  return (0,_addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate, -amount);
}

/***/ }),

/***/ "./node_modules/date-fns/esm/toDate/index.js":
/*!***************************************************!*\
  !*** ./node_modules/date-fns/esm/toDate/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ toDate)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/typeof */ "./node_modules/@babel/runtime/helpers/esm/typeof.js");
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");


/**
 * @name toDate
 * @category Common Helpers
 * @summary Convert the given argument to an instance of Date.
 *
 * @description
 * Convert the given argument to an instance of Date.
 *
 * If the argument is an instance of Date, the function returns its clone.
 *
 * If the argument is a number, it is treated as a timestamp.
 *
 * If the argument is none of the above, the function returns Invalid Date.
 *
 * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
 *
 * @param {Date|Number} argument - the value to convert
 * @returns {Date} the parsed date in the local time zone
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Clone the date:
 * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))
 * //=> Tue Feb 11 2014 11:30:30
 *
 * @example
 * // Convert the timestamp to date:
 * const result = toDate(1392098430000)
 * //=> Tue Feb 11 2014 11:30:30
 */
function toDate(argument) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
  var argStr = Object.prototype.toString.call(argument);

  // Clone the date
  if (argument instanceof Date || (0,_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__["default"])(argument) === 'object' && argStr === '[object Date]') {
    // Prevent the date to lose the milliseconds when passed to new Date() in IE10
    return new Date(argument.getTime());
  } else if (typeof argument === 'number' || argStr === '[object Number]') {
    return new Date(argument);
  } else {
    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {
      // eslint-disable-next-line no-console
      console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments");
      // eslint-disable-next-line no-console
      console.warn(new Error().stack);
    }
    return new Date(NaN);
  }
}

/***/ }),

/***/ "./node_modules/desandro-matches-selector/matches-selector.js":
/*!********************************************************************!*\
  !*** ./node_modules/desandro-matches-selector/matches-selector.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * matchesSelector v2.0.2
 * matchesSelector( element, '.selector' )
 * MIT license
 */

/*jshint browser: true, strict: true, undef: true, unused: true */

( function( window, factory ) {
  /*global define: false, module: false */
  'use strict';
  // universal module definition
  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
		__WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}

}( window, function factory() {
  'use strict';

  var matchesMethod = ( function() {
    var ElemProto = window.Element.prototype;
    // check for the standard method name first
    if ( ElemProto.matches ) {
      return 'matches';
    }
    // check un-prefixed
    if ( ElemProto.matchesSelector ) {
      return 'matchesSelector';
    }
    // check vendor prefixes
    var prefixes = [ 'webkit', 'moz', 'ms', 'o' ];

    for ( var i=0; i < prefixes.length; i++ ) {
      var prefix = prefixes[i];
      var method = prefix + 'MatchesSelector';
      if ( ElemProto[ method ] ) {
        return method;
      }
    }
  })();

  return function matchesSelector( elem, selector ) {
    return elem[ matchesMethod ]( selector );
  };

}));


/***/ }),

/***/ "./node_modules/draggabilly/draggabilly.js":
/*!*************************************************!*\
  !*** ./node_modules/draggabilly/draggabilly.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/*!
 * Draggabilly v3.0.0
 * Make that shiz draggable
 * https://draggabilly.desandro.com
 * MIT license
 */

( function( window, factory ) {
  // universal module definition
  if (  true && module.exports ) {
    // CommonJS
    module.exports = factory(
        window,
        __webpack_require__(/*! get-size */ "./node_modules/draggabilly/node_modules/get-size/get-size.js"),
        __webpack_require__(/*! unidragger */ "./node_modules/unidragger/unidragger.js"),
    );
  } else {
    // browser global
    window.Draggabilly = factory(
        window,
        window.getSize,
        window.Unidragger,
    );
  }

}( typeof window != 'undefined' ? window : this,
    function factory( window, getSize, Unidragger ) {

// -------------------------- helpers & variables -------------------------- //

function noop() {}

let jQuery = window.jQuery;

// -------------------------- Draggabilly -------------------------- //

function Draggabilly( element, options ) {
  // querySelector if string
  this.element = typeof element == 'string' ?
    document.querySelector( element ) : element;

  if ( jQuery ) {
    this.$element = jQuery( this.element );
  }

  // options
  this.options = {};
  this.option( options );

  this._create();
}

// inherit Unidragger methods
let proto = Draggabilly.prototype = Object.create( Unidragger.prototype );

/**
 * set options
 * @param {Object} opts
 */
proto.option = function( opts ) {
  this.options = {
    ...this.options,
    ...opts,
  };
};

// css position values that don't need to be set
const positionValues = [ 'relative', 'absolute', 'fixed' ];

proto._create = function() {
  // properties
  this.position = {};
  this._getPosition();

  this.startPoint = { x: 0, y: 0 };
  this.dragPoint = { x: 0, y: 0 };

  this.startPosition = { ...this.position };

  // set relative positioning
  let style = getComputedStyle( this.element );
  if ( !positionValues.includes( style.position ) ) {
    this.element.style.position = 'relative';
  }

  // events
  this.on( 'pointerDown', this.handlePointerDown );
  this.on( 'pointerUp', this.handlePointerUp );
  this.on( 'dragStart', this.handleDragStart );
  this.on( 'dragMove', this.handleDragMove );
  this.on( 'dragEnd', this.handleDragEnd );

  this.setHandles();
  this.enable();
};

// set this.handles  and bind start events to 'em
proto.setHandles = function() {
  let { handle } = this.options;
  if ( typeof handle == 'string' ) {
    this.handles = this.element.querySelectorAll( handle );
  } else if ( typeof handle == 'object' && handle.length ) {
    this.handles = handle;
  } else if ( handle instanceof HTMLElement ) {
    this.handles = [ handle ];
  } else {
    this.handles = [ this.element ];
  }
};

const cancelableEvents = [ 'dragStart', 'dragMove', 'dragEnd' ];

// duck-punch emitEvent to dispatch jQuery events as well
let emitEvent = proto.emitEvent;
proto.emitEvent = function( eventName, args ) {
  // do not emit cancelable events if dragging is disabled
  let isCanceled = !this.isEnabled && cancelableEvents.includes( eventName );
  if ( isCanceled ) return;

  emitEvent.call( this, eventName, args );

  // trigger jQuery event
  let jquery = window.jQuery;
  if ( !jquery || !this.$element ) return;
  // create jQuery event
  let event;
  let jqArgs = args;
  let isFirstArgEvent = args && args[0] instanceof Event;
  if ( isFirstArgEvent ) [ event, ...jqArgs ] = args;
  /* eslint-disable-next-line new-cap */
  let $event = jquery.Event( event );
  $event.type = eventName;
  this.$element.trigger( $event, jqArgs );
};

// -------------------------- position -------------------------- //

// get x/y position from style
proto._getPosition = function() {
  let style = getComputedStyle( this.element );
  let x = this._getPositionCoord( style.left, 'width' );
  let y = this._getPositionCoord( style.top, 'height' );
  // clean up 'auto' or other non-integer values
  this.position.x = isNaN( x ) ? 0 : x;
  this.position.y = isNaN( y ) ? 0 : y;

  this._addTransformPosition( style );
};

proto._getPositionCoord = function( styleSide, measure ) {
  if ( styleSide.includes('%') ) {
    // convert percent into pixel for Safari, #75
    let parentSize = getSize( this.element.parentNode );
    // prevent not-in-DOM element throwing bug, #131
    return !parentSize ? 0 :
      ( parseFloat( styleSide ) / 100 ) * parentSize[ measure ];
  }
  return parseInt( styleSide, 10 );
};

// add transform: translate( x, y ) to position
proto._addTransformPosition = function( style ) {
  let transform = style.transform;
  // bail out if value is 'none'
  if ( !transform.startsWith('matrix') ) return;

  // split matrix(1, 0, 0, 1, x, y)
  let matrixValues = transform.split(',');
  // translate X value is in 12th or 4th position
  let xIndex = transform.startsWith('matrix3d') ? 12 : 4;
  let translateX = parseInt( matrixValues[ xIndex ], 10 );
  // translate Y value is in 13th or 5th position
  let translateY = parseInt( matrixValues[ xIndex + 1 ], 10 );
  this.position.x += translateX;
  this.position.y += translateY;
};

// -------------------------- events -------------------------- //

proto.handlePointerDown = function( event, pointer ) {
  if ( !this.isEnabled ) return;
  // track start event position
  // Safari 9 overrides pageX and pageY. These values needs to be copied. flickity#842
  this.pointerDownPointer = {
    pageX: pointer.pageX,
    pageY: pointer.pageY,
  };

  event.preventDefault();
  document.activeElement.blur();
  // bind move and end events
  this.bindActivePointerEvents( event );
  this.element.classList.add('is-pointer-down');
};

proto.handleDragStart = function() {
  if ( !this.isEnabled ) return;

  this._getPosition();
  this.measureContainment();
  // position _when_ drag began
  this.startPosition.x = this.position.x;
  this.startPosition.y = this.position.y;
  // reset left/top style
  this.setLeftTop();

  this.dragPoint.x = 0;
  this.dragPoint.y = 0;

  this.element.classList.add('is-dragging');
  // start animation
  this.animate();
};

proto.measureContainment = function() {
  let container = this.getContainer();
  if ( !container ) return;

  let elemSize = getSize( this.element );
  let containerSize = getSize( container );
  let {
    borderLeftWidth,
    borderRightWidth,
    borderTopWidth,
    borderBottomWidth,
  } = containerSize;
  let elemRect = this.element.getBoundingClientRect();
  let containerRect = container.getBoundingClientRect();

  let borderSizeX = borderLeftWidth + borderRightWidth;
  let borderSizeY = borderTopWidth + borderBottomWidth;

  let position = this.relativeStartPosition = {
    x: elemRect.left - ( containerRect.left + borderLeftWidth ),
    y: elemRect.top - ( containerRect.top + borderTopWidth ),
  };

  this.containSize = {
    width: ( containerSize.width - borderSizeX ) - position.x - elemSize.width,
    height: ( containerSize.height - borderSizeY ) - position.y - elemSize.height,
  };
};

proto.getContainer = function() {
  let containment = this.options.containment;
  if ( !containment ) return;

  let isElement = containment instanceof HTMLElement;
  // use as element
  if ( isElement ) return containment;

  // querySelector if string
  if ( typeof containment == 'string' ) {
    return document.querySelector( containment );
  }
  // fallback to parent element
  return this.element.parentNode;
};

// ----- move event ----- //

/**
 * drag move
 * @param {Event} event
 * @param {Event | Touch} pointer
 * @param {Object} moveVector - x and y coordinates
 */
proto.handleDragMove = function( event, pointer, moveVector ) {
  if ( !this.isEnabled ) return;

  let dragX = moveVector.x;
  let dragY = moveVector.y;

  let grid = this.options.grid;
  let gridX = grid && grid[0];
  let gridY = grid && grid[1];

  dragX = applyGrid( dragX, gridX );
  dragY = applyGrid( dragY, gridY );

  dragX = this.containDrag( 'x', dragX, gridX );
  dragY = this.containDrag( 'y', dragY, gridY );

  // constrain to axis
  dragX = this.options.axis == 'y' ? 0 : dragX;
  dragY = this.options.axis == 'x' ? 0 : dragY;

  this.position.x = this.startPosition.x + dragX;
  this.position.y = this.startPosition.y + dragY;
  // set dragPoint properties
  this.dragPoint.x = dragX;
  this.dragPoint.y = dragY;
};

function applyGrid( value, grid, method ) {
  if ( !grid ) return value;

  method = method || 'round';
  return Math[ method ]( value/grid ) * grid;
}

proto.containDrag = function( axis, drag, grid ) {
  if ( !this.options.containment ) return drag;

  let measure = axis == 'x' ? 'width' : 'height';

  let rel = this.relativeStartPosition[ axis ];
  let min = applyGrid( -rel, grid, 'ceil' );
  let max = this.containSize[ measure ];
  max = applyGrid( max, grid, 'floor' );
  return Math.max( min, Math.min( max, drag ) );
};

// ----- end event ----- //

proto.handlePointerUp = function() {
  this.element.classList.remove('is-pointer-down');
};

proto.handleDragEnd = function() {
  if ( !this.isEnabled ) return;

  // use top left position when complete
  this.element.style.transform = '';
  this.setLeftTop();
  this.element.classList.remove('is-dragging');
};

// -------------------------- animation -------------------------- //

proto.animate = function() {
  // only render and animate if dragging
  if ( !this.isDragging ) return;

  this.positionDrag();
  requestAnimationFrame( () => this.animate() );
};

// left/top positioning
proto.setLeftTop = function() {
  let { x, y } = this.position;
  this.element.style.left = `${x}px`;
  this.element.style.top = `${y}px`;
};

proto.positionDrag = function() {
  let { x, y } = this.dragPoint;
  this.element.style.transform = `translate3d(${x}px, ${y}px, 0)`;
};

// ----- methods ----- //

/**
 * @param {Number} x
 * @param {Number} y
 */
proto.setPosition = function( x, y ) {
  this.position.x = x;
  this.position.y = y;
  this.setLeftTop();
};

proto.enable = function() {
  if ( this.isEnabled ) return;
  this.isEnabled = true;
  this.bindHandles();
};

proto.disable = function() {
  if ( !this.isEnabled ) return;
  this.isEnabled = false;
  if ( this.isDragging ) this.dragEnd();
  this.unbindHandles();
};

const resetCssProperties = [ 'transform', 'left', 'top', 'position' ];

proto.destroy = function() {
  this.disable();
  // reset styles
  resetCssProperties.forEach( ( prop ) => {
    this.element.style[ prop ] = '';
  } );
  // unbind handles
  this.unbindHandles();
  // remove jQuery data
  if ( this.$element ) this.$element.removeData('draggabilly');
};

// ----- jQuery bridget ----- //

// required for jQuery bridget
proto._init = noop;

if ( jQuery && jQuery.bridget ) {
  jQuery.bridget( 'draggabilly', Draggabilly );
}

// -----  ----- //

return Draggabilly;

} ) );


/***/ }),

/***/ "./node_modules/draggabilly/node_modules/get-size/get-size.js":
/*!********************************************************************!*\
  !*** ./node_modules/draggabilly/node_modules/get-size/get-size.js ***!
  \********************************************************************/
/***/ ((module) => {

/*!
 * Infinite Scroll v2.0.4
 * measure size of elements
 * MIT license
 */

( function( window, factory ) {
  if (  true && module.exports ) {
    // CommonJS
    module.exports = factory();
  } else {
    // browser global
    window.getSize = factory();
  }

} )( window, function factory() {

// -------------------------- helpers -------------------------- //

// get a number from a string, not a percentage
function getStyleSize( value ) {
  let num = parseFloat( value );
  // not a percent like '100%', and a number
  let isValid = value.indexOf('%') == -1 && !isNaN( num );
  return isValid && num;
}

// -------------------------- measurements -------------------------- //

let measurements = [
  'paddingLeft',
  'paddingRight',
  'paddingTop',
  'paddingBottom',
  'marginLeft',
  'marginRight',
  'marginTop',
  'marginBottom',
  'borderLeftWidth',
  'borderRightWidth',
  'borderTopWidth',
  'borderBottomWidth',
];

let measurementsLength = measurements.length;

function getZeroSize() {
  let size = {
    width: 0,
    height: 0,
    innerWidth: 0,
    innerHeight: 0,
    outerWidth: 0,
    outerHeight: 0,
  };
  measurements.forEach( ( measurement ) => {
    size[ measurement ] = 0;
  } );
  return size;
}

// -------------------------- getSize -------------------------- //

function getSize( elem ) {
  // use querySeletor if elem is string
  if ( typeof elem == 'string' ) elem = document.querySelector( elem );

  // do not proceed on non-objects
  let isElement = elem && typeof elem == 'object' && elem.nodeType;
  if ( !isElement ) return;

  let style = getComputedStyle( elem );

  // if hidden, everything is 0
  if ( style.display == 'none' ) return getZeroSize();

  let size = {};
  size.width = elem.offsetWidth;
  size.height = elem.offsetHeight;

  let isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';

  // get all measurements
  measurements.forEach( ( measurement ) => {
    let value = style[ measurement ];
    let num = parseFloat( value );
    // any 'auto', 'medium' value will be 0
    size[ measurement ] = !isNaN( num ) ? num : 0;
  } );

  let paddingWidth = size.paddingLeft + size.paddingRight;
  let paddingHeight = size.paddingTop + size.paddingBottom;
  let marginWidth = size.marginLeft + size.marginRight;
  let marginHeight = size.marginTop + size.marginBottom;
  let borderWidth = size.borderLeftWidth + size.borderRightWidth;
  let borderHeight = size.borderTopWidth + size.borderBottomWidth;

  // overwrite width and height if we can get it from style
  let styleWidth = getStyleSize( style.width );
  if ( styleWidth !== false ) {
    size.width = styleWidth +
      // add padding and border unless it's already including it
      ( isBorderBox ? 0 : paddingWidth + borderWidth );
  }

  let styleHeight = getStyleSize( style.height );
  if ( styleHeight !== false ) {
    size.height = styleHeight +
      // add padding and border unless it's already including it
      ( isBorderBox ? 0 : paddingHeight + borderHeight );
  }

  size.innerWidth = size.width - ( paddingWidth + borderWidth );
  size.innerHeight = size.height - ( paddingHeight + borderHeight );

  size.outerWidth = size.width + marginWidth;
  size.outerHeight = size.height + marginHeight;

  return size;
}

return getSize;

} );


/***/ }),

/***/ "./node_modules/ev-emitter/ev-emitter.js":
/*!***********************************************!*\
  !*** ./node_modules/ev-emitter/ev-emitter.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * EvEmitter v1.1.0
 * Lil' event emitter
 * MIT License
 */

/* jshint unused: true, undef: true, strict: true */

( function( global, factory ) {
  // universal module definition
  /* jshint strict: false */ /* globals define, module, window */
  if ( true ) {
    // AMD - RequireJS
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
		__WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}

}( typeof window != 'undefined' ? window : this, function() {

"use strict";

function EvEmitter() {}

var proto = EvEmitter.prototype;

proto.on = function( eventName, listener ) {
  if ( !eventName || !listener ) {
    return;
  }
  // set events hash
  var events = this._events = this._events || {};
  // set listeners array
  var listeners = events[ eventName ] = events[ eventName ] || [];
  // only add once
  if ( listeners.indexOf( listener ) == -1 ) {
    listeners.push( listener );
  }

  return this;
};

proto.once = function( eventName, listener ) {
  if ( !eventName || !listener ) {
    return;
  }
  // add event
  this.on( eventName, listener );
  // set once flag
  // set onceEvents hash
  var onceEvents = this._onceEvents = this._onceEvents || {};
  // set onceListeners object
  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};
  // set flag
  onceListeners[ listener ] = true;

  return this;
};

proto.off = function( eventName, listener ) {
  var listeners = this._events && this._events[ eventName ];
  if ( !listeners || !listeners.length ) {
    return;
  }
  var index = listeners.indexOf( listener );
  if ( index != -1 ) {
    listeners.splice( index, 1 );
  }

  return this;
};

proto.emitEvent = function( eventName, args ) {
  var listeners = this._events && this._events[ eventName ];
  if ( !listeners || !listeners.length ) {
    return;
  }
  // copy over to avoid interference if .off() in listener
  listeners = listeners.slice(0);
  args = args || [];
  // once stuff
  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];

  for ( var i=0; i < listeners.length; i++ ) {
    var listener = listeners[i]
    var isOnce = onceListeners && onceListeners[ listener ];
    if ( isOnce ) {
      // remove listener
      // remove before trigger to prevent recursion
      this.off( eventName, listener );
      // unset once flag
      delete onceListeners[ listener ];
    }
    // trigger listener
    listener.apply( this, args );
  }

  return this;
};

proto.allOff = function() {
  delete this._events;
  delete this._onceEvents;
};

return EvEmitter;

}));


/***/ }),

/***/ "./node_modules/fizzy-ui-utils/utils.js":
/*!**********************************************!*\
  !*** ./node_modules/fizzy-ui-utils/utils.js ***!
  \**********************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Fizzy UI utils v2.0.7
 * MIT license
 */

/*jshint browser: true, undef: true, unused: true, strict: true */

( function( window, factory ) {
  // universal module definition
  /*jshint strict: false */ /*globals define, module, require */

  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
      __webpack_require__(/*! desandro-matches-selector/matches-selector */ "./node_modules/desandro-matches-selector/matches-selector.js")
    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( matchesSelector ) {
      return factory( window, matchesSelector );
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}

}( window, function factory( window, matchesSelector ) {

'use strict';

var utils = {};

// ----- extend ----- //

// extends objects
utils.extend = function( a, b ) {
  for ( var prop in b ) {
    a[ prop ] = b[ prop ];
  }
  return a;
};

// ----- modulo ----- //

utils.modulo = function( num, div ) {
  return ( ( num % div ) + div ) % div;
};

// ----- makeArray ----- //

var arraySlice = Array.prototype.slice;

// turn element or nodeList into an array
utils.makeArray = function( obj ) {
  if ( Array.isArray( obj ) ) {
    // use object if already an array
    return obj;
  }
  // return empty array if undefined or null. #6
  if ( obj === null || obj === undefined ) {
    return [];
  }

  var isArrayLike = typeof obj == 'object' && typeof obj.length == 'number';
  if ( isArrayLike ) {
    // convert nodeList to array
    return arraySlice.call( obj );
  }

  // array of single index
  return [ obj ];
};

// ----- removeFrom ----- //

utils.removeFrom = function( ary, obj ) {
  var index = ary.indexOf( obj );
  if ( index != -1 ) {
    ary.splice( index, 1 );
  }
};

// ----- getParent ----- //

utils.getParent = function( elem, selector ) {
  while ( elem.parentNode && elem != document.body ) {
    elem = elem.parentNode;
    if ( matchesSelector( elem, selector ) ) {
      return elem;
    }
  }
};

// ----- getQueryElement ----- //

// use element as selector string
utils.getQueryElement = function( elem ) {
  if ( typeof elem == 'string' ) {
    return document.querySelector( elem );
  }
  return elem;
};

// ----- handleEvent ----- //

// enable .ontype to trigger from .addEventListener( elem, 'type' )
utils.handleEvent = function( event ) {
  var method = 'on' + event.type;
  if ( this[ method ] ) {
    this[ method ]( event );
  }
};

// ----- filterFindElements ----- //

utils.filterFindElements = function( elems, selector ) {
  // make array of elems
  elems = utils.makeArray( elems );
  var ffElems = [];

  elems.forEach( function( elem ) {
    // check that elem is an actual element
    if ( !( elem instanceof HTMLElement ) ) {
      return;
    }
    // add elem if no selector
    if ( !selector ) {
      ffElems.push( elem );
      return;
    }
    // filter & find items if we have a selector
    // filter
    if ( matchesSelector( elem, selector ) ) {
      ffElems.push( elem );
    }
    // find children
    var childElems = elem.querySelectorAll( selector );
    // concat childElems to filterFound array
    for ( var i=0; i < childElems.length; i++ ) {
      ffElems.push( childElems[i] );
    }
  });

  return ffElems;
};

// ----- debounceMethod ----- //

utils.debounceMethod = function( _class, methodName, threshold ) {
  threshold = threshold || 100;
  // original method
  var method = _class.prototype[ methodName ];
  var timeoutName = methodName + 'Timeout';

  _class.prototype[ methodName ] = function() {
    var timeout = this[ timeoutName ];
    clearTimeout( timeout );

    var args = arguments;
    var _this = this;
    this[ timeoutName ] = setTimeout( function() {
      method.apply( _this, args );
      delete _this[ timeoutName ];
    }, threshold );
  };
};

// ----- docReady ----- //

utils.docReady = function( callback ) {
  var readyState = document.readyState;
  if ( readyState == 'complete' || readyState == 'interactive' ) {
    // do async to allow for other scripts to run. metafizzy/flickity#441
    setTimeout( callback );
  } else {
    document.addEventListener( 'DOMContentLoaded', callback );
  }
};

// ----- htmlInit ----- //

// http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/
utils.toDashed = function( str ) {
  return str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {
    return $1 + '-' + $2;
  }).toLowerCase();
};

var console = window.console;
/**
 * allow user to initialize classes via [data-namespace] or .js-namespace class
 * htmlInit( Widget, 'widgetName' )
 * options are parsed from data-namespace-options
 */
utils.htmlInit = function( WidgetClass, namespace ) {
  utils.docReady( function() {
    var dashedNamespace = utils.toDashed( namespace );
    var dataAttr = 'data-' + dashedNamespace;
    var dataAttrElems = document.querySelectorAll( '[' + dataAttr + ']' );
    var jsDashElems = document.querySelectorAll( '.js-' + dashedNamespace );
    var elems = utils.makeArray( dataAttrElems )
      .concat( utils.makeArray( jsDashElems ) );
    var dataOptionsAttr = dataAttr + '-options';
    var jQuery = window.jQuery;

    elems.forEach( function( elem ) {
      var attr = elem.getAttribute( dataAttr ) ||
        elem.getAttribute( dataOptionsAttr );
      var options;
      try {
        options = attr && JSON.parse( attr );
      } catch ( error ) {
        // log error, do not initialize
        if ( console ) {
          console.error( 'Error parsing ' + dataAttr + ' on ' + elem.className +
          ': ' + error );
        }
        return;
      }
      // initialize
      var instance = new WidgetClass( elem, options );
      // make available via $().data('namespace')
      if ( jQuery ) {
        jQuery.data( elem, namespace, instance );
      }
    });

  });
};

// -----  ----- //

return utils;

}));


/***/ }),

/***/ "./node_modules/get-size/get-size.js":
/*!*******************************************!*\
  !*** ./node_modules/get-size/get-size.js ***!
  \*******************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * getSize v2.0.3
 * measure size of elements
 * MIT license
 */

/* jshint browser: true, strict: true, undef: true, unused: true */
/* globals console: false */

( function( window, factory ) {
  /* jshint strict: false */ /* globals define, module */
  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
		__WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}

})( window, function factory() {
'use strict';

// -------------------------- helpers -------------------------- //

// get a number from a string, not a percentage
function getStyleSize( value ) {
  var num = parseFloat( value );
  // not a percent like '100%', and a number
  var isValid = value.indexOf('%') == -1 && !isNaN( num );
  return isValid && num;
}

function noop() {}

var logError = typeof console == 'undefined' ? noop :
  function( message ) {
    console.error( message );
  };

// -------------------------- measurements -------------------------- //

var measurements = [
  'paddingLeft',
  'paddingRight',
  'paddingTop',
  'paddingBottom',
  'marginLeft',
  'marginRight',
  'marginTop',
  'marginBottom',
  'borderLeftWidth',
  'borderRightWidth',
  'borderTopWidth',
  'borderBottomWidth'
];

var measurementsLength = measurements.length;

function getZeroSize() {
  var size = {
    width: 0,
    height: 0,
    innerWidth: 0,
    innerHeight: 0,
    outerWidth: 0,
    outerHeight: 0
  };
  for ( var i=0; i < measurementsLength; i++ ) {
    var measurement = measurements[i];
    size[ measurement ] = 0;
  }
  return size;
}

// -------------------------- getStyle -------------------------- //

/**
 * getStyle, get style of element, check for Firefox bug
 * https://bugzilla.mozilla.org/show_bug.cgi?id=548397
 */
function getStyle( elem ) {
  var style = getComputedStyle( elem );
  if ( !style ) {
    logError( 'Style returned ' + style +
      '. Are you running this code in a hidden iframe on Firefox? ' +
      'See https://bit.ly/getsizebug1' );
  }
  return style;
}

// -------------------------- setup -------------------------- //

var isSetup = false;

var isBoxSizeOuter;

/**
 * setup
 * check isBoxSizerOuter
 * do on first getSize() rather than on page load for Firefox bug
 */
function setup() {
  // setup once
  if ( isSetup ) {
    return;
  }
  isSetup = true;

  // -------------------------- box sizing -------------------------- //

  /**
   * Chrome & Safari measure the outer-width on style.width on border-box elems
   * IE11 & Firefox<29 measures the inner-width
   */
  var div = document.createElement('div');
  div.style.width = '200px';
  div.style.padding = '1px 2px 3px 4px';
  div.style.borderStyle = 'solid';
  div.style.borderWidth = '1px 2px 3px 4px';
  div.style.boxSizing = 'border-box';

  var body = document.body || document.documentElement;
  body.appendChild( div );
  var style = getStyle( div );
  // round value for browser zoom. desandro/masonry#928
  isBoxSizeOuter = Math.round( getStyleSize( style.width ) ) == 200;
  getSize.isBoxSizeOuter = isBoxSizeOuter;

  body.removeChild( div );
}

// -------------------------- getSize -------------------------- //

function getSize( elem ) {
  setup();

  // use querySeletor if elem is string
  if ( typeof elem == 'string' ) {
    elem = document.querySelector( elem );
  }

  // do not proceed on non-objects
  if ( !elem || typeof elem != 'object' || !elem.nodeType ) {
    return;
  }

  var style = getStyle( elem );

  // if hidden, everything is 0
  if ( style.display == 'none' ) {
    return getZeroSize();
  }

  var size = {};
  size.width = elem.offsetWidth;
  size.height = elem.offsetHeight;

  var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';

  // get all measurements
  for ( var i=0; i < measurementsLength; i++ ) {
    var measurement = measurements[i];
    var value = style[ measurement ];
    var num = parseFloat( value );
    // any 'auto', 'medium' value will be 0
    size[ measurement ] = !isNaN( num ) ? num : 0;
  }

  var paddingWidth = size.paddingLeft + size.paddingRight;
  var paddingHeight = size.paddingTop + size.paddingBottom;
  var marginWidth = size.marginLeft + size.marginRight;
  var marginHeight = size.marginTop + size.marginBottom;
  var borderWidth = size.borderLeftWidth + size.borderRightWidth;
  var borderHeight = size.borderTopWidth + size.borderBottomWidth;

  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;

  // overwrite width and height if we can get it from style
  var styleWidth = getStyleSize( style.width );
  if ( styleWidth !== false ) {
    size.width = styleWidth +
      // add padding and border unless it's already including it
      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );
  }

  var styleHeight = getStyleSize( style.height );
  if ( styleHeight !== false ) {
    size.height = styleHeight +
      // add padding and border unless it's already including it
      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );
  }

  size.innerWidth = size.width - ( paddingWidth + borderWidth );
  size.innerHeight = size.height - ( paddingHeight + borderHeight );

  size.outerWidth = size.width + marginWidth;
  size.outerHeight = size.height + marginHeight;

  return size;
}

return getSize;

});


/***/ }),

/***/ "./node_modules/outlayer/item.js":
/*!***************************************!*\
  !*** ./node_modules/outlayer/item.js ***!
  \***************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Outlayer Item
 */

( function( window, factory ) {
  // universal module definition
  /* jshint strict: false */ /* globals define, module, require */
  if ( true ) {
    // AMD - RequireJS
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
        __webpack_require__(/*! ev-emitter/ev-emitter */ "./node_modules/ev-emitter/ev-emitter.js"),
        __webpack_require__(/*! get-size/get-size */ "./node_modules/get-size/get-size.js")
      ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}

}( window, function factory( EvEmitter, getSize ) {
'use strict';

// ----- helpers ----- //

function isEmptyObj( obj ) {
  for ( var prop in obj ) {
    return false;
  }
  prop = null;
  return true;
}

// -------------------------- CSS3 support -------------------------- //


var docElemStyle = document.documentElement.style;

var transitionProperty = typeof docElemStyle.transition == 'string' ?
  'transition' : 'WebkitTransition';
var transformProperty = typeof docElemStyle.transform == 'string' ?
  'transform' : 'WebkitTransform';

var transitionEndEvent = {
  WebkitTransition: 'webkitTransitionEnd',
  transition: 'transitionend'
}[ transitionProperty ];

// cache all vendor properties that could have vendor prefix
var vendorProperties = {
  transform: transformProperty,
  transition: transitionProperty,
  transitionDuration: transitionProperty + 'Duration',
  transitionProperty: transitionProperty + 'Property',
  transitionDelay: transitionProperty + 'Delay'
};

// -------------------------- Item -------------------------- //

function Item( element, layout ) {
  if ( !element ) {
    return;
  }

  this.element = element;
  // parent layout class, i.e. Masonry, Isotope, or Packery
  this.layout = layout;
  this.position = {
    x: 0,
    y: 0
  };

  this._create();
}

// inherit EvEmitter
var proto = Item.prototype = Object.create( EvEmitter.prototype );
proto.constructor = Item;

proto._create = function() {
  // transition objects
  this._transn = {
    ingProperties: {},
    clean: {},
    onEnd: {}
  };

  this.css({
    position: 'absolute'
  });
};

// trigger specified handler for event type
proto.handleEvent = function( event ) {
  var method = 'on' + event.type;
  if ( this[ method ] ) {
    this[ method ]( event );
  }
};

proto.getSize = function() {
  this.size = getSize( this.element );
};

/**
 * apply CSS styles to element
 * @param {Object} style
 */
proto.css = function( style ) {
  var elemStyle = this.element.style;

  for ( var prop in style ) {
    // use vendor property if available
    var supportedProp = vendorProperties[ prop ] || prop;
    elemStyle[ supportedProp ] = style[ prop ];
  }
};

 // measure position, and sets it
proto.getPosition = function() {
  var style = getComputedStyle( this.element );
  var isOriginLeft = this.layout._getOption('originLeft');
  var isOriginTop = this.layout._getOption('originTop');
  var xValue = style[ isOriginLeft ? 'left' : 'right' ];
  var yValue = style[ isOriginTop ? 'top' : 'bottom' ];
  var x = parseFloat( xValue );
  var y = parseFloat( yValue );
  // convert percent to pixels
  var layoutSize = this.layout.size;
  if ( xValue.indexOf('%') != -1 ) {
    x = ( x / 100 ) * layoutSize.width;
  }
  if ( yValue.indexOf('%') != -1 ) {
    y = ( y / 100 ) * layoutSize.height;
  }
  // clean up 'auto' or other non-integer values
  x = isNaN( x ) ? 0 : x;
  y = isNaN( y ) ? 0 : y;
  // remove padding from measurement
  x -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;
  y -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;

  this.position.x = x;
  this.position.y = y;
};

// set settled position, apply padding
proto.layoutPosition = function() {
  var layoutSize = this.layout.size;
  var style = {};
  var isOriginLeft = this.layout._getOption('originLeft');
  var isOriginTop = this.layout._getOption('originTop');

  // x
  var xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';
  var xProperty = isOriginLeft ? 'left' : 'right';
  var xResetProperty = isOriginLeft ? 'right' : 'left';

  var x = this.position.x + layoutSize[ xPadding ];
  // set in percentage or pixels
  style[ xProperty ] = this.getXValue( x );
  // reset other property
  style[ xResetProperty ] = '';

  // y
  var yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';
  var yProperty = isOriginTop ? 'top' : 'bottom';
  var yResetProperty = isOriginTop ? 'bottom' : 'top';

  var y = this.position.y + layoutSize[ yPadding ];
  // set in percentage or pixels
  style[ yProperty ] = this.getYValue( y );
  // reset other property
  style[ yResetProperty ] = '';

  this.css( style );
  this.emitEvent( 'layout', [ this ] );
};

proto.getXValue = function( x ) {
  var isHorizontal = this.layout._getOption('horizontal');
  return this.layout.options.percentPosition && !isHorizontal ?
    ( ( x / this.layout.size.width ) * 100 ) + '%' : x + 'px';
};

proto.getYValue = function( y ) {
  var isHorizontal = this.layout._getOption('horizontal');
  return this.layout.options.percentPosition && isHorizontal ?
    ( ( y / this.layout.size.height ) * 100 ) + '%' : y + 'px';
};

proto._transitionTo = function( x, y ) {
  this.getPosition();
  // get current x & y from top/left
  var curX = this.position.x;
  var curY = this.position.y;

  var didNotMove = x == this.position.x && y == this.position.y;

  // save end position
  this.setPosition( x, y );

  // if did not move and not transitioning, just go to layout
  if ( didNotMove && !this.isTransitioning ) {
    this.layoutPosition();
    return;
  }

  var transX = x - curX;
  var transY = y - curY;
  var transitionStyle = {};
  transitionStyle.transform = this.getTranslate( transX, transY );

  this.transition({
    to: transitionStyle,
    onTransitionEnd: {
      transform: this.layoutPosition
    },
    isCleaning: true
  });
};

proto.getTranslate = function( x, y ) {
  // flip cooridinates if origin on right or bottom
  var isOriginLeft = this.layout._getOption('originLeft');
  var isOriginTop = this.layout._getOption('originTop');
  x = isOriginLeft ? x : -x;
  y = isOriginTop ? y : -y;
  return 'translate3d(' + x + 'px, ' + y + 'px, 0)';
};

// non transition + transform support
proto.goTo = function( x, y ) {
  this.setPosition( x, y );
  this.layoutPosition();
};

proto.moveTo = proto._transitionTo;

proto.setPosition = function( x, y ) {
  this.position.x = parseFloat( x );
  this.position.y = parseFloat( y );
};

// ----- transition ----- //

/**
 * @param {Object} style - CSS
 * @param {Function} onTransitionEnd
 */

// non transition, just trigger callback
proto._nonTransition = function( args ) {
  this.css( args.to );
  if ( args.isCleaning ) {
    this._removeStyles( args.to );
  }
  for ( var prop in args.onTransitionEnd ) {
    args.onTransitionEnd[ prop ].call( this );
  }
};

/**
 * proper transition
 * @param {Object} args - arguments
 *   @param {Object} to - style to transition to
 *   @param {Object} from - style to start transition from
 *   @param {Boolean} isCleaning - removes transition styles after transition
 *   @param {Function} onTransitionEnd - callback
 */
proto.transition = function( args ) {
  // redirect to nonTransition if no transition duration
  if ( !parseFloat( this.layout.options.transitionDuration ) ) {
    this._nonTransition( args );
    return;
  }

  var _transition = this._transn;
  // keep track of onTransitionEnd callback by css property
  for ( var prop in args.onTransitionEnd ) {
    _transition.onEnd[ prop ] = args.onTransitionEnd[ prop ];
  }
  // keep track of properties that are transitioning
  for ( prop in args.to ) {
    _transition.ingProperties[ prop ] = true;
    // keep track of properties to clean up when transition is done
    if ( args.isCleaning ) {
      _transition.clean[ prop ] = true;
    }
  }

  // set from styles
  if ( args.from ) {
    this.css( args.from );
    // force redraw. http://blog.alexmaccaw.com/css-transitions
    var h = this.element.offsetHeight;
    // hack for JSHint to hush about unused var
    h = null;
  }
  // enable transition
  this.enableTransition( args.to );
  // set styles that are transitioning
  this.css( args.to );

  this.isTransitioning = true;

};

// dash before all cap letters, including first for
// WebkitTransform => -webkit-transform
function toDashedAll( str ) {
  return str.replace( /([A-Z])/g, function( $1 ) {
    return '-' + $1.toLowerCase();
  });
}

var transitionProps = 'opacity,' + toDashedAll( transformProperty );

proto.enableTransition = function(/* style */) {
  // HACK changing transitionProperty during a transition
  // will cause transition to jump
  if ( this.isTransitioning ) {
    return;
  }

  // make `transition: foo, bar, baz` from style object
  // HACK un-comment this when enableTransition can work
  // while a transition is happening
  // var transitionValues = [];
  // for ( var prop in style ) {
  //   // dash-ify camelCased properties like WebkitTransition
  //   prop = vendorProperties[ prop ] || prop;
  //   transitionValues.push( toDashedAll( prop ) );
  // }
  // munge number to millisecond, to match stagger
  var duration = this.layout.options.transitionDuration;
  duration = typeof duration == 'number' ? duration + 'ms' : duration;
  // enable transition styles
  this.css({
    transitionProperty: transitionProps,
    transitionDuration: duration,
    transitionDelay: this.staggerDelay || 0
  });
  // listen for transition end event
  this.element.addEventListener( transitionEndEvent, this, false );
};

// ----- events ----- //

proto.onwebkitTransitionEnd = function( event ) {
  this.ontransitionend( event );
};

proto.onotransitionend = function( event ) {
  this.ontransitionend( event );
};

// properties that I munge to make my life easier
var dashedVendorProperties = {
  '-webkit-transform': 'transform'
};

proto.ontransitionend = function( event ) {
  // disregard bubbled events from children
  if ( event.target !== this.element ) {
    return;
  }
  var _transition = this._transn;
  // get property name of transitioned property, convert to prefix-free
  var propertyName = dashedVendorProperties[ event.propertyName ] || event.propertyName;

  // remove property that has completed transitioning
  delete _transition.ingProperties[ propertyName ];
  // check if any properties are still transitioning
  if ( isEmptyObj( _transition.ingProperties ) ) {
    // all properties have completed transitioning
    this.disableTransition();
  }
  // clean style
  if ( propertyName in _transition.clean ) {
    // clean up style
    this.element.style[ event.propertyName ] = '';
    delete _transition.clean[ propertyName ];
  }
  // trigger onTransitionEnd callback
  if ( propertyName in _transition.onEnd ) {
    var onTransitionEnd = _transition.onEnd[ propertyName ];
    onTransitionEnd.call( this );
    delete _transition.onEnd[ propertyName ];
  }

  this.emitEvent( 'transitionEnd', [ this ] );
};

proto.disableTransition = function() {
  this.removeTransitionStyles();
  this.element.removeEventListener( transitionEndEvent, this, false );
  this.isTransitioning = false;
};

/**
 * removes style property from element
 * @param {Object} style
**/
proto._removeStyles = function( style ) {
  // clean up transition styles
  var cleanStyle = {};
  for ( var prop in style ) {
    cleanStyle[ prop ] = '';
  }
  this.css( cleanStyle );
};

var cleanTransitionStyle = {
  transitionProperty: '',
  transitionDuration: '',
  transitionDelay: ''
};

proto.removeTransitionStyles = function() {
  // remove transition
  this.css( cleanTransitionStyle );
};

// ----- stagger ----- //

proto.stagger = function( delay ) {
  delay = isNaN( delay ) ? 0 : delay;
  this.staggerDelay = delay + 'ms';
};

// ----- show/hide/remove ----- //

// remove element from DOM
proto.removeElem = function() {
  this.element.parentNode.removeChild( this.element );
  // remove display: none
  this.css({ display: '' });
  this.emitEvent( 'remove', [ this ] );
};

proto.remove = function() {
  // just remove element if no transition support or no transition
  if ( !transitionProperty || !parseFloat( this.layout.options.transitionDuration ) ) {
    this.removeElem();
    return;
  }

  // start transition
  this.once( 'transitionEnd', function() {
    this.removeElem();
  });
  this.hide();
};

proto.reveal = function() {
  delete this.isHidden;
  // remove display: none
  this.css({ display: '' });

  var options = this.layout.options;

  var onTransitionEnd = {};
  var transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');
  onTransitionEnd[ transitionEndProperty ] = this.onRevealTransitionEnd;

  this.transition({
    from: options.hiddenStyle,
    to: options.visibleStyle,
    isCleaning: true,
    onTransitionEnd: onTransitionEnd
  });
};

proto.onRevealTransitionEnd = function() {
  // check if still visible
  // during transition, item may have been hidden
  if ( !this.isHidden ) {
    this.emitEvent('reveal');
  }
};

/**
 * get style property use for hide/reveal transition end
 * @param {String} styleProperty - hiddenStyle/visibleStyle
 * @returns {String}
 */
proto.getHideRevealTransitionEndProperty = function( styleProperty ) {
  var optionStyle = this.layout.options[ styleProperty ];
  // use opacity
  if ( optionStyle.opacity ) {
    return 'opacity';
  }
  // get first property
  for ( var prop in optionStyle ) {
    return prop;
  }
};

proto.hide = function() {
  // set flag
  this.isHidden = true;
  // remove display: none
  this.css({ display: '' });

  var options = this.layout.options;

  var onTransitionEnd = {};
  var transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');
  onTransitionEnd[ transitionEndProperty ] = this.onHideTransitionEnd;

  this.transition({
    from: options.visibleStyle,
    to: options.hiddenStyle,
    // keep hidden stuff hidden
    isCleaning: true,
    onTransitionEnd: onTransitionEnd
  });
};

proto.onHideTransitionEnd = function() {
  // check if still hidden
  // during transition, item may have been un-hidden
  if ( this.isHidden ) {
    this.css({ display: 'none' });
    this.emitEvent('hide');
  }
};

proto.destroy = function() {
  this.css({
    position: '',
    left: '',
    right: '',
    top: '',
    bottom: '',
    transition: '',
    transform: ''
  });
};

return Item;

}));


/***/ }),

/***/ "./node_modules/outlayer/outlayer.js":
/*!*******************************************!*\
  !*** ./node_modules/outlayer/outlayer.js ***!
  \*******************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * Outlayer v2.1.1
 * the brains and guts of a layout library
 * MIT license
 */

( function( window, factory ) {
  'use strict';
  // universal module definition
  /* jshint strict: false */ /* globals define, module, require */
  if ( true ) {
    // AMD - RequireJS
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
        __webpack_require__(/*! ev-emitter/ev-emitter */ "./node_modules/ev-emitter/ev-emitter.js"),
        __webpack_require__(/*! get-size/get-size */ "./node_modules/get-size/get-size.js"),
        __webpack_require__(/*! fizzy-ui-utils/utils */ "./node_modules/fizzy-ui-utils/utils.js"),
        __webpack_require__(/*! ./item */ "./node_modules/outlayer/item.js")
      ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( EvEmitter, getSize, utils, Item ) {
        return factory( window, EvEmitter, getSize, utils, Item);
      }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}

}( window, function factory( window, EvEmitter, getSize, utils, Item ) {
'use strict';

// ----- vars ----- //

var console = window.console;
var jQuery = window.jQuery;
var noop = function() {};

// -------------------------- Outlayer -------------------------- //

// globally unique identifiers
var GUID = 0;
// internal store of all Outlayer intances
var instances = {};


/**
 * @param {Element, String} element
 * @param {Object} options
 * @constructor
 */
function Outlayer( element, options ) {
  var queryElement = utils.getQueryElement( element );
  if ( !queryElement ) {
    if ( console ) {
      console.error( 'Bad element for ' + this.constructor.namespace +
        ': ' + ( queryElement || element ) );
    }
    return;
  }
  this.element = queryElement;
  // add jQuery
  if ( jQuery ) {
    this.$element = jQuery( this.element );
  }

  // options
  this.options = utils.extend( {}, this.constructor.defaults );
  this.option( options );

  // add id for Outlayer.getFromElement
  var id = ++GUID;
  this.element.outlayerGUID = id; // expando
  instances[ id ] = this; // associate via id

  // kick it off
  this._create();

  var isInitLayout = this._getOption('initLayout');
  if ( isInitLayout ) {
    this.layout();
  }
}

// settings are for internal use only
Outlayer.namespace = 'outlayer';
Outlayer.Item = Item;

// default options
Outlayer.defaults = {
  containerStyle: {
    position: 'relative'
  },
  initLayout: true,
  originLeft: true,
  originTop: true,
  resize: true,
  resizeContainer: true,
  // item options
  transitionDuration: '0.4s',
  hiddenStyle: {
    opacity: 0,
    transform: 'scale(0.001)'
  },
  visibleStyle: {
    opacity: 1,
    transform: 'scale(1)'
  }
};

var proto = Outlayer.prototype;
// inherit EvEmitter
utils.extend( proto, EvEmitter.prototype );

/**
 * set options
 * @param {Object} opts
 */
proto.option = function( opts ) {
  utils.extend( this.options, opts );
};

/**
 * get backwards compatible option value, check old name
 */
proto._getOption = function( option ) {
  var oldOption = this.constructor.compatOptions[ option ];
  return oldOption && this.options[ oldOption ] !== undefined ?
    this.options[ oldOption ] : this.options[ option ];
};

Outlayer.compatOptions = {
  // currentName: oldName
  initLayout: 'isInitLayout',
  horizontal: 'isHorizontal',
  layoutInstant: 'isLayoutInstant',
  originLeft: 'isOriginLeft',
  originTop: 'isOriginTop',
  resize: 'isResizeBound',
  resizeContainer: 'isResizingContainer'
};

proto._create = function() {
  // get items from children
  this.reloadItems();
  // elements that affect layout, but are not laid out
  this.stamps = [];
  this.stamp( this.options.stamp );
  // set container style
  utils.extend( this.element.style, this.options.containerStyle );

  // bind resize method
  var canBindResize = this._getOption('resize');
  if ( canBindResize ) {
    this.bindResize();
  }
};

// goes through all children again and gets bricks in proper order
proto.reloadItems = function() {
  // collection of item elements
  this.items = this._itemize( this.element.children );
};


/**
 * turn elements into Outlayer.Items to be used in layout
 * @param {Array or NodeList or HTMLElement} elems
 * @returns {Array} items - collection of new Outlayer Items
 */
proto._itemize = function( elems ) {

  var itemElems = this._filterFindItemElements( elems );
  var Item = this.constructor.Item;

  // create new Outlayer Items for collection
  var items = [];
  for ( var i=0; i < itemElems.length; i++ ) {
    var elem = itemElems[i];
    var item = new Item( elem, this );
    items.push( item );
  }

  return items;
};

/**
 * get item elements to be used in layout
 * @param {Array or NodeList or HTMLElement} elems
 * @returns {Array} items - item elements
 */
proto._filterFindItemElements = function( elems ) {
  return utils.filterFindElements( elems, this.options.itemSelector );
};

/**
 * getter method for getting item elements
 * @returns {Array} elems - collection of item elements
 */
proto.getItemElements = function() {
  return this.items.map( function( item ) {
    return item.element;
  });
};

// ----- init & layout ----- //

/**
 * lays out all items
 */
proto.layout = function() {
  this._resetLayout();
  this._manageStamps();

  // don't animate first layout
  var layoutInstant = this._getOption('layoutInstant');
  var isInstant = layoutInstant !== undefined ?
    layoutInstant : !this._isLayoutInited;
  this.layoutItems( this.items, isInstant );

  // flag for initalized
  this._isLayoutInited = true;
};

// _init is alias for layout
proto._init = proto.layout;

/**
 * logic before any new layout
 */
proto._resetLayout = function() {
  this.getSize();
};


proto.getSize = function() {
  this.size = getSize( this.element );
};

/**
 * get measurement from option, for columnWidth, rowHeight, gutter
 * if option is String -> get element from selector string, & get size of element
 * if option is Element -> get size of element
 * else use option as a number
 *
 * @param {String} measurement
 * @param {String} size - width or height
 * @private
 */
proto._getMeasurement = function( measurement, size ) {
  var option = this.options[ measurement ];
  var elem;
  if ( !option ) {
    // default to 0
    this[ measurement ] = 0;
  } else {
    // use option as an element
    if ( typeof option == 'string' ) {
      elem = this.element.querySelector( option );
    } else if ( option instanceof HTMLElement ) {
      elem = option;
    }
    // use size of element, if element
    this[ measurement ] = elem ? getSize( elem )[ size ] : option;
  }
};

/**
 * layout a collection of item elements
 * @api public
 */
proto.layoutItems = function( items, isInstant ) {
  items = this._getItemsForLayout( items );

  this._layoutItems( items, isInstant );

  this._postLayout();
};

/**
 * get the items to be laid out
 * you may want to skip over some items
 * @param {Array} items
 * @returns {Array} items
 */
proto._getItemsForLayout = function( items ) {
  return items.filter( function( item ) {
    return !item.isIgnored;
  });
};

/**
 * layout items
 * @param {Array} items
 * @param {Boolean} isInstant
 */
proto._layoutItems = function( items, isInstant ) {
  this._emitCompleteOnItems( 'layout', items );

  if ( !items || !items.length ) {
    // no items, emit event with empty array
    return;
  }

  var queue = [];

  items.forEach( function( item ) {
    // get x/y object from method
    var position = this._getItemLayoutPosition( item );
    // enqueue
    position.item = item;
    position.isInstant = isInstant || item.isLayoutInstant;
    queue.push( position );
  }, this );

  this._processLayoutQueue( queue );
};

/**
 * get item layout position
 * @param {Outlayer.Item} item
 * @returns {Object} x and y position
 */
proto._getItemLayoutPosition = function( /* item */ ) {
  return {
    x: 0,
    y: 0
  };
};

/**
 * iterate over array and position each item
 * Reason being - separating this logic prevents 'layout invalidation'
 * thx @paul_irish
 * @param {Array} queue
 */
proto._processLayoutQueue = function( queue ) {
  this.updateStagger();
  queue.forEach( function( obj, i ) {
    this._positionItem( obj.item, obj.x, obj.y, obj.isInstant, i );
  }, this );
};

// set stagger from option in milliseconds number
proto.updateStagger = function() {
  var stagger = this.options.stagger;
  if ( stagger === null || stagger === undefined ) {
    this.stagger = 0;
    return;
  }
  this.stagger = getMilliseconds( stagger );
  return this.stagger;
};

/**
 * Sets position of item in DOM
 * @param {Outlayer.Item} item
 * @param {Number} x - horizontal position
 * @param {Number} y - vertical position
 * @param {Boolean} isInstant - disables transitions
 */
proto._positionItem = function( item, x, y, isInstant, i ) {
  if ( isInstant ) {
    // if not transition, just set CSS
    item.goTo( x, y );
  } else {
    item.stagger( i * this.stagger );
    item.moveTo( x, y );
  }
};

/**
 * Any logic you want to do after each layout,
 * i.e. size the container
 */
proto._postLayout = function() {
  this.resizeContainer();
};

proto.resizeContainer = function() {
  var isResizingContainer = this._getOption('resizeContainer');
  if ( !isResizingContainer ) {
    return;
  }
  var size = this._getContainerSize();
  if ( size ) {
    this._setContainerMeasure( size.width, true );
    this._setContainerMeasure( size.height, false );
  }
};

/**
 * Sets width or height of container if returned
 * @returns {Object} size
 *   @param {Number} width
 *   @param {Number} height
 */
proto._getContainerSize = noop;

/**
 * @param {Number} measure - size of width or height
 * @param {Boolean} isWidth
 */
proto._setContainerMeasure = function( measure, isWidth ) {
  if ( measure === undefined ) {
    return;
  }

  var elemSize = this.size;
  // add padding and border width if border box
  if ( elemSize.isBorderBox ) {
    measure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight +
      elemSize.borderLeftWidth + elemSize.borderRightWidth :
      elemSize.paddingBottom + elemSize.paddingTop +
      elemSize.borderTopWidth + elemSize.borderBottomWidth;
  }

  measure = Math.max( measure, 0 );
  this.element.style[ isWidth ? 'width' : 'height' ] = measure + 'px';
};

/**
 * emit eventComplete on a collection of items events
 * @param {String} eventName
 * @param {Array} items - Outlayer.Items
 */
proto._emitCompleteOnItems = function( eventName, items ) {
  var _this = this;
  function onComplete() {
    _this.dispatchEvent( eventName + 'Complete', null, [ items ] );
  }

  var count = items.length;
  if ( !items || !count ) {
    onComplete();
    return;
  }

  var doneCount = 0;
  function tick() {
    doneCount++;
    if ( doneCount == count ) {
      onComplete();
    }
  }

  // bind callback
  items.forEach( function( item ) {
    item.once( eventName, tick );
  });
};

/**
 * emits events via EvEmitter and jQuery events
 * @param {String} type - name of event
 * @param {Event} event - original event
 * @param {Array} args - extra arguments
 */
proto.dispatchEvent = function( type, event, args ) {
  // add original event to arguments
  var emitArgs = event ? [ event ].concat( args ) : args;
  this.emitEvent( type, emitArgs );

  if ( jQuery ) {
    // set this.$element
    this.$element = this.$element || jQuery( this.element );
    if ( event ) {
      // create jQuery event
      var $event = jQuery.Event( event );
      $event.type = type;
      this.$element.trigger( $event, args );
    } else {
      // just trigger with type if no event available
      this.$element.trigger( type, args );
    }
  }
};

// -------------------------- ignore & stamps -------------------------- //


/**
 * keep item in collection, but do not lay it out
 * ignored items do not get skipped in layout
 * @param {Element} elem
 */
proto.ignore = function( elem ) {
  var item = this.getItem( elem );
  if ( item ) {
    item.isIgnored = true;
  }
};

/**
 * return item to layout collection
 * @param {Element} elem
 */
proto.unignore = function( elem ) {
  var item = this.getItem( elem );
  if ( item ) {
    delete item.isIgnored;
  }
};

/**
 * adds elements to stamps
 * @param {NodeList, Array, Element, or String} elems
 */
proto.stamp = function( elems ) {
  elems = this._find( elems );
  if ( !elems ) {
    return;
  }

  this.stamps = this.stamps.concat( elems );
  // ignore
  elems.forEach( this.ignore, this );
};

/**
 * removes elements to stamps
 * @param {NodeList, Array, or Element} elems
 */
proto.unstamp = function( elems ) {
  elems = this._find( elems );
  if ( !elems ){
    return;
  }

  elems.forEach( function( elem ) {
    // filter out removed stamp elements
    utils.removeFrom( this.stamps, elem );
    this.unignore( elem );
  }, this );
};

/**
 * finds child elements
 * @param {NodeList, Array, Element, or String} elems
 * @returns {Array} elems
 */
proto._find = function( elems ) {
  if ( !elems ) {
    return;
  }
  // if string, use argument as selector string
  if ( typeof elems == 'string' ) {
    elems = this.element.querySelectorAll( elems );
  }
  elems = utils.makeArray( elems );
  return elems;
};

proto._manageStamps = function() {
  if ( !this.stamps || !this.stamps.length ) {
    return;
  }

  this._getBoundingRect();

  this.stamps.forEach( this._manageStamp, this );
};

// update boundingLeft / Top
proto._getBoundingRect = function() {
  // get bounding rect for container element
  var boundingRect = this.element.getBoundingClientRect();
  var size = this.size;
  this._boundingRect = {
    left: boundingRect.left + size.paddingLeft + size.borderLeftWidth,
    top: boundingRect.top + size.paddingTop + size.borderTopWidth,
    right: boundingRect.right - ( size.paddingRight + size.borderRightWidth ),
    bottom: boundingRect.bottom - ( size.paddingBottom + size.borderBottomWidth )
  };
};

/**
 * @param {Element} stamp
**/
proto._manageStamp = noop;

/**
 * get x/y position of element relative to container element
 * @param {Element} elem
 * @returns {Object} offset - has left, top, right, bottom
 */
proto._getElementOffset = function( elem ) {
  var boundingRect = elem.getBoundingClientRect();
  var thisRect = this._boundingRect;
  var size = getSize( elem );
  var offset = {
    left: boundingRect.left - thisRect.left - size.marginLeft,
    top: boundingRect.top - thisRect.top - size.marginTop,
    right: thisRect.right - boundingRect.right - size.marginRight,
    bottom: thisRect.bottom - boundingRect.bottom - size.marginBottom
  };
  return offset;
};

// -------------------------- resize -------------------------- //

// enable event handlers for listeners
// i.e. resize -> onresize
proto.handleEvent = utils.handleEvent;

/**
 * Bind layout to window resizing
 */
proto.bindResize = function() {
  window.addEventListener( 'resize', this );
  this.isResizeBound = true;
};

/**
 * Unbind layout to window resizing
 */
proto.unbindResize = function() {
  window.removeEventListener( 'resize', this );
  this.isResizeBound = false;
};

proto.onresize = function() {
  this.resize();
};

utils.debounceMethod( Outlayer, 'onresize', 100 );

proto.resize = function() {
  // don't trigger if size did not change
  // or if resize was unbound. See #9
  if ( !this.isResizeBound || !this.needsResizeLayout() ) {
    return;
  }

  this.layout();
};

/**
 * check if layout is needed post layout
 * @returns Boolean
 */
proto.needsResizeLayout = function() {
  var size = getSize( this.element );
  // check that this.size and size are there
  // IE8 triggers resize on body size change, so they might not be
  var hasSizes = this.size && size;
  return hasSizes && size.innerWidth !== this.size.innerWidth;
};

// -------------------------- methods -------------------------- //

/**
 * add items to Outlayer instance
 * @param {Array or NodeList or Element} elems
 * @returns {Array} items - Outlayer.Items
**/
proto.addItems = function( elems ) {
  var items = this._itemize( elems );
  // add items to collection
  if ( items.length ) {
    this.items = this.items.concat( items );
  }
  return items;
};

/**
 * Layout newly-appended item elements
 * @param {Array or NodeList or Element} elems
 */
proto.appended = function( elems ) {
  var items = this.addItems( elems );
  if ( !items.length ) {
    return;
  }
  // layout and reveal just the new items
  this.layoutItems( items, true );
  this.reveal( items );
};

/**
 * Layout prepended elements
 * @param {Array or NodeList or Element} elems
 */
proto.prepended = function( elems ) {
  var items = this._itemize( elems );
  if ( !items.length ) {
    return;
  }
  // add items to beginning of collection
  var previousItems = this.items.slice(0);
  this.items = items.concat( previousItems );
  // start new layout
  this._resetLayout();
  this._manageStamps();
  // layout new stuff without transition
  this.layoutItems( items, true );
  this.reveal( items );
  // layout previous items
  this.layoutItems( previousItems );
};

/**
 * reveal a collection of items
 * @param {Array of Outlayer.Items} items
 */
proto.reveal = function( items ) {
  this._emitCompleteOnItems( 'reveal', items );
  if ( !items || !items.length ) {
    return;
  }
  var stagger = this.updateStagger();
  items.forEach( function( item, i ) {
    item.stagger( i * stagger );
    item.reveal();
  });
};

/**
 * hide a collection of items
 * @param {Array of Outlayer.Items} items
 */
proto.hide = function( items ) {
  this._emitCompleteOnItems( 'hide', items );
  if ( !items || !items.length ) {
    return;
  }
  var stagger = this.updateStagger();
  items.forEach( function( item, i ) {
    item.stagger( i * stagger );
    item.hide();
  });
};

/**
 * reveal item elements
 * @param {Array}, {Element}, {NodeList} items
 */
proto.revealItemElements = function( elems ) {
  var items = this.getItems( elems );
  this.reveal( items );
};

/**
 * hide item elements
 * @param {Array}, {Element}, {NodeList} items
 */
proto.hideItemElements = function( elems ) {
  var items = this.getItems( elems );
  this.hide( items );
};

/**
 * get Outlayer.Item, given an Element
 * @param {Element} elem
 * @param {Function} callback
 * @returns {Outlayer.Item} item
 */
proto.getItem = function( elem ) {
  // loop through items to get the one that matches
  for ( var i=0; i < this.items.length; i++ ) {
    var item = this.items[i];
    if ( item.element == elem ) {
      // return item
      return item;
    }
  }
};

/**
 * get collection of Outlayer.Items, given Elements
 * @param {Array} elems
 * @returns {Array} items - Outlayer.Items
 */
proto.getItems = function( elems ) {
  elems = utils.makeArray( elems );
  var items = [];
  elems.forEach( function( elem ) {
    var item = this.getItem( elem );
    if ( item ) {
      items.push( item );
    }
  }, this );

  return items;
};

/**
 * remove element(s) from instance and DOM
 * @param {Array or NodeList or Element} elems
 */
proto.remove = function( elems ) {
  var removeItems = this.getItems( elems );

  this._emitCompleteOnItems( 'remove', removeItems );

  // bail if no items to remove
  if ( !removeItems || !removeItems.length ) {
    return;
  }

  removeItems.forEach( function( item ) {
    item.remove();
    // remove item from collection
    utils.removeFrom( this.items, item );
  }, this );
};

// ----- destroy ----- //

// remove and disable Outlayer instance
proto.destroy = function() {
  // clean up dynamic styles
  var style = this.element.style;
  style.height = '';
  style.position = '';
  style.width = '';
  // destroy items
  this.items.forEach( function( item ) {
    item.destroy();
  });

  this.unbindResize();

  var id = this.element.outlayerGUID;
  delete instances[ id ]; // remove reference to instance by id
  delete this.element.outlayerGUID;
  // remove data for jQuery
  if ( jQuery ) {
    jQuery.removeData( this.element, this.constructor.namespace );
  }

};

// -------------------------- data -------------------------- //

/**
 * get Outlayer instance from element
 * @param {Element} elem
 * @returns {Outlayer}
 */
Outlayer.data = function( elem ) {
  elem = utils.getQueryElement( elem );
  var id = elem && elem.outlayerGUID;
  return id && instances[ id ];
};


// -------------------------- create Outlayer class -------------------------- //

/**
 * create a layout class
 * @param {String} namespace
 */
Outlayer.create = function( namespace, options ) {
  // sub-class Outlayer
  var Layout = subclass( Outlayer );
  // apply new options and compatOptions
  Layout.defaults = utils.extend( {}, Outlayer.defaults );
  utils.extend( Layout.defaults, options );
  Layout.compatOptions = utils.extend( {}, Outlayer.compatOptions  );

  Layout.namespace = namespace;

  Layout.data = Outlayer.data;

  // sub-class Item
  Layout.Item = subclass( Item );

  // -------------------------- declarative -------------------------- //

  utils.htmlInit( Layout, namespace );

  // -------------------------- jQuery bridge -------------------------- //

  // make into jQuery plugin
  if ( jQuery && jQuery.bridget ) {
    jQuery.bridget( namespace, Layout );
  }

  return Layout;
};

function subclass( Parent ) {
  function SubClass() {
    Parent.apply( this, arguments );
  }

  SubClass.prototype = Object.create( Parent.prototype );
  SubClass.prototype.constructor = SubClass;

  return SubClass;
}

// ----- helpers ----- //

// how many milliseconds are in each unit
var msUnits = {
  ms: 1,
  s: 1000
};

// munge time-like parameter into millisecond number
// '0.4s' -> 40
function getMilliseconds( time ) {
  if ( typeof time == 'number' ) {
    return time;
  }
  var matches = time.match( /(^\d*\.?\d*)(\w*)/ );
  var num = matches && matches[1];
  var unit = matches && matches[2];
  if ( !num.length ) {
    return 0;
  }
  num = parseFloat( num );
  var mult = msUnits[ unit ] || 1;
  return num * mult;
}

// ----- fin ----- //

// back in global
Outlayer.Item = Item;

return Outlayer;

}));


/***/ }),

/***/ "./node_modules/packery/js/item.js":
/*!*****************************************!*\
  !*** ./node_modules/packery/js/item.js ***!
  \*****************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Packery Item Element
**/

( function( window, factory ) {
  // universal module definition
  /* jshint strict: false */ /* globals define, module, require */
  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
        __webpack_require__(/*! outlayer/outlayer */ "./node_modules/outlayer/outlayer.js"),
        __webpack_require__(/*! ./rect */ "./node_modules/packery/js/rect.js")
      ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}

}( window, function factory( Outlayer, Rect ) {
'use strict';

// -------------------------- Item -------------------------- //

var docElemStyle = document.documentElement.style;

var transformProperty = typeof docElemStyle.transform == 'string' ?
  'transform' : 'WebkitTransform';

// sub-class Item
var Item = function PackeryItem() {
  Outlayer.Item.apply( this, arguments );
};

var proto = Item.prototype = Object.create( Outlayer.Item.prototype );

var __create = proto._create;
proto._create = function() {
  // call default _create logic
  __create.call( this );
  this.rect = new Rect();
};

var _moveTo = proto.moveTo;
proto.moveTo = function( x, y ) {
  // don't shift 1px while dragging
  var dx = Math.abs( this.position.x - x );
  var dy = Math.abs( this.position.y - y );

  var canHackGoTo = this.layout.dragItemCount && !this.isPlacing &&
    !this.isTransitioning && dx < 1 && dy < 1;
  if ( canHackGoTo ) {
    this.goTo( x, y );
    return;
  }
  _moveTo.apply( this, arguments );
};

// -------------------------- placing -------------------------- //

proto.enablePlacing = function() {
  this.removeTransitionStyles();
  // remove transform property from transition
  if ( this.isTransitioning && transformProperty ) {
    this.element.style[ transformProperty ] = 'none';
  }
  this.isTransitioning = false;
  this.getSize();
  this.layout._setRectSize( this.element, this.rect );
  this.isPlacing = true;
};

proto.disablePlacing = function() {
  this.isPlacing = false;
};

// -----  ----- //

// remove element from DOM
proto.removeElem = function() {
  var parent = this.element.parentNode;
  if ( parent ) {
    parent.removeChild( this.element );
  }
  // add space back to packer
  this.layout.packer.addSpace( this.rect );
  this.emitEvent( 'remove', [ this ] );
};

// ----- dropPlaceholder ----- //

proto.showDropPlaceholder = function() {
  var dropPlaceholder = this.dropPlaceholder;
  if ( !dropPlaceholder ) {
    // create dropPlaceholder
    dropPlaceholder = this.dropPlaceholder = document.createElement('div');
    dropPlaceholder.className = 'packery-drop-placeholder';
    dropPlaceholder.style.position = 'absolute';
  }

  dropPlaceholder.style.width = this.size.width + 'px';
  dropPlaceholder.style.height = this.size.height + 'px';
  this.positionDropPlaceholder();
  this.layout.element.appendChild( dropPlaceholder );
};

proto.positionDropPlaceholder = function() {
  this.dropPlaceholder.style[ transformProperty ] = 'translate(' +
    this.rect.x + 'px, ' + this.rect.y + 'px)';
};

proto.hideDropPlaceholder = function() {
  // only remove once, #333
  var parent = this.dropPlaceholder.parentNode;
  if ( parent ) {
    parent.removeChild( this.dropPlaceholder );
  }
};

// -----  ----- //

return Item;

}));


/***/ }),

/***/ "./node_modules/packery/js/packer.js":
/*!*******************************************!*\
  !*** ./node_modules/packery/js/packer.js ***!
  \*******************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Packer
 * bin-packing algorithm
 */

( function( window, factory ) {
  // universal module definition
  /* jshint strict: false */ /* globals define, module, require */
  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(/*! ./rect */ "./node_modules/packery/js/rect.js") ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var Packery; }

}( window, function factory( Rect ) {
'use strict';

// -------------------------- Packer -------------------------- //

/**
 * @param {Number} width
 * @param {Number} height
 * @param {String} sortDirection
 *   topLeft for vertical, leftTop for horizontal
 */
function Packer( width, height, sortDirection ) {
  this.width = width || 0;
  this.height = height || 0;
  this.sortDirection = sortDirection || 'downwardLeftToRight';

  this.reset();
}

var proto = Packer.prototype;

proto.reset = function() {
  this.spaces = [];

  var initialSpace = new Rect({
    x: 0,
    y: 0,
    width: this.width,
    height: this.height
  });

  this.spaces.push( initialSpace );
  // set sorter
  this.sorter = sorters[ this.sortDirection ] || sorters.downwardLeftToRight;
};

// change x and y of rect to fit with in Packer's available spaces
proto.pack = function( rect ) {
  for ( var i=0; i < this.spaces.length; i++ ) {
    var space = this.spaces[i];
    if ( space.canFit( rect ) ) {
      this.placeInSpace( rect, space );
      break;
    }
  }
};

proto.columnPack = function( rect ) {
  for ( var i=0; i < this.spaces.length; i++ ) {
    var space = this.spaces[i];
    var canFitInSpaceColumn = space.x <= rect.x &&
      space.x + space.width >= rect.x + rect.width &&
      space.height >= rect.height - 0.01; // fudge number for rounding error
    if ( canFitInSpaceColumn ) {
      rect.y = space.y;
      this.placed( rect );
      break;
    }
  }
};

proto.rowPack = function( rect ) {
  for ( var i=0; i < this.spaces.length; i++ ) {
    var space = this.spaces[i];
    var canFitInSpaceRow = space.y <= rect.y &&
      space.y + space.height >= rect.y + rect.height &&
      space.width >= rect.width - 0.01; // fudge number for rounding error
    if ( canFitInSpaceRow ) {
      rect.x = space.x;
      this.placed( rect );
      break;
    }
  }
};

proto.placeInSpace = function( rect, space ) {
  // place rect in space
  rect.x = space.x;
  rect.y = space.y;

  this.placed( rect );
};

// update spaces with placed rect
proto.placed = function( rect ) {
  // update spaces
  var revisedSpaces = [];
  for ( var i=0; i < this.spaces.length; i++ ) {
    var space = this.spaces[i];
    var newSpaces = space.getMaximalFreeRects( rect );
    // add either the original space or the new spaces to the revised spaces
    if ( newSpaces ) {
      revisedSpaces.push.apply( revisedSpaces, newSpaces );
    } else {
      revisedSpaces.push( space );
    }
  }

  this.spaces = revisedSpaces;

  this.mergeSortSpaces();
};

proto.mergeSortSpaces = function() {
  // remove redundant spaces
  Packer.mergeRects( this.spaces );
  this.spaces.sort( this.sorter );
};

// add a space back
proto.addSpace = function( rect ) {
  this.spaces.push( rect );
  this.mergeSortSpaces();
};

// -------------------------- utility functions -------------------------- //

/**
 * Remove redundant rectangle from array of rectangles
 * @param {Array} rects: an array of Rects
 * @returns {Array} rects: an array of Rects
**/
Packer.mergeRects = function( rects ) {
  var i = 0;
  var rect = rects[i];

  rectLoop:
  while ( rect ) {
    var j = 0;
    var compareRect = rects[ i + j ];

    while ( compareRect ) {
      if  ( compareRect == rect ) {
        j++; // next
      } else if ( compareRect.contains( rect ) ) {
        // remove rect
        rects.splice( i, 1 );
        rect = rects[i]; // set next rect
        continue rectLoop; // bail on compareLoop
      } else if ( rect.contains( compareRect ) ) {
        // remove compareRect
        rects.splice( i + j, 1 );
      } else {
        j++;
      }
      compareRect = rects[ i + j ]; // set next compareRect
    }
    i++;
    rect = rects[i];
  }

  return rects;
};


// -------------------------- sorters -------------------------- //

// functions for sorting rects in order
var sorters = {
  // top down, then left to right
  downwardLeftToRight: function( a, b ) {
    return a.y - b.y || a.x - b.x;
  },
  // left to right, then top down
  rightwardTopToBottom: function( a, b ) {
    return a.x - b.x || a.y - b.y;
  }
};


// --------------------------  -------------------------- //

return Packer;

}));


/***/ }),

/***/ "./node_modules/packery/js/packery.js":
/*!********************************************!*\
  !*** ./node_modules/packery/js/packery.js ***!
  \********************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * Packery v2.1.2
 * Gapless, draggable grid layouts
 *
 * Licensed GPLv3 for open source use
 * or Packery Commercial License for commercial use
 *
 * http://packery.metafizzy.co
 * Copyright 2013-2018 Metafizzy
 */

( function( window, factory ) {
  // universal module definition
  /* jshint strict: false */ /* globals define, module, require */
  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
        __webpack_require__(/*! get-size/get-size */ "./node_modules/get-size/get-size.js"),
        __webpack_require__(/*! outlayer/outlayer */ "./node_modules/outlayer/outlayer.js"),
        __webpack_require__(/*! ./rect */ "./node_modules/packery/js/rect.js"),
        __webpack_require__(/*! ./packer */ "./node_modules/packery/js/packer.js"),
        __webpack_require__(/*! ./item */ "./node_modules/packery/js/item.js")
      ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}

}( window, function factory( getSize, Outlayer, Rect, Packer, Item ) {
'use strict';

// ----- Rect ----- //

// allow for pixel rounding errors IE8-IE11 & Firefox; #227
Rect.prototype.canFit = function( rect ) {
  return this.width >= rect.width - 1 && this.height >= rect.height - 1;
};

// -------------------------- Packery -------------------------- //

// create an Outlayer layout class
var Packery = Outlayer.create('packery');
Packery.Item = Item;

var proto = Packery.prototype;

proto._create = function() {
  // call super
  Outlayer.prototype._create.call( this );

  // initial properties
  this.packer = new Packer();
  // packer for drop targets
  this.shiftPacker = new Packer();
  this.isEnabled = true;

  this.dragItemCount = 0;

  // create drag handlers
  var _this = this;
  this.handleDraggabilly = {
    dragStart: function() {
      _this.itemDragStart( this.element );
    },
    dragMove: function() {
      _this.itemDragMove( this.element, this.position.x, this.position.y );
    },
    dragEnd: function() {
      _this.itemDragEnd( this.element );
    }
  };

  this.handleUIDraggable = {
    start: function handleUIDraggableStart( event, ui ) {
      // HTML5 may trigger dragstart, dismiss HTML5 dragging
      if ( !ui ) {
        return;
      }
      _this.itemDragStart( event.currentTarget );
    },
    drag: function handleUIDraggableDrag( event, ui ) {
      if ( !ui ) {
        return;
      }
      _this.itemDragMove( event.currentTarget, ui.position.left, ui.position.top );
    },
    stop: function handleUIDraggableStop( event, ui ) {
      if ( !ui ) {
        return;
      }
      _this.itemDragEnd( event.currentTarget );
    }
  };

};


// ----- init & layout ----- //

/**
 * logic before any new layout
 */
proto._resetLayout = function() {
  this.getSize();

  this._getMeasurements();

  // reset packer
  var width, height, sortDirection;
  // packer settings, if horizontal or vertical
  if ( this._getOption('horizontal') ) {
    width = Infinity;
    height = this.size.innerHeight + this.gutter;
    sortDirection = 'rightwardTopToBottom';
  } else {
    width = this.size.innerWidth + this.gutter;
    height = Infinity;
    sortDirection = 'downwardLeftToRight';
  }

  this.packer.width = this.shiftPacker.width = width;
  this.packer.height = this.shiftPacker.height = height;
  this.packer.sortDirection = this.shiftPacker.sortDirection = sortDirection;

  this.packer.reset();

  // layout
  this.maxY = 0;
  this.maxX = 0;
};

/**
 * update columnWidth, rowHeight, & gutter
 * @private
 */
proto._getMeasurements = function() {
  this._getMeasurement( 'columnWidth', 'width' );
  this._getMeasurement( 'rowHeight', 'height' );
  this._getMeasurement( 'gutter', 'width' );
};

proto._getItemLayoutPosition = function( item ) {
  this._setRectSize( item.element, item.rect );
  if ( this.isShifting || this.dragItemCount > 0 ) {
    var packMethod = this._getPackMethod();
    this.packer[ packMethod ]( item.rect );
  } else {
    this.packer.pack( item.rect );
  }

  this._setMaxXY( item.rect );
  return item.rect;
};

proto.shiftLayout = function() {
  this.isShifting = true;
  this.layout();
  delete this.isShifting;
};

proto._getPackMethod = function() {
  return this._getOption('horizontal') ? 'rowPack' : 'columnPack';
};


/**
 * set max X and Y value, for size of container
 * @param {Packery.Rect} rect
 * @private
 */
proto._setMaxXY = function( rect ) {
  this.maxX = Math.max( rect.x + rect.width, this.maxX );
  this.maxY = Math.max( rect.y + rect.height, this.maxY );
};

/**
 * set the width and height of a rect, applying columnWidth and rowHeight
 * @param {Element} elem
 * @param {Packery.Rect} rect
 */
proto._setRectSize = function( elem, rect ) {
  var size = getSize( elem );
  var w = size.outerWidth;
  var h = size.outerHeight;
  // size for columnWidth and rowHeight, if available
  // only check if size is non-zero, #177
  if ( w || h ) {
    w = this._applyGridGutter( w, this.columnWidth );
    h = this._applyGridGutter( h, this.rowHeight );
  }
  // rect must fit in packer
  rect.width = Math.min( w, this.packer.width );
  rect.height = Math.min( h, this.packer.height );
};

/**
 * fits item to columnWidth/rowHeight and adds gutter
 * @param {Number} measurement - item width or height
 * @param {Number} gridSize - columnWidth or rowHeight
 * @returns measurement
 */
proto._applyGridGutter = function( measurement, gridSize ) {
  // just add gutter if no gridSize
  if ( !gridSize ) {
    return measurement + this.gutter;
  }
  gridSize += this.gutter;
  // fit item to columnWidth/rowHeight
  var remainder = measurement % gridSize;
  var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';
  measurement = Math[ mathMethod ]( measurement / gridSize ) * gridSize;
  return measurement;
};

proto._getContainerSize = function() {
  if ( this._getOption('horizontal') ) {
    return {
      width: this.maxX - this.gutter
    };
  } else {
    return {
      height: this.maxY - this.gutter
    };
  }
};


// -------------------------- stamp -------------------------- //

/**
 * makes space for element
 * @param {Element} elem
 */
proto._manageStamp = function( elem ) {

  var item = this.getItem( elem );
  var rect;
  if ( item && item.isPlacing ) {
    rect = item.rect;
  } else {
    var offset = this._getElementOffset( elem );
    rect = new Rect({
      x: this._getOption('originLeft') ? offset.left : offset.right,
      y: this._getOption('originTop') ? offset.top : offset.bottom
    });
  }

  this._setRectSize( elem, rect );
  // save its space in the packer
  this.packer.placed( rect );
  this._setMaxXY( rect );
};

// -------------------------- methods -------------------------- //

function verticalSorter( a, b ) {
  return a.position.y - b.position.y || a.position.x - b.position.x;
}

function horizontalSorter( a, b ) {
  return a.position.x - b.position.x || a.position.y - b.position.y;
}

proto.sortItemsByPosition = function() {
  var sorter = this._getOption('horizontal') ? horizontalSorter : verticalSorter;
  this.items.sort( sorter );
};

/**
 * Fit item element in its current position
 * Packery will position elements around it
 * useful for expanding elements
 *
 * @param {Element} elem
 * @param {Number} x - horizontal destination position, optional
 * @param {Number} y - vertical destination position, optional
 */
proto.fit = function( elem, x, y ) {
  var item = this.getItem( elem );
  if ( !item ) {
    return;
  }

  // stamp item to get it out of layout
  this.stamp( item.element );
  // set placing flag
  item.enablePlacing();
  this.updateShiftTargets( item );
  // fall back to current position for fitting
  x = x === undefined ? item.rect.x: x;
  y = y === undefined ? item.rect.y: y;
  // position it best at its destination
  this.shift( item, x, y );
  this._bindFitEvents( item );
  item.moveTo( item.rect.x, item.rect.y );
  // layout everything else
  this.shiftLayout();
  // return back to regularly scheduled programming
  this.unstamp( item.element );
  this.sortItemsByPosition();
  item.disablePlacing();
};

/**
 * emit event when item is fit and other items are laid out
 * @param {Packery.Item} item
 * @private
 */
proto._bindFitEvents = function( item ) {
  var _this = this;
  var ticks = 0;
  function onLayout() {
    ticks++;
    if ( ticks != 2 ) {
      return;
    }
    _this.dispatchEvent( 'fitComplete', null, [ item ] );
  }
  // when item is laid out
  item.once( 'layout', onLayout );
  // when all items are laid out
  this.once( 'layoutComplete', onLayout );
};

// -------------------------- resize -------------------------- //

// debounced, layout on resize
proto.resize = function() {
  // don't trigger if size did not change
  // or if resize was unbound. See #285, outlayer#9
  if ( !this.isResizeBound || !this.needsResizeLayout() ) {
    return;
  }

  if ( this.options.shiftPercentResize ) {
    this.resizeShiftPercentLayout();
  } else {
    this.layout();
  }
};

/**
 * check if layout is needed post layout
 * @returns Boolean
 */
proto.needsResizeLayout = function() {
  var size = getSize( this.element );
  var innerSize = this._getOption('horizontal') ? 'innerHeight' : 'innerWidth';
  return size[ innerSize ] != this.size[ innerSize ];
};

proto.resizeShiftPercentLayout = function() {
  var items = this._getItemsForLayout( this.items );

  var isHorizontal = this._getOption('horizontal');
  var coord = isHorizontal ? 'y' : 'x';
  var measure = isHorizontal ? 'height' : 'width';
  var segmentName = isHorizontal ? 'rowHeight' : 'columnWidth';
  var innerSize = isHorizontal ? 'innerHeight' : 'innerWidth';

  // proportional re-align items
  var previousSegment = this[ segmentName ];
  previousSegment = previousSegment && previousSegment + this.gutter;

  if ( previousSegment ) {
    this._getMeasurements();
    var currentSegment = this[ segmentName ] + this.gutter;
    items.forEach( function( item ) {
      var seg = Math.round( item.rect[ coord ] / previousSegment );
      item.rect[ coord ] = seg * currentSegment;
    });
  } else {
    var currentSize = getSize( this.element )[ innerSize ] + this.gutter;
    var previousSize = this.packer[ measure ];
    items.forEach( function( item ) {
      item.rect[ coord ] = ( item.rect[ coord ] / previousSize ) * currentSize;
    });
  }

  this.shiftLayout();
};

// -------------------------- drag -------------------------- //

/**
 * handle an item drag start event
 * @param {Element} elem
 */
proto.itemDragStart = function( elem ) {
  if ( !this.isEnabled ) {
    return;
  }
  this.stamp( elem );
  // this.ignore( elem );
  var item = this.getItem( elem );
  if ( !item ) {
    return;
  }

  item.enablePlacing();
  item.showDropPlaceholder();
  this.dragItemCount++;
  this.updateShiftTargets( item );
};

proto.updateShiftTargets = function( dropItem ) {
  this.shiftPacker.reset();

  // pack stamps
  this._getBoundingRect();
  var isOriginLeft = this._getOption('originLeft');
  var isOriginTop = this._getOption('originTop');
  this.stamps.forEach( function( stamp ) {
    // ignore dragged item
    var item = this.getItem( stamp );
    if ( item && item.isPlacing ) {
      return;
    }
    var offset = this._getElementOffset( stamp );
    var rect = new Rect({
      x: isOriginLeft ? offset.left : offset.right,
      y: isOriginTop ? offset.top : offset.bottom
    });
    this._setRectSize( stamp, rect );
    // save its space in the packer
    this.shiftPacker.placed( rect );
  }, this );

  // reset shiftTargets
  var isHorizontal = this._getOption('horizontal');
  var segmentName = isHorizontal ? 'rowHeight' : 'columnWidth';
  var measure = isHorizontal ? 'height' : 'width';

  this.shiftTargetKeys = [];
  this.shiftTargets = [];
  var boundsSize;
  var segment = this[ segmentName ];
  segment = segment && segment + this.gutter;

  if ( segment ) {
    var segmentSpan = Math.ceil( dropItem.rect[ measure ] / segment );
    var segs = Math.floor( ( this.shiftPacker[ measure ] + this.gutter ) / segment );
    boundsSize = ( segs - segmentSpan ) * segment;
    // add targets on top
    for ( var i=0; i < segs; i++ ) {
      var initialX = isHorizontal ? 0 : i * segment;
      var initialY = isHorizontal ? i * segment : 0;
      this._addShiftTarget( initialX, initialY, boundsSize );
    }
  } else {
    boundsSize = ( this.shiftPacker[ measure ] + this.gutter ) - dropItem.rect[ measure ];
    this._addShiftTarget( 0, 0, boundsSize );
  }

  // pack each item to measure where shiftTargets are
  var items = this._getItemsForLayout( this.items );
  var packMethod = this._getPackMethod();
  items.forEach( function( item ) {
    var rect = item.rect;
    this._setRectSize( item.element, rect );
    this.shiftPacker[ packMethod ]( rect );

    // add top left corner
    this._addShiftTarget( rect.x, rect.y, boundsSize );
    // add bottom left / top right corner
    var cornerX = isHorizontal ? rect.x + rect.width : rect.x;
    var cornerY = isHorizontal ? rect.y : rect.y + rect.height;
    this._addShiftTarget( cornerX, cornerY, boundsSize );

    if ( segment ) {
      // add targets for each column on bottom / row on right
      var segSpan = Math.round( rect[ measure ] / segment );
      for ( var i=1; i < segSpan; i++ ) {
        var segX = isHorizontal ? cornerX : rect.x + segment * i;
        var segY = isHorizontal ? rect.y + segment * i : cornerY;
        this._addShiftTarget( segX, segY, boundsSize );
      }
    }
  }, this );

};

proto._addShiftTarget = function( x, y, boundsSize ) {
  var checkCoord = this._getOption('horizontal') ? y : x;
  if ( checkCoord !== 0 && checkCoord > boundsSize ) {
    return;
  }
  // create string for a key, easier to keep track of what targets
  var key = x + ',' + y;
  var hasKey = this.shiftTargetKeys.indexOf( key ) != -1;
  if ( hasKey ) {
    return;
  }
  this.shiftTargetKeys.push( key );
  this.shiftTargets.push({ x: x, y: y });
};

// -------------------------- drop -------------------------- //

proto.shift = function( item, x, y ) {
  var shiftPosition;
  var minDistance = Infinity;
  var position = { x: x, y: y };
  this.shiftTargets.forEach( function( target ) {
    var distance = getDistance( target, position );
    if ( distance < minDistance ) {
      shiftPosition = target;
      minDistance = distance;
    }
  });
  item.rect.x = shiftPosition.x;
  item.rect.y = shiftPosition.y;
};

function getDistance( a, b ) {
  var dx = b.x - a.x;
  var dy = b.y - a.y;
  return Math.sqrt( dx * dx + dy * dy );
}

// -------------------------- drag move -------------------------- //

var DRAG_THROTTLE_TIME = 120;

/**
 * handle an item drag move event
 * @param {Element} elem
 * @param {Number} x - horizontal change in position
 * @param {Number} y - vertical change in position
 */
proto.itemDragMove = function( elem, x, y ) {
  var item = this.isEnabled && this.getItem( elem );
  if ( !item ) {
    return;
  }

  x -= this.size.paddingLeft;
  y -= this.size.paddingTop;

  var _this = this;
  function onDrag() {
    _this.shift( item, x, y );
    item.positionDropPlaceholder();
    _this.layout();
  }

  // throttle
  var now = new Date();
  var isThrottled = this._itemDragTime && now - this._itemDragTime < DRAG_THROTTLE_TIME;
  if ( isThrottled ) {
    clearTimeout( this.dragTimeout );
    this.dragTimeout = setTimeout( onDrag, DRAG_THROTTLE_TIME );
  } else {
    onDrag();
    this._itemDragTime = now;
  }
};

// -------------------------- drag end -------------------------- //

/**
 * handle an item drag end event
 * @param {Element} elem
 */
proto.itemDragEnd = function( elem ) {
  var item = this.isEnabled && this.getItem( elem );
  if ( !item ) {
    return;
  }

  clearTimeout( this.dragTimeout );
  item.element.classList.add('is-positioning-post-drag');

  var completeCount = 0;
  var _this = this;
  function onDragEndLayoutComplete() {
    completeCount++;
    if ( completeCount != 2 ) {
      return;
    }
    // reset drag item
    item.element.classList.remove('is-positioning-post-drag');
    item.hideDropPlaceholder();
    _this.dispatchEvent( 'dragItemPositioned', null, [ item ] );
  }

  item.once( 'layout', onDragEndLayoutComplete );
  this.once( 'layoutComplete', onDragEndLayoutComplete );
  item.moveTo( item.rect.x, item.rect.y );
  this.layout();
  this.dragItemCount = Math.max( 0, this.dragItemCount - 1 );
  this.sortItemsByPosition();
  item.disablePlacing();
  this.unstamp( item.element );
};

/**
 * binds Draggabilly events
 * @param {Draggabilly} draggie
 */
proto.bindDraggabillyEvents = function( draggie ) {
  this._bindDraggabillyEvents( draggie, 'on' );
};

proto.unbindDraggabillyEvents = function( draggie ) {
  this._bindDraggabillyEvents( draggie, 'off' );
};

proto._bindDraggabillyEvents = function( draggie, method ) {
  var handlers = this.handleDraggabilly;
  draggie[ method ]( 'dragStart', handlers.dragStart );
  draggie[ method ]( 'dragMove', handlers.dragMove );
  draggie[ method ]( 'dragEnd', handlers.dragEnd );
};

/**
 * binds jQuery UI Draggable events
 * @param {jQuery} $elems
 */
proto.bindUIDraggableEvents = function( $elems ) {
  this._bindUIDraggableEvents( $elems, 'on' );
};

proto.unbindUIDraggableEvents = function( $elems ) {
  this._bindUIDraggableEvents( $elems, 'off' );
};

proto._bindUIDraggableEvents = function( $elems, method ) {
  var handlers = this.handleUIDraggable;
  $elems
    [ method ]( 'dragstart', handlers.start )
    [ method ]( 'drag', handlers.drag )
    [ method ]( 'dragstop', handlers.stop );
};

// ----- destroy ----- //

var _destroy = proto.destroy;
proto.destroy = function() {
  _destroy.apply( this, arguments );
  // disable flag; prevent drag events from triggering. #72
  this.isEnabled = false;
};

// -----  ----- //

Packery.Rect = Rect;
Packery.Packer = Packer;

return Packery;

}));


/***/ }),

/***/ "./node_modules/packery/js/rect.js":
/*!*****************************************!*\
  !*** ./node_modules/packery/js/rect.js ***!
  \*****************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * Rect
 * low-level utility class for basic geometry
 */

( function( window, factory ) {
  // universal module definition
  /* jshint strict: false */ /* globals define, module */
  if ( true ) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
		__WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}

}( window, function factory() {
'use strict';

// -------------------------- Rect -------------------------- //

function Rect( props ) {
  // extend properties from defaults
  for ( var prop in Rect.defaults ) {
    this[ prop ] = Rect.defaults[ prop ];
  }

  for ( prop in props ) {
    this[ prop ] = props[ prop ];
  }

}

Rect.defaults = {
  x: 0,
  y: 0,
  width: 0,
  height: 0
};

var proto = Rect.prototype;

/**
 * Determines whether or not this rectangle wholly encloses another rectangle or point.
 * @param {Rect} rect
 * @returns {Boolean}
**/
proto.contains = function( rect ) {
  // points don't have width or height
  var otherWidth = rect.width || 0;
  var otherHeight = rect.height || 0;
  return this.x <= rect.x &&
    this.y <= rect.y &&
    this.x + this.width >= rect.x + otherWidth &&
    this.y + this.height >= rect.y + otherHeight;
};

/**
 * Determines whether or not the rectangle intersects with another.
 * @param {Rect} rect
 * @returns {Boolean}
**/
proto.overlaps = function( rect ) {
  var thisRight = this.x + this.width;
  var thisBottom = this.y + this.height;
  var rectRight = rect.x + rect.width;
  var rectBottom = rect.y + rect.height;

  // http://stackoverflow.com/a/306332
  return this.x < rectRight &&
    thisRight > rect.x &&
    this.y < rectBottom &&
    thisBottom > rect.y;
};

/**
 * @param {Rect} rect - the overlapping rect
 * @returns {Array} freeRects - rects representing the area around the rect
**/
proto.getMaximalFreeRects = function( rect ) {

  // if no intersection, return false
  if ( !this.overlaps( rect ) ) {
    return false;
  }

  var freeRects = [];
  var freeRect;

  var thisRight = this.x + this.width;
  var thisBottom = this.y + this.height;
  var rectRight = rect.x + rect.width;
  var rectBottom = rect.y + rect.height;

  // top
  if ( this.y < rect.y ) {
    freeRect = new Rect({
      x: this.x,
      y: this.y,
      width: this.width,
      height: rect.y - this.y
    });
    freeRects.push( freeRect );
  }

  // right
  if ( thisRight > rectRight ) {
    freeRect = new Rect({
      x: rectRight,
      y: this.y,
      width: thisRight - rectRight,
      height: this.height
    });
    freeRects.push( freeRect );
  }

  // bottom
  if ( thisBottom > rectBottom ) {
    freeRect = new Rect({
      x: this.x,
      y: rectBottom,
      width: this.width,
      height: thisBottom - rectBottom
    });
    freeRects.push( freeRect );
  }

  // left
  if ( this.x < rect.x ) {
    freeRect = new Rect({
      x: this.x,
      y: this.y,
      width: rect.x - this.x,
      height: this.height
    });
    freeRects.push( freeRect );
  }

  return freeRects;
};

proto.canFit = function( rect ) {
  return this.width >= rect.width && this.height >= rect.height;
};

return Rect;

}));


/***/ }),

/***/ "./src/style.css":
/*!***********************!*\
  !*** ./src/style.css ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./style.css */ "./node_modules/css-loader/dist/cjs.js!./src/style.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";


var stylesInDOM = [];
function getIndexByIdentifier(identifier) {
  var result = -1;
  for (var i = 0; i < stylesInDOM.length; i++) {
    if (stylesInDOM[i].identifier === identifier) {
      result = i;
      break;
    }
  }
  return result;
}
function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];
  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var indexByIdentifier = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3],
      supports: item[4],
      layer: item[5]
    };
    if (indexByIdentifier !== -1) {
      stylesInDOM[indexByIdentifier].references++;
      stylesInDOM[indexByIdentifier].updater(obj);
    } else {
      var updater = addElementStyle(obj, options);
      options.byIndex = i;
      stylesInDOM.splice(i, 0, {
        identifier: identifier,
        updater: updater,
        references: 1
      });
    }
    identifiers.push(identifier);
  }
  return identifiers;
}
function addElementStyle(obj, options) {
  var api = options.domAPI(options);
  api.update(obj);
  var updater = function updater(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {
        return;
      }
      api.update(obj = newObj);
    } else {
      api.remove();
    }
  };
  return updater;
}
module.exports = function (list, options) {
  options = options || {};
  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];
    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDOM[index].references--;
    }
    var newLastIdentifiers = modulesToDom(newList, options);
    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];
      var _index = getIndexByIdentifier(_identifier);
      if (stylesInDOM[_index].references === 0) {
        stylesInDOM[_index].updater();
        stylesInDOM.splice(_index, 1);
      }
    }
    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";


var memo = {};

/* istanbul ignore next  */
function getTarget(target) {
  if (typeof memo[target] === "undefined") {
    var styleTarget = document.querySelector(target);

    // Special case to return head of iframe instead of iframe itself
    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
      try {
        // This will throw an exception if access to iframe is blocked
        // due to cross-origin restrictions
        styleTarget = styleTarget.contentDocument.head;
      } catch (e) {
        // istanbul ignore next
        styleTarget = null;
      }
    }
    memo[target] = styleTarget;
  }
  return memo[target];
}

/* istanbul ignore next  */
function insertBySelector(insert, style) {
  var target = getTarget(insert);
  if (!target) {
    throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
  }
  target.appendChild(style);
}
module.exports = insertBySelector;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function insertStyleElement(options) {
  var element = document.createElement("style");
  options.setAttributes(element, options.attributes);
  options.insert(element, options.options);
  return element;
}
module.exports = insertStyleElement;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


/* istanbul ignore next  */
function setAttributesWithoutAttributes(styleElement) {
  var nonce =  true ? __webpack_require__.nc : 0;
  if (nonce) {
    styleElement.setAttribute("nonce", nonce);
  }
}
module.exports = setAttributesWithoutAttributes;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function apply(styleElement, options, obj) {
  var css = "";
  if (obj.supports) {
    css += "@supports (".concat(obj.supports, ") {");
  }
  if (obj.media) {
    css += "@media ".concat(obj.media, " {");
  }
  var needLayer = typeof obj.layer !== "undefined";
  if (needLayer) {
    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");
  }
  css += obj.css;
  if (needLayer) {
    css += "}";
  }
  if (obj.media) {
    css += "}";
  }
  if (obj.supports) {
    css += "}";
  }
  var sourceMap = obj.sourceMap;
  if (sourceMap && typeof btoa !== "undefined") {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  }

  // For old IE
  /* istanbul ignore if  */
  options.styleTagTransform(css, styleElement, options.options);
}
function removeStyleElement(styleElement) {
  // istanbul ignore if
  if (styleElement.parentNode === null) {
    return false;
  }
  styleElement.parentNode.removeChild(styleElement);
}

/* istanbul ignore next  */
function domAPI(options) {
  if (typeof document === "undefined") {
    return {
      update: function update() {},
      remove: function remove() {}
    };
  }
  var styleElement = options.insertStyleElement(options);
  return {
    update: function update(obj) {
      apply(styleElement, options, obj);
    },
    remove: function remove() {
      removeStyleElement(styleElement);
    }
  };
}
module.exports = domAPI;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function styleTagTransform(css, styleElement) {
  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css;
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild);
    }
    styleElement.appendChild(document.createTextNode(css));
  }
}
module.exports = styleTagTransform;

/***/ }),

/***/ "./node_modules/unidragger/node_modules/ev-emitter/ev-emitter.js":
/*!***********************************************************************!*\
  !*** ./node_modules/unidragger/node_modules/ev-emitter/ev-emitter.js ***!
  \***********************************************************************/
/***/ (function(module) {

/**
 * EvEmitter v2.1.1
 * Lil' event emitter
 * MIT License
 */

( function( global, factory ) {
  // universal module definition
  if (  true && module.exports ) {
    // CommonJS - Browserify, Webpack
    module.exports = factory();
  } else {
    // Browser globals
    global.EvEmitter = factory();
  }

}( typeof window != 'undefined' ? window : this, function() {

function EvEmitter() {}

let proto = EvEmitter.prototype;

proto.on = function( eventName, listener ) {
  if ( !eventName || !listener ) return this;

  // set events hash
  let events = this._events = this._events || {};
  // set listeners array
  let listeners = events[ eventName ] = events[ eventName ] || [];
  // only add once
  if ( !listeners.includes( listener ) ) {
    listeners.push( listener );
  }

  return this;
};

proto.once = function( eventName, listener ) {
  if ( !eventName || !listener ) return this;

  // add event
  this.on( eventName, listener );
  // set once flag
  // set onceEvents hash
  let onceEvents = this._onceEvents = this._onceEvents || {};
  // set onceListeners object
  let onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};
  // set flag
  onceListeners[ listener ] = true;

  return this;
};

proto.off = function( eventName, listener ) {
  let listeners = this._events && this._events[ eventName ];
  if ( !listeners || !listeners.length ) return this;

  let index = listeners.indexOf( listener );
  if ( index != -1 ) {
    listeners.splice( index, 1 );
  }

  return this;
};

proto.emitEvent = function( eventName, args ) {
  let listeners = this._events && this._events[ eventName ];
  if ( !listeners || !listeners.length ) return this;

  // copy over to avoid interference if .off() in listener
  listeners = listeners.slice( 0 );
  args = args || [];
  // once stuff
  let onceListeners = this._onceEvents && this._onceEvents[ eventName ];

  for ( let listener of listeners ) {
    let isOnce = onceListeners && onceListeners[ listener ];
    if ( isOnce ) {
      // remove listener
      // remove before trigger to prevent recursion
      this.off( eventName, listener );
      // unset once flag
      delete onceListeners[ listener ];
    }
    // trigger listener
    listener.apply( this, args );
  }

  return this;
};

proto.allOff = function() {
  delete this._events;
  delete this._onceEvents;
  return this;
};

return EvEmitter;

} ) );


/***/ }),

/***/ "./node_modules/unidragger/unidragger.js":
/*!***********************************************!*\
  !*** ./node_modules/unidragger/unidragger.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/*!
 * Unidragger v3.0.1
 * Draggable base class
 * MIT license
 */

( function( window, factory ) {
  // universal module definition
  if (  true && module.exports ) {
    // CommonJS
    module.exports = factory(
        window,
        __webpack_require__(/*! ev-emitter */ "./node_modules/unidragger/node_modules/ev-emitter/ev-emitter.js"),
    );
  } else {
    // browser global
    window.Unidragger = factory(
        window,
        window.EvEmitter,
    );
  }

}( typeof window != 'undefined' ? window : this, function factory( window, EvEmitter ) {

function Unidragger() {}

// inherit EvEmitter
let proto = Unidragger.prototype = Object.create( EvEmitter.prototype );

// ----- bind start ----- //

// trigger handler methods for events
proto.handleEvent = function( event ) {
  let method = 'on' + event.type;
  if ( this[ method ] ) {
    this[ method ]( event );
  }
};

let startEvent, activeEvents;
if ( 'ontouchstart' in window ) {
  // HACK prefer Touch Events as you can preventDefault on touchstart to
  // disable scroll in iOS & mobile Chrome metafizzy/flickity#1177
  startEvent = 'touchstart';
  activeEvents = [ 'touchmove', 'touchend', 'touchcancel' ];
} else if ( window.PointerEvent ) {
  // Pointer Events
  startEvent = 'pointerdown';
  activeEvents = [ 'pointermove', 'pointerup', 'pointercancel' ];
} else {
  // mouse events
  startEvent = 'mousedown';
  activeEvents = [ 'mousemove', 'mouseup' ];
}

// prototype so it can be overwriteable by Flickity
proto.touchActionValue = 'none';

proto.bindHandles = function() {
  this._bindHandles( 'addEventListener', this.touchActionValue );
};

proto.unbindHandles = function() {
  this._bindHandles( 'removeEventListener', '' );
};

/**
 * Add or remove start event
 * @param {String} bindMethod - addEventListener or removeEventListener
 * @param {String} touchAction - value for touch-action CSS property
 */
proto._bindHandles = function( bindMethod, touchAction ) {
  this.handles.forEach( ( handle ) => {
    handle[ bindMethod ]( startEvent, this );
    handle[ bindMethod ]( 'click', this );
    // touch-action: none to override browser touch gestures. metafizzy/flickity#540
    if ( window.PointerEvent ) handle.style.touchAction = touchAction;
  } );
};

proto.bindActivePointerEvents = function() {
  activeEvents.forEach( ( eventName ) => {
    window.addEventListener( eventName, this );
  } );
};

proto.unbindActivePointerEvents = function() {
  activeEvents.forEach( ( eventName ) => {
    window.removeEventListener( eventName, this );
  } );
};

// ----- event handler helpers ----- //

// trigger method with matching pointer
proto.withPointer = function( methodName, event ) {
  if ( event.pointerId === this.pointerIdentifier ) {
    this[ methodName ]( event, event );
  }
};

// trigger method with matching touch
proto.withTouch = function( methodName, event ) {
  let touch;
  for ( let changedTouch of event.changedTouches ) {
    if ( changedTouch.identifier === this.pointerIdentifier ) {
      touch = changedTouch;
    }
  }
  if ( touch ) this[ methodName ]( event, touch );
};

// ----- start event ----- //

proto.onmousedown = function( event ) {
  this.pointerDown( event, event );
};

proto.ontouchstart = function( event ) {
  this.pointerDown( event, event.changedTouches[0] );
};

proto.onpointerdown = function( event ) {
  this.pointerDown( event, event );
};

// nodes that have text fields
const cursorNodes = [ 'TEXTAREA', 'INPUT', 'SELECT', 'OPTION' ];
// input types that do not have text fields
const clickTypes = [ 'radio', 'checkbox', 'button', 'submit', 'image', 'file' ];

/**
 * any time you set `event, pointer` it refers to:
 * @param {Event} event
 * @param {Event | Touch} pointer
 */
proto.pointerDown = function( event, pointer ) {
  // dismiss multi-touch taps, right clicks, and clicks on text fields
  let isCursorNode = cursorNodes.includes( event.target.nodeName );
  let isClickType = clickTypes.includes( event.target.type );
  let isOkayElement = !isCursorNode || isClickType;
  let isOkay = !this.isPointerDown && !event.button && isOkayElement;
  if ( !isOkay ) return;

  this.isPointerDown = true;
  // save pointer identifier to match up touch events
  this.pointerIdentifier = pointer.pointerId !== undefined ?
    // pointerId for pointer events, touch.indentifier for touch events
    pointer.pointerId : pointer.identifier;
  // track position for move
  this.pointerDownPointer = {
    pageX: pointer.pageX,
    pageY: pointer.pageY,
  };

  this.bindActivePointerEvents();
  this.emitEvent( 'pointerDown', [ event, pointer ] );
};

// ----- move ----- //

proto.onmousemove = function( event ) {
  this.pointerMove( event, event );
};

proto.onpointermove = function( event ) {
  this.withPointer( 'pointerMove', event );
};

proto.ontouchmove = function( event ) {
  this.withTouch( 'pointerMove', event );
};

proto.pointerMove = function( event, pointer ) {
  let moveVector = {
    x: pointer.pageX - this.pointerDownPointer.pageX,
    y: pointer.pageY - this.pointerDownPointer.pageY,
  };
  this.emitEvent( 'pointerMove', [ event, pointer, moveVector ] );
  // start drag if pointer has moved far enough to start drag
  let isDragStarting = !this.isDragging && this.hasDragStarted( moveVector );
  if ( isDragStarting ) this.dragStart( event, pointer );
  if ( this.isDragging ) this.dragMove( event, pointer, moveVector );
};

// condition if pointer has moved far enough to start drag
proto.hasDragStarted = function( moveVector ) {
  return Math.abs( moveVector.x ) > 3 || Math.abs( moveVector.y ) > 3;
};

// ----- drag ----- //

proto.dragStart = function( event, pointer ) {
  this.isDragging = true;
  this.isPreventingClicks = true; // set flag to prevent clicks
  this.emitEvent( 'dragStart', [ event, pointer ] );
};

proto.dragMove = function( event, pointer, moveVector ) {
  this.emitEvent( 'dragMove', [ event, pointer, moveVector ] );
};

// ----- end ----- //

proto.onmouseup = function( event ) {
  this.pointerUp( event, event );
};

proto.onpointerup = function( event ) {
  this.withPointer( 'pointerUp', event );
};

proto.ontouchend = function( event ) {
  this.withTouch( 'pointerUp', event );
};

proto.pointerUp = function( event, pointer ) {
  this.pointerDone();
  this.emitEvent( 'pointerUp', [ event, pointer ] );

  if ( this.isDragging ) {
    this.dragEnd( event, pointer );
  } else {
    // pointer didn't move enough for drag to start
    this.staticClick( event, pointer );
  }
};

proto.dragEnd = function( event, pointer ) {
  this.isDragging = false; // reset flag
  // re-enable clicking async
  setTimeout( () => delete this.isPreventingClicks );

  this.emitEvent( 'dragEnd', [ event, pointer ] );
};

// triggered on pointer up & pointer cancel
proto.pointerDone = function() {
  this.isPointerDown = false;
  delete this.pointerIdentifier;
  this.unbindActivePointerEvents();
  this.emitEvent('pointerDone');
};

// ----- cancel ----- //

proto.onpointercancel = function( event ) {
  this.withPointer( 'pointerCancel', event );
};

proto.ontouchcancel = function( event ) {
  this.withTouch( 'pointerCancel', event );
};

proto.pointerCancel = function( event, pointer ) {
  this.pointerDone();
  this.emitEvent( 'pointerCancel', [ event, pointer ] );
};

// ----- click ----- //

// handle all clicks and prevent clicks when dragging
proto.onclick = function( event ) {
  if ( this.isPreventingClicks ) event.preventDefault();
};

// triggered after pointer down & up with no/tiny movement
proto.staticClick = function( event, pointer ) {
  // ignore emulated mouse up clicks
  let isMouseup = event.type === 'mouseup';
  if ( isMouseup && this.isIgnoringMouseUp ) return;

  this.emitEvent( 'staticClick', [ event, pointer ] );

  // set flag for emulated clicks 300ms after touchend
  if ( isMouseup ) {
    this.isIgnoringMouseUp = true;
    // reset flag after 400ms
    setTimeout( () => {
      delete this.isIgnoringMouseUp;
    }, 400 );
  }
};

// -----  ----- //

return Unidragger;

} ) );


/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/typeof.js":
/*!***********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/typeof.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _typeof)
/* harmony export */ });
function _typeof(o) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof(o);
}

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! date-fns */ "./node_modules/date-fns/esm/isWithinInterval/index.js");
/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! date-fns */ "./node_modules/date-fns/esm/addDays/index.js");
/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! date-fns */ "./node_modules/date-fns/esm/addWeeks/index.js");
/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! date-fns */ "./node_modules/date-fns/esm/isToday/index.js");
/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! date-fns */ "./node_modules/date-fns/esm/format/index.js");
/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! date-fns */ "./node_modules/date-fns/esm/isAfter/index.js");
/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! date-fns */ "./node_modules/date-fns/esm/formatISO/index.js");
/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! date-fns */ "./node_modules/date-fns/esm/parseJSON/index.js");
/* harmony import */ var draggabilly__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! draggabilly */ "./node_modules/draggabilly/draggabilly.js");
/* harmony import */ var draggabilly__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(draggabilly__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var agnostic_draggable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! agnostic-draggable */ "./node_modules/agnostic-draggable/dist/agnostic-draggable.min.js");
/* harmony import */ var agnostic_draggable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(agnostic_draggable__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./style.css */ "./src/style.css");




var Packery = __webpack_require__(/*! packery */ "./node_modules/packery/js/packery.js");

const ChecklistItem = (name, checked) => {
    const toggleComplete = function () {
        this.checked = this.checked ? false : true;
        StorageController.updateStorage();
    }

    const markComplete = function () {
        this.checked = true;
    }

    const markIncomplete = function() {
        this.checked = false;
    }

    const changeName = function (newName) {
        this.name = newName;
        StorageController.updateStorage();
    }

    return {name, checked, toggleComplete, markComplete, markIncomplete, changeName}
}

const ToDo = (title, description, dueDate, priority, project, completed, checklist) => {
    const setProject = function (newProject) {
        this.project = newProject;
    }

    const addChecklistItem = function (name, checked=false) {
        const newChecklistItem = ChecklistItem(name, checked);
        this.checklist.push(newChecklistItem);
        StorageController.updateStorage();
        return newChecklistItem;
    }

    const deleteChecklistItem = function (checklistItem) {
        if (this.checklist.includes(checklistItem)) {
            const index = this.checklist.indexOf(checklistItem);
            this.checklist.splice(index, 1);
            StorageController.updateStorage();
        }
    }

    const toggleComplete = function (all = true) {
        this.completed = this.completed ? false : true;
        if (all) {
            this.checklist.forEach((checkitem) => {
                if (this.completed === false) {
                    checkitem.markIncomplete();
                } else {
                    checkitem.markComplete();
                }
            })
        }
        StorageController.updateStorage();
    }

    const edit = function (newTitle, newDescription, newDueDate, newPriority, newProject) {
        this.title = newTitle;
        this.description = newDescription;
        this.dueDate = newDueDate;
        this.priority = newPriority;
        if (this.project !== newProject && newProject !== null) {
            if (this.project !== null) {
                this.project.remove(this);
            };
            newProject.add(this);
            this.setProject(newProject);
        } else if (newProject === null) {
            if (this.project !== null) {
                this.project.remove(this);
            }; 
            this.setProject(null);
        }
        StorageController.updateStorage();
    }

    const reorderCheckItems = function (newIndexes) {
        const checklistCopy = checklist.map((a) => a);
        this.checklist.sort((a, b) => {
            const indexA = checklistCopy.indexOf(a);
            const indexB = checklistCopy.indexOf(b);

            const indexOfIndexA = newIndexes.indexOf(indexA);
            const indexOfIndexB = newIndexes.indexOf(indexB);

            return indexOfIndexA < indexOfIndexB ? -1 : 1;
        })
        StorageController.updateStorage();
    }

    return {
        title, 
        description, 
        dueDate, 
        checklist,
        priority, 
        project, 
        completed,
        addChecklistItem,
        deleteChecklistItem,
        toggleComplete,
        edit,
        setProject,
        reorderCheckItems
    }
}

const Project = (name, toDos) => {
    const add = function (toDo) {
        if (!toDos.includes(toDo)) {
            toDos.push(toDo);
        }
    }

    const remove = function (toDo) {
        if (toDos.includes(toDo)) {
            const index = toDos.findIndex(item => item === toDo);
            toDos.splice(index, 1);
        }
    }

    const changeName = function (newName) {
        this.name = newName;
        StorageController.updateStorage();
    }

    return {
        name,
        toDos,
        add,
        remove,
        changeName,
    }
}

const List = (function () {
    let toDos = [];
    let projects = [];

    const getToDos = function () {
        return toDos.map(item => item);
    }

    const getProjects = function () {
        return projects.map(item => item);
    }

    const addToDoToProject = function (toDo, project) {
        toDo.project = project;
        project.toDos.push(toDo);
        StorageController.updateStorage();
    }

    const createToDo = function (title, description, dueDate, priority, project = null) {
        const newToDo = ToDo(title, description, dueDate, priority, project, false, []);
        toDos.push(newToDo);
        StorageController.updateStorage();
        return newToDo;
    }

    const createProject = function (name) {
        const newProject = Project(name, []);
        projects.push(newProject);
        return newProject;
    }

    const deleteTodo = function (toDo) {
        if (toDos.includes(toDo)) {
            const index = toDos.findIndex(item => item === toDo);
            toDos.splice(index, 1);
            if (toDo.project) {
                toDo.project.remove(toDo);
            };
            StorageController.updateStorage();
        }
    }

    const deleteProject = function (proj) {
        toDos.forEach((item) => {
            if (item.project === proj) {
                deleteTodo(item);
            }
        })
        const projectIndex = projects.findIndex(project => project === proj);
        projects.splice(projectIndex, 1);
        StorageController.updateStorage();
    }

    const getProjectItems = function (proj) {
        return toDos.filter((item) => item.project === proj);
    }

    const reorderProjects = function (projectList) {
        projects.sort((a, b) => {
            const indexA = projectList.findIndex((item) => a.name === item);
            const indexB = projectList.findIndex((item) => b.name === item);
            return indexA < indexB ? -1 : 1;
        });
        StorageController.updateStorage();
    }

    const reorderToDos = function (oldIndex, newIndex) {
        const [toDo] = toDos.splice(oldIndex, 1)
        toDos.splice(newIndex, 0, toDo);
        StorageController.updateStorage();
    }

    const reorderAll = function (newIndexes) {
        const toDosCopy = toDos.map((a) => a);
        toDos.sort((a, b) => {
            const indexA = toDosCopy.indexOf(a);
            const indexB = toDosCopy.indexOf(b);

            const indexOfIndexA = newIndexes.indexOf(indexA);
            const indexOfIndexB = newIndexes.indexOf(indexB);

            return indexOfIndexA < indexOfIndexB ? -1 : 1;
        })
    }

    return {
        getToDos,
        getProjects,
        createToDo,
        createProject,
        deleteTodo,
        deleteProject,
        getProjectItems,
        addToDoToProject,
        reorderProjects,
        reorderToDos,
        reorderAll,
    }
})();

const UserInterface = (function () {
    let mainLayout;

    const _retitleMain = function (newTitle) {
        const title = document.querySelector('.title');
        title.textContent = newTitle;
    }

    const _renderEmptyMessage = function () {
        const main = document.querySelector('#main');
        if (!main.hasChildNodes()) {
            const emptyMessage = document.createElement('p');
            emptyMessage.classList.add('empty-message');
            emptyMessage.textContent = 'no tasks here!'
            main.appendChild(emptyMessage);
        }
    }

    const _populateForm = function (purpose) {
        const form = document.createElement('form');

        const title = document.createElement('div');
        title.classList.add('input');
        const titleLabel = document.createElement('label');
        titleLabel.setAttribute('for', `${purpose}-title`);
        titleLabel.textContent = 'title';
        const titleInput = document.createElement('input');
        titleInput.id = `${purpose}-title`;
        titleInput.setAttribute('name', `${purpose}-title`);
        titleInput.setAttribute('type', 'text');
        titleInput.setAttribute('required', '');
        title.appendChild(titleLabel);
        title.appendChild(titleInput);

        const description = document.createElement('div');
        description.classList.add('input');
        const descLabel = document.createElement('label');
        descLabel.setAttribute('for', `${purpose}-description`);
        descLabel.textContent = 'description';
        const descInput = document.createElement('textarea');
        descInput.id = `${purpose}-description`;
        descInput.setAttribute('name', `${purpose}-description`);
        description.appendChild(descLabel);
        description.appendChild(descInput);

        const dueDate = document.createElement('div');
        dueDate.classList.add('input');
        dueDate.classList.add('date');
        const dueDateLabel = document.createElement('label');
        dueDateLabel.setAttribute('for', `${purpose}-due-date`);
        dueDateLabel.textContent = 'due date';
        const dueDateInput = document.createElement('input');
        dueDateInput.id = `${purpose}-due-date`;
        dueDateInput.setAttribute('name', `${purpose}-due-date`);
        dueDateInput.setAttribute('type', 'date');
        dueDateInput.setAttribute('required', '');
        dueDate.appendChild(dueDateLabel);
        dueDate.appendChild(dueDateInput);

        const priority = document.createElement('fieldset');
        priority.classList.add('input');
        priority.classList.add('radio');
        const priorityLegend = document.createElement('legend');
        priorityLegend.textContent = 'priority';

        const highPriority = document.createElement('div');
        const highPriorityLabel = document.createElement('label');
        highPriorityLabel.textContent = 'high';
        highPriorityLabel.setAttribute('for', `${purpose}-high-priority`);
        const highPriorityInput = document.createElement('input');
        highPriorityInput.id = `${purpose}-high-priority`;
        highPriorityInput.setAttribute('name', `${purpose}-priority`);
        highPriorityInput.setAttribute('value', 'high');
        highPriorityInput.setAttribute('type', 'radio');
        highPriorityInput.setAttribute('checked', '');
        highPriority.appendChild(highPriorityLabel);
        highPriority.appendChild(highPriorityInput);
        highPriority.classList.add('high-priority');

        const medPriority = document.createElement('div');
        const medPriorityLabel = document.createElement('label');
        medPriorityLabel.textContent = 'medium';
        medPriorityLabel.setAttribute('for', `${purpose}-medium-priority`);
        const medPriorityInput = document.createElement('input');
        medPriorityInput.id = `${purpose}-medium-priority`;
        medPriorityInput.setAttribute('name', `${purpose}-priority`);
        medPriorityInput.setAttribute('value', 'medium');
        medPriorityInput.setAttribute('type', 'radio');
        medPriority.appendChild(medPriorityLabel);
        medPriority.appendChild(medPriorityInput);
        medPriority.classList.add('medium-priority');

        const lowPriority = document.createElement('div');
        const lowPriorityLabel = document.createElement('label');
        lowPriorityLabel.textContent = 'low';
        lowPriorityLabel.setAttribute('for', `${purpose}-low-priority`);
        const lowPriorityInput = document.createElement('input');
        lowPriorityInput.id = `${purpose}-low-priority`;
        lowPriorityInput.setAttribute('name', `${purpose}-priority`);
        lowPriorityInput.setAttribute('value', 'low');
        lowPriorityInput.setAttribute('type', 'radio');
        lowPriority.appendChild(lowPriorityLabel);
        lowPriority.appendChild(lowPriorityInput);
        
        priority.appendChild(priorityLegend);
        priority.appendChild(highPriority);
        priority.appendChild(medPriority);
        priority.appendChild(lowPriority);

        form.appendChild(title);
        form.appendChild(description);
        form.appendChild(dueDate);
        form.appendChild(priority);
        
        return form;
    }
    const buildNewToDoDialog = function () {
        const main = document.querySelector('#main');

        const dialog = document.createElement('dialog');
        dialog.classList.add('create');
        const form = _populateForm('create');
        dialog.appendChild(form);

        const closeDiv = document.createElement('div');
        closeDiv.classList.add('close');
        const confirmBtn = document.createElement('button');
        confirmBtn.textContent = 'confirm';
        const cancelBtn = document.createElement('button');
        cancelBtn.textContent = 'cancel';
        closeDiv.appendChild(confirmBtn);
        closeDiv.appendChild(cancelBtn);

        form.appendChild(closeDiv);

        confirmBtn.addEventListener('click', (e) => {
            const inputs = dialog.querySelectorAll('input');
            let allValid = true;
            Array.from(inputs).forEach((input) => {
                if (!input.checkValidity()) {
                    allValid = false;
                }
            });
            if (allValid) {
                e.preventDefault();
                const title = dialog.querySelector('#create-title').value;
                const description = dialog.querySelector('#create-description').value;
                const dueDate = dialog.querySelector('#create-due-date').valueAsDate;
                let priority;
                const priorities = dialog.querySelectorAll('input[type="radio"]');
                Array.from(priorities).forEach((item) => {
                    if (item.checked) {
                        priority = item.value;
                    }
                });

                if (main.hasAttribute('data-project')) {
                    const project = List.getProjects().find((item) => item.name === main.getAttribute('data-project'));
                    const newToDo = List.createToDo(title, description, dueDate, priority, project);
                    const toDoNode = createToDo(newToDo)
                    toDoNode.setAttribute('data-index', List.getProjectItems(project).length - 1);
                    main.appendChild(toDoNode);
                    mainLayout.appended(toDoNode);
                    const draggie = new (draggabilly__WEBPACK_IMPORTED_MODULE_0___default())(toDoNode, {
                        handle: '.move-icon',
                    })
                    mainLayout.bindDraggabillyEvents(draggie);
                } else if (main.hasAttribute('data-date')) {
                    const newToDo = List.createToDo(title, description, dueDate, priority);
                    if (main.getAttribute('data-date') === 'upcoming') {
                        if ((0,date_fns__WEBPACK_IMPORTED_MODULE_3__["default"])(newToDo.dueDate, {
                            start: (0,date_fns__WEBPACK_IMPORTED_MODULE_4__["default"])(new Date().setHours(0, 0, 0, 0), 1),
                            end: (0,date_fns__WEBPACK_IMPORTED_MODULE_5__["default"])(new Date().setHours(23, 59, 59, 99), 1),
                        })) {
                            const toDoNode = createToDo(newToDo);
                            toDoNode.querySelector('button.delete').remove();
                            toDoNode.querySelector('button.edit').remove();
                            toDoNode.setAttribute('data-index', main.querySelectorAll('.to-do').length);
                            main.appendChild(toDoNode);
                            mainLayout.appended(toDoNode);
                            const draggie = new (draggabilly__WEBPACK_IMPORTED_MODULE_0___default())(toDoNode, {
                                handle: '.move-icon',
                            })
                            mainLayout.bindDraggabillyEvents(draggie);
                        }
                    } else if (main.getAttribute('data-date') === 'today') {
                        if ((0,date_fns__WEBPACK_IMPORTED_MODULE_6__["default"])(newToDo.dueDate)) {
                            const toDoNode = createToDo(newToDo);
                            toDoNode.querySelector('button.delete').remove();
                            toDoNode.querySelector('button.edit').remove();
                            toDoNode.setAttribute('data-index', main.querySelectorAll('.to-do').length);
                            main.appendChild(toDoNode);
                            mainLayout.appended(toDoNode);
                            const draggie = new (draggabilly__WEBPACK_IMPORTED_MODULE_0___default())(toDoNode, {
                                handle: '.move-icon',
                            })
                            mainLayout.bindDraggabillyEvents(draggie);
                        }
                    }
                } else {
                    const newToDo = List.createToDo(title, description, dueDate, priority);
                    const toDoNode = createToDo(newToDo)
                    toDoNode.setAttribute('data-index', List.getToDos().length - 1);
                    main.appendChild(toDoNode);
                    mainLayout.appended(toDoNode);
                    const draggie = new (draggabilly__WEBPACK_IMPORTED_MODULE_0___default())(toDoNode, {
                        handle: '.move-icon',
                    })
                    mainLayout.bindDraggabillyEvents(draggie);
                }

                if (main.querySelector('.empty-message')) {
                    main.querySelector('.empty-message').remove();
                    if (!main.hasChildNodes()) {
                        _renderEmptyMessage();
                    }
                }

                form.reset();
                dialog.close();
            }
        });

        cancelBtn.addEventListener('click', (e) => {
            e.preventDefault();
            form.reset();
            dialog.close();
        });

        document.body.appendChild(dialog);
    }

    const buildEditToDoDialog = function () {
        const main = document.querySelector('#main');
        const dialog = document.createElement('dialog');
        dialog.classList.add('edit');
        const form = _populateForm('edit');
        dialog.appendChild(form);

        const projectInput = document.createElement('div');
        projectInput.classList.add('input');
        const projectLabel = document.createElement('label');
        projectLabel.setAttribute('for', 'edit-project');
        projectLabel.textContent = 'project';
        const projectSelect = document.createElement('select');
        projectSelect.id = 'edit-project';
        projectSelect.setAttribute('name', 'edit-project');
        projectInput.appendChild(projectLabel);
        projectInput.appendChild(projectSelect);

        const closeDiv = document.createElement('div');
        closeDiv.classList.add('close');
        const confirmBtn = document.createElement('button');
        confirmBtn.textContent = 'confirm';
        const cancelBtn = document.createElement('button');
        cancelBtn.textContent = 'cancel';
        closeDiv.appendChild(confirmBtn);
        closeDiv.appendChild(cancelBtn);

        form.appendChild(projectInput);
        form.appendChild(closeDiv);

        confirmBtn.addEventListener('click', (e) => {
            const inputs = dialog.querySelectorAll('input');
            let allValid = true;
            Array.from(inputs).forEach((input) => {
                if (!input.checkValidity()) {
                    allValid = false;
                }
            });
            if (allValid) {
                e.preventDefault();

                let toDo;
                if (main.hasAttribute('data-project')) {
                    let project = List.getProjects().find((item) => item.name === main.getAttribute('data-project'));
                    toDo = List.getProjectItems(project)[dialog.getAttribute('data-index')];
                } else {
                    toDo = List.getToDos()[dialog.getAttribute('data-index')];
                }

                const title = dialog.querySelector('#edit-title').value;
                const description = dialog.querySelector('#edit-description').value;
                const dueDate = dialog.querySelector('#edit-due-date').valueAsDate;
                let priority;
                const priorities = dialog.querySelectorAll('input[type="radio"]');
                Array.from(priorities).forEach((item) => {
                    if (item.checked) {
                        priority = item.value;
                    }
                });
                
                let projectName
                const projects = dialog.querySelectorAll('option');
                Array.from(projects).forEach((item) => {
                    if (item.selected) {
                        projectName = item.value;
                    }
                });
                const project = projectName === 'none' ? null : List.getProjects().find((proj) => proj.name === projectName);

                editToDo(toDo, title, description, dueDate, priority, project);
                dialog.removeAttribute('data-index');
                form.reset();
                dialog.close();
                mainLayout.shiftLayout();
            }
        });

        cancelBtn.addEventListener('click', (e) => {
            e.preventDefault();
            dialog.removeAttribute('data-index');
            form.reset();
            dialog.close();
        });

        document.body.appendChild(dialog);
    }

    const buildDeleteDialog =  function () {
        const dialog = document.createElement('dialog');
        dialog.classList.add('delete');

        const message = document.createElement('p');

        message.textContent = 'are you sure you want to delete this?';

        const deleteBtn = document.createElement('button');
        deleteBtn.textContent = 'yes, delete';
        const cancelBtn = document.createElement('button');
        cancelBtn.textContent = 'no, cancel';

        deleteBtn.addEventListener('click', () => {
            dialog.close('true')
        });

        cancelBtn.addEventListener('click', () => {
            dialog.close('');
        });

        dialog.appendChild(message);
        dialog.appendChild(deleteBtn);
        dialog.appendChild(cancelBtn);

        document.body.appendChild(dialog);
    }

    const buildHeader = function () {
        const header = document.querySelector('header');

        const filler = document.createElement('div');

        const heading = document.createElement('h1');
        heading.textContent = 'to-do list!';
        header.appendChild(filler);
        header.appendChild(heading);
    }

    const buildSidebar = function () {
        const main = document.querySelector('#main');

        const aside = document.querySelector('aside');
    
        const home = document.createElement('h2');
        home.textContent = 'home';

        home.addEventListener('click', () => {
            main.removeAttribute('data-project');
            main.removeAttribute('data-date');
            renderAll();
        });

        const today = document.createElement('h2');
        today.textContent = 'today'; 

        today.addEventListener('click', () => {
            _retitleMain('today');
            main.removeAttribute('data-project');
            main.setAttribute('data-date', 'today');
            main.textContent = '';

            let index = 0;
            List.getToDos().forEach((item) => {
                if ((0,date_fns__WEBPACK_IMPORTED_MODULE_6__["default"])(item.dueDate)) {
                    const toDoItem = createToDo(item);
                    const editBtn = toDoItem.querySelector('div.buttons-box > button.edit')
                    editBtn.remove();
                    toDoItem.setAttribute('data-index', index)
                    main.appendChild(toDoItem);
                    index++;
                }
            });

            if (!main.hasChildNodes()) {
                _renderEmptyMessage();
                return;
            };

            mainLayout = new Packery(main, {
                itemSelector: '.to-do',
                columnWidth: 250,
                gutter: 20
            })

            main.querySelectorAll('.to-do').forEach((item) => {
                const draggie = new (draggabilly__WEBPACK_IMPORTED_MODULE_0___default())(item, {
                    handle: '.move-icon',
                })
                mainLayout.bindDraggabillyEvents(draggie);
            })
    
            
            mainLayout.on('removeComplete', () => {
                if (main.hasAttribute('data-project') || main.hasAttribute('data-date')) {
                    console.log(main.querySelectorAll('.to-do'));
                    _resetAttributes(Array.from(main.querySelectorAll('.to-do')), 'data-index');
                }
            });
        })

        const upcoming = document.createElement('h2');
        upcoming.textContent = 'upcoming';

        upcoming.addEventListener('click', () => {
            _retitleMain('upcoming');
            main.removeAttribute('data-project');
            main.setAttribute('data-date', 'upcoming');
            main.textContent = '';

            let index = 0;
            List.getToDos().forEach((item) => {
                if ((0,date_fns__WEBPACK_IMPORTED_MODULE_3__["default"])(item.dueDate, {
                    start: (0,date_fns__WEBPACK_IMPORTED_MODULE_4__["default"])(new Date().setHours(0, 0, 0, 0), 1),
                    end: (0,date_fns__WEBPACK_IMPORTED_MODULE_5__["default"])(new Date().setHours(23, 59, 59, 99), 1),
                })) {
                    const toDoItem = createToDo(item);
                    const editBtn = toDoItem.querySelector('div.buttons-box > button.edit')
                    editBtn.remove();
                    toDoItem.setAttribute('data-index', index)
                    main.appendChild(toDoItem);
                    index++;
                };
            });

            if (!main.hasChildNodes()) {
                _renderEmptyMessage();
                return;
            }

            mainLayout = new Packery(main, {
                itemSelector: '.to-do',
                columnWidth: 250,
                gutter: 20
            })

            main.querySelectorAll('.to-do').forEach((item) => {
                const draggie = new (draggabilly__WEBPACK_IMPORTED_MODULE_0___default())(item, {
                    handle: '.move-icon',
                })
                mainLayout.bindDraggabillyEvents(draggie);
            })

            mainLayout.on('removeComplete', () => {
                if (main.hasAttribute('data-project') || main.hasAttribute('data-date')) {
                    console.log(main.querySelectorAll('.to-do'));
                    _resetAttributes(Array.from(main.querySelectorAll('.to-do')), 'data-index');
                }
            });
        });

        const projects = buildProjectDiv();
        const createBtn = buildNewToDoButton();

        aside.appendChild(home);
        aside.appendChild(today);
        aside.appendChild(upcoming);
        aside.appendChild(projects);
        aside.appendChild(createBtn);
    }

    const buildProjectDiv = function () {
        const projectsDiv = document.createElement('div');
        projectsDiv.classList.add('projects');
        const header = document.createElement('h2');
        header.textContent = 'projects';
        const projectContainer = document.createElement('div');
        projectContainer.classList.add('project-container');
        const createBtn = document.createElement('button');
        createBtn.textContent = '+';
        createBtn.classList.add('create-project');

        projectsDiv.appendChild(header);
        projectsDiv.appendChild(projectContainer);
        projectsDiv.appendChild(createBtn);

        const createPopUp = document.createElement('div');
        createPopUp.classList.add('create-pop-up')
        const createForm = document.createElement('form');
        const projectInput = document.createElement('input')
        projectInput.id = 'project-name';
        projectInput.setAttribute('required', '')
        projectInput.setAttribute('type', 'text')
        const confirmBtn = document.createElement('button');
        confirmBtn.textContent = 'confirm';
        confirmBtn.setAttribute('type', 'submit');
        const cancelBtn = document.createElement('button');
        cancelBtn.textContent = 'cancel';

        createForm.appendChild(projectInput);
        createForm.appendChild(confirmBtn);
        createForm.appendChild(cancelBtn);

        createPopUp.appendChild(createForm);
        
        createBtn.addEventListener('click', () => {
            createBtn.replaceWith(createPopUp);
            projectInput.focus();
        })

        confirmBtn.addEventListener('click', (e) => {
            const projectNames = List.getProjects().map((item) => item.name);
            if (projectNames.includes(projectInput.value)) {
                e.preventDefault();
                console.log('project must be unique!');
            };
            if (projectInput.checkValidity() && !projectNames.includes(projectInput.value)) {
                e.preventDefault();
                projectContainer.appendChild(createProject(projectInput.value));
                _resetAttributes(Array.from(document.querySelector('div.projects').querySelectorAll('div.project')).filter(item => !item.classList.contains('ui-sortable-placeholder')), 'data-id');
                createForm.reset();
                createPopUp.replaceWith(createBtn);

                const sort = new agnostic_draggable__WEBPACK_IMPORTED_MODULE_1__.Sortable(projectContainer, {
                    items: 'div.project',
                    axis: 'y',
                    handle: '.move-icon',
                    containment: 'div.projects',
                    forcePlaceholderSize: true,
                    opacity: 0.5,
                });

                sort.on('sort:start', () => {
                    console.log('hello!');
                });
        
                sort.on('sortable:update', () => {
                    console.log('change');
                    _resetAttributes(Array.from(document.querySelector('div.projects').querySelectorAll('div.project')).filter(item => !item.classList.contains('ui-sortable-placeholder'), 'data-id'));
                    const projects = Array.from(projectContainer.querySelectorAll('div.project'))
                    const projectNames = projects.filter(item => !item.classList.contains('ui-sortable-placeholder')).map(item => item.querySelector('div.name').textContent);
                    List.reorderProjects(projectNames);
                });
                StorageController.updateStorage();

            };
        });

        cancelBtn.addEventListener('click', () => {
            createForm.reset();
            createPopUp.replaceWith(createBtn);
        });

        const sort = new agnostic_draggable__WEBPACK_IMPORTED_MODULE_1__.Sortable(projectContainer, {
            items: 'div.project',
            axis: 'y',
            handle: '.move-icon',
            containment: 'div.projects',
            forcePlaceholderSize: true,
            opacity: 0.5,

        });

        sort.on('sort:start', () => {
            console.log('hello!');
        });

        sort.on('sortable:update', () => {
            console.log('change');
            _resetAttributes(Array.from(document.querySelector('div.projects').querySelectorAll('div.project')).filter(item => !item.classList.contains('ui-sortable-placeholder')), 'data-id');
            const projects = Array.from(projectContainer.querySelectorAll('div.project'))
            const projectNames = projects.filter(item => !item.classList.contains('ui-sortable-placeholder')).map(item => item.querySelector('div.name').textContent);
            List.reorderProjects(projectNames);
        });

        return projectsDiv;
    }

    const buildNewToDoButton = function () {
        const createBtn = document.createElement('button');
        createBtn.textContent = 'new to-do';
        createBtn.classList.add('create-to-do');

        createBtn.addEventListener('click', () => {
            const createDialog = document.querySelector('dialog.create');
            createDialog.showModal();
        });

        return createBtn;
    }

    const buildMain = function () {
        const main = document.querySelector('main');

        const title = document.createElement('h1');
        title.textContent = 'home';
        title.classList.add('title');

        const mainBox = document.createElement('div');
        mainBox.id = 'main';

        main.appendChild(title);
        main.appendChild(mainBox);
    }

    const _resetAttributes = function (array, attr) {
        let index = 0;
        array.forEach((item) => {
            item.setAttribute(attr, index);
            index++
        })
    }

    const createCheckListItem = function (checkListItem, toDo) {
        const index = toDo.checklist.indexOf(checkListItem);
        const check = document.createElement('div');

        const buttons = document.createElement('div');
        buttons.classList.add('buttons');

        const popUpBtn = document.createElement('button');
        popUpBtn.classList.add('pop-up');

        const popUpBtnIcon = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
        popUpBtnIcon.setAttribute('viewBox', '0 0 24 24')
        const popUpBtnIconTitle = document.createElement('title');
        const popUpBtnIconPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');
        popUpBtnIconTitle.textContent = 'menu';
        popUpBtnIconPath.setAttribute('d', 'M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z');

        popUpBtnIcon.appendChild(popUpBtnIconTitle);
        popUpBtnIcon.appendChild(popUpBtnIconPath);
        const popUp = document.createElement('div');

        check.setAttribute('data-order', index);
        if (checkListItem.checked) {
            check.classList.add('checked');
        } else {
            check.classList.add('unchecked')
        }

        const checkBox = document.createElement('div');
        checkBox.classList.add('checklist-checkbox');

        const checkText = document.createElement('p');
        checkText.textContent = checkListItem.name;
        check.classList.add('check-item');

        const deleteBtn = document.createElement('button');
        deleteBtn.textContent = 'delete';
        const editBtn = document.createElement('button');
        editBtn.textContent = 'edit';

        const editPopUp = document.createElement('div');
        const editForm = document.createElement('form');
        const editInput = document.createElement('input');
        editInput.setAttribute('type', 'text');
        editInput.setAttribute('required', '');
        const editConfirmBtn = document.createElement('button');
        editConfirmBtn.textContent = 'confirm'
        const editCancelBtn = document.createElement('button');
        editCancelBtn.textContent = 'cancel';

        editForm.appendChild(editInput);
        editForm.appendChild(editConfirmBtn);
        editForm.appendChild(editCancelBtn);
        editPopUp.appendChild(editForm);

        popUp.appendChild(deleteBtn);
        popUp.appendChild(editBtn);

        popUpBtn.appendChild(popUpBtnIcon);
        popUp.classList.add('pop-up');

        popUpBtn.addEventListener('click', () => {
            if (check.contains(popUp)) {
                check.removeChild(popUp);
            } else {
                const container = check.parentElement;
                const checkNodes = container.querySelectorAll('div.check-item');
                Array.from(checkNodes).forEach((node) => {
                    if (node.querySelector('div.pop-up')) {
                        const popUp = node.querySelector('div.pop-up');
                        node.removeChild(popUp);
                    }
                });
                check.appendChild(popUp);
            }
        })

        popUpBtnIcon.addEventListener('click', (e) => {
            e.stopPropagation();
            if (check.contains(popUp)) {
                check.removeChild(popUp);
            } else {
                const container = check.parentElement;
                const checkNodes = container.querySelectorAll('div.check-item');
                Array.from(checkNodes).forEach((node) => {
                    if (node.querySelector('div.pop-up')) {
                        const popUp = node.querySelector('div.pop-up');
                        node.removeChild(popUp);
                    }
                });
                check.appendChild(popUp);
            }
        })

        checkBox.addEventListener('click', () => {
            checkListItem.toggleComplete();
            if (toDo.completed) {
                toDo.toggleComplete(false);
                check.parentElement.parentElement.classList.add('unchecked');
                check.parentElement.parentElement.classList.remove('checked');
            }
            check.classList.toggle('unchecked');
            check.classList.toggle('checked');
        })

        deleteBtn.addEventListener('click', () => {
            const deleteDialog = document.querySelector('dialog.delete');
            deleteDialog.showModal();

            deleteDialog.addEventListener('click', () => {
                if (deleteDialog.returnValue) {
                    toDo.deleteChecklistItem(checkListItem);
                    const container = check.parentElement;
                    check.remove();
                    _resetAttributes(Array.from(container.querySelectorAll('.check-item')), 'data-order');
                    mainLayout.shiftLayout();
                }
                })
        });

        editBtn.addEventListener('click', () => {
            check.replaceWith(editPopUp);
            editInput.defaultValue = checkText.textContent;
            mainLayout.shiftLayout()
            editInput.focus();
        });

        editConfirmBtn.addEventListener('click', (e) => {
            if (editInput.checkValidity()) {
                checkListItem.changeName(editInput.value);
                e.preventDefault();
                checkText.textContent = editInput.value;
                editPopUp.replaceWith(check);
                check.removeChild(popUp);
                mainLayout.shiftLayout()
            }
        });

        editCancelBtn.addEventListener('click', (e) => {
            e.preventDefault();
            editForm.reset();
            editPopUp.replaceWith(check);
            check.removeChild(popUp);
            mainLayout.shiftLayout()
        });

        check.appendChild(checkBox);
        check.appendChild(checkText);
        check.appendChild(popUpBtn);

        return check;
    }

    const createChecklist = function (toDo) {
        const container = document.createElement('div');
        const expander = document.createElement('div');
        expander.classList.add('expander');

        const expandIcon = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
        expandIcon.setAttribute('viewBox', '0 0 24 24');

        const expandIconPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');
        const expandIconTitle = document.createElement('title');

        expandIconTitle.textContent = 'chevron-double-down';
        expandIconPath.setAttribute('d', 'M16.59,5.59L18,7L12,13L6,7L7.41,5.59L12,10.17L16.59,5.59M16.59,11.59L18,13L12,19L6,13L7.41,11.59L12,16.17L16.59,11.59Z');

        const miniIconPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');
        const miniIconTitle = document.createElement('title');

        miniIconTitle.textContent = 'chevron-double-up';
        miniIconPath.setAttribute('d', 'M7.41,18.41L6,17L12,11L18,17L16.59,18.41L12,13.83L7.41,18.41M7.41,12.41L6,11L12,5L18,11L16.59,12.41L12,7.83L7.41,12.41Z');

        expandIcon.appendChild(expandIconTitle);
        expandIcon.appendChild(expandIconPath);

        expander.appendChild(expandIcon);

        expander.addEventListener('click', () => {
            container.classList.toggle('expanded');
            container.classList.toggle('minimized');

            if (container.classList.contains('expanded')) {
                expandIcon.textContent = '';
                expandIcon.appendChild(miniIconTitle);
                expandIcon.appendChild(miniIconPath);
            } else {
                expandIcon.textContent = '';
                expandIcon.appendChild(expandIconTitle);
                expandIcon.appendChild(expandIconPath);
            }
            mainLayout.shiftLayout();
        })

        container.appendChild(expander);
        container.classList.add('checklist');
        container.classList.add('minimized');

        toDo.checklist.forEach((item) => {
            container.appendChild(createCheckListItem(item, toDo));
        });

        const addChecklistItemBtn = document.createElement('button');
        addChecklistItemBtn.classList.add('add-checklist');
        addChecklistItemBtn.textContent = '+';

        const addPopUp = document.createElement('div');
        const addForm = document.createElement('form');
        const addInput = document.createElement('input');
        addInput.setAttribute('type', 'text');
        addInput.setAttribute('required', '');

        const addConfirmBtn = document.createElement('button');
        addConfirmBtn.textContent = 'confirm';

        const addCancelBtn = document.createElement('button');
        addCancelBtn.textContent = 'cancel';

        addForm.appendChild(addInput);
        addForm.appendChild(addConfirmBtn);
        addForm.appendChild(addCancelBtn);
        addPopUp.appendChild(addForm);

        addChecklistItemBtn.addEventListener('click', () => {
            addChecklistItemBtn.replaceWith(addPopUp);
            mainLayout.shiftLayout();
            addInput.focus();
        });

        addConfirmBtn.addEventListener('click', (e) => {
            if (addInput.checkValidity()) {
                e.preventDefault();
                const checkListItem = toDo.addChecklistItem(addInput.value);
                container.insertBefore(createCheckListItem(checkListItem, toDo), addPopUp);
                addPopUp.replaceWith(addChecklistItemBtn);

                const sort = new agnostic_draggable__WEBPACK_IMPORTED_MODULE_1__.Sortable(container, {
                    items: 'div.check-item',
                    axis: 'y',
                    containment: 'parent',
                    forcePlaceholderSize: true,
                    opacity: 0.5,
                    cursor: 'move',
                });
        
                sort.on('sort:start', () => {
                    console.log('hello!');
                });
        
                sort.on('sortable:update', () => {
                    console.log('change');
                    const checkItems = Array.from(container.querySelectorAll('div.check-item'))
                    const checkIndexes = checkItems.filter(item => !item.classList.contains('ui-sortable-placeholder')).map(item => +item.getAttribute('data-order'));
                    console.log(checkIndexes);
                    toDo.reorderCheckItems(checkIndexes);
                    _resetAttributes(Array.from(document.querySelector('div.checklist').querySelectorAll('div.check-item')).filter(item => !item.classList.contains('ui-sortable-placeholder')), 'data-order');
                });

                addForm.reset();
                mainLayout.shiftLayout();
            }
        });

        addCancelBtn.addEventListener('click', (e) => {
            e.preventDefault();
            addForm.reset();
            addPopUp.replaceWith(addChecklistItemBtn);
            mainLayout.shiftLayout();
        })

        container.appendChild(addChecklistItemBtn);


        const sort = new agnostic_draggable__WEBPACK_IMPORTED_MODULE_1__.Sortable(container, {
            items: 'div.check-item',
            axis: 'y',
            containment: 'parent',
            forcePlaceholderSize: true,
            opacity: 0.5,
            cursor: 'move',
        });

        sort.on('sort:start', () => {
            console.log('hello!');
        });

        sort.on('sortable:update', () => {
            console.log('change');
            const checkItems = Array.from(container.querySelectorAll('div.check-item'))
            const checkIndexes = checkItems.filter(item => !item.classList.contains('ui-sortable-placeholder')).map(item => +item.getAttribute('data-order'));
            console.log(checkIndexes);
            toDo.reorderCheckItems(checkIndexes);
            _resetAttributes(Array.from(document.querySelector('div.checklist').querySelectorAll('div.check-item')).filter(item => !item.classList.contains('ui-sortable-placeholder')), 'data-order');
        });

        return container;
    }

    const createToDo = function (toDo) {
        const main = document.querySelector('#main');
        const container = document.createElement('div');

        if (toDo.completed) {
            container.classList.add('checked');
        } else {
            container.classList.add('unchecked');
        }

        const buttonsBox = document.createElement('div');
        buttonsBox.classList.add('buttons-box');

        const checkBox = document.createElement('div');
        checkBox.classList.add('checkbox');

        const title = document.createElement('h4');
        title.textContent = toDo.title;
        title.classList.add('title');

        const titleBox = document.createElement('div');
        titleBox.classList.add('title-box');

        const moveIconContainer = document.createElement('div');
        moveIconContainer.style.position = 'relative';

        const moveIcon = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
        moveIcon.setAttribute('viewBox', '0 0 22 22');
        moveIcon.classList.add('move-icon');
        const moveIconTitle = document.createElement('title');
        moveIconTitle.textContent = 'gamepad';
        const moveIconPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');

        const pathOptions = [
            "M14 1V2H15V7H20V8H21V14H20V15H15V20H14V21H8V20H7V15H2V14H1V8H2V7H7V2H8V1H14M13 15H9V19H13V15Z",
            "M14 1V2H15V7H20V8H21V14H20V15H15V20H14V21H8V20H7V15H2V14H1V8H2V7H7V2H8V1H14M7 9H3V13H7V9M9 15V19H13V15H9Z",
            "M14 1V2H15V7H20V8H21V14H20V15H15V20H14V21H8V20H7V15H2V14H1V8H2V7H7V2H8V1H14M19 9H15V13H19V9M9 15V19H13V15H9Z",
            "M14 1V2H15V7H20V8H21V14H20V15H15V20H14V21H8V20H7V15H2V14H1V8H2V7H7V2H8V1H14M13 3H9V9H3V13H9V19H13V13H19V9H13V3Z",
            "M14 1V2H15V7H20V8H21V14H20V15H15V20H14V21H8V20H7V15H2V14H1V8H2V7H7V2H8V1H14M7 9H3V13H7V9Z",
            "M14 1V2H15V7H20V8H21V14H20V15H15V20H14V21H8V20H7V15H2V14H1V8H2V7H7V2H8V1H14M19 9H15V13H19V9Z",
            "M14 1V2H15V7H20V8H21V14H20V15H15V20H14V21H8V20H7V15H2V14H1V8H2V7H7V2H8V1H14M13 3H9V7H13V3Z",
            "M14 1V2H15V7H20V8H21V14H20V15H15V20H14V21H8V20H7V15H2V14H1V8H2V7H7V2H8V1H14M7 9H3V13H7V9M9 3V7H13V3H9Z",
            "M14 1V2H15V7H20V8H21V14H20V15H15V20H14V21H8V20H7V15H2V14H1V8H2V7H7V2H8V1H14M19 9H15V13H19V9M9 3V7H13V3H9Z"
        ];

        moveIconPath.setAttribute('d', pathOptions[Math.floor(Math.random() * 9)]);
        moveIcon.appendChild(moveIconTitle);
        moveIcon.appendChild(moveIconPath);

        moveIconContainer.appendChild(moveIcon);

        titleBox.appendChild(moveIconContainer);
        titleBox.appendChild(title);
        titleBox.appendChild(checkBox);

        const project = document.createElement('h5');
        project.textContent = toDo.project === null ? '' : toDo.project.name;
        project.classList.add('project');
        const description = document.createElement('p');
        description.textContent = toDo.description;
        description.classList.add('description');
        const dueDate = document.createElement('p');
        dueDate.textContent = (0,date_fns__WEBPACK_IMPORTED_MODULE_7__["default"])(toDo.dueDate, 'dd MMM yyyy');
        if ((0,date_fns__WEBPACK_IMPORTED_MODULE_8__["default"])(new Date().setHours(0, 0, 0, 0), toDo.dueDate)) {
            container.classList.add('past');
        } else {
            container.classList.remove('past');
        }
        container.setAttribute('data-priority', toDo.priority);
        dueDate.classList.add('due-date');

        const checklist = createChecklist(toDo);

        const tooltip = document.createElement('div'); 
        const tooltipText = document.createElement('span');
        tooltipText.classList.add('tooltip-text');
        tooltipText.textContent = main.hasAttribute('data-project') || main.hasAttribute('data-date') ? 'changes made to the layout on this page will not be saved' : 'changes made to the layout on this page will be saved';
        tooltip.style.display = 'none';
        tooltipText.style.color = 'black';
        tooltip.classList.add('tooltip');
        tooltip.appendChild(tooltipText);

        moveIconContainer.appendChild(tooltip);
        let timeout;

        function showTooltip () {
            tooltip.style.display = 'block';

            tooltip.style.left = '-46px';
            tooltip.style.bottom = '-43px';

            timeout = undefined;
        }

        function hideTooltip () {
            tooltip.style.display = 'none';
            if (timeout) {
                clearTimeout(timeout);
                timeout = undefined;
            }

        }

        moveIcon.addEventListener('mouseover', () => {
            timeout = setTimeout(showTooltip, 1000);
        })

        moveIcon.addEventListener('click', hideTooltip)
        moveIcon.addEventListener('mouseout', hideTooltip)

        const deleteBtn = document.createElement('button');
        deleteBtn.classList.add('delete');

        const deleteBtnIcon = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
        deleteBtnIcon.setAttribute('viewBox', '0 0 22 22');
        const deleteBtnIconTitle = document.createElement('title');
        const deleteBtnIconPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');
        deleteBtnIconTitle.textContent = 'trash';
        deleteBtnIconPath.setAttribute('d', 'M10 7V16H8V7H10M12 7H14V16H12V7M8 2H14V3H19V5H18V19H17V20H5V19H4V5H3V3H8V2M6 5V18H16V5H6Z');

        deleteBtnIcon.appendChild(deleteBtnIconTitle);
        deleteBtnIcon.appendChild(deleteBtnIconPath);

        deleteBtn.appendChild(deleteBtnIcon);

        const editBtn = document.createElement('button');
        editBtn.classList.add('edit');

        const editBtnIcon = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
        editBtnIcon.setAttribute('viewBox', '0 0 22 22');
        const editBtnIconTitle = document.createElement('title');
        const editBtnIconPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');
        editBtnIconTitle.textContent = 'pencil';
        editBtnIconPath.setAttribute('d', 'M14.06,9L15,9.94L5.92,19H5V18.08L14.06,9M17.66,3C17.41,3 17.15,3.1 16.96,3.29L15.13,5.12L18.88,8.87L20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18.17,3.09 17.92,3 17.66,3M14.06,6.19L3,17.25V21H6.75L17.81,9.94L14.06,6.19Z');

        editBtnIcon.appendChild(editBtnIconTitle);
        editBtnIcon.appendChild(editBtnIconPath);

        editBtn.appendChild(editBtnIcon);

        checkBox.addEventListener('click', () => {
            toDo.toggleComplete();
            container.classList.toggle('checked');
            container.classList.toggle('unchecked');

            Array.from(container.querySelectorAll('.check-item')).forEach((item) => {
                if (toDo.completed) {
                    item.classList.remove('unchecked');
                    item.classList.add('checked');
                } else {
                    item.classList.remove('checked');
                    item.classList.add('unchecked');
                }
            })
        }) 

        deleteBtn.addEventListener('click', () => {
            const deleteDialog = document.querySelector('dialog.delete');
            deleteDialog.showModal();

            deleteDialog.addEventListener('click', () => {
                if (deleteDialog.returnValue) {
                    List.deleteTodo(toDo);
                    const toDoItem = deleteBtn.parentElement.parentElement;
                    mainLayout.remove(toDoItem);
                    mainLayout.layout();
                    if (!main.hasChildNodes()) {
                        _renderEmptyMessage();
                        return;
                    }
                }
            }, {once: true});
        })

        editBtn.addEventListener('click', () => {
            const editDialog = document.querySelector('dialog.edit');
            const index = editBtn.parentElement.parentElement.getAttribute('data-index');
            editDialog.setAttribute('data-index', index);
            const projectSelect = editDialog.querySelector('select');
            projectSelect.textContent = '';
            const defaultOption = document.createElement('option');
            defaultOption.textContent = 'none';
            defaultOption.setAttribute('value', 'none');
            projectSelect.appendChild(defaultOption);
            List.getProjects().forEach((proj) => {
                const project = document.createElement('option');
                project.setAttribute('value', proj.name);
                project.textContent = proj.name;
                projectSelect.appendChild(project);
            })
            
            let toDo;
            if (main.hasAttribute('data-project')) {
                const project = List.getProjects().find((item) => item.name === main.getAttribute('data-project'));
                toDo = List.getProjectItems(project)[index];
            } else {
                console.log(List.getToDos());
                toDo = List.getToDos()[index];
            }

            const title = editDialog.querySelector('input#edit-title');
            title.defaultValue = toDo.title;
            const description = editDialog.querySelector('textarea#edit-description');
            description.defaultValue = toDo.description;
            const dueDate = editDialog.querySelector('input#edit-due-date');
            dueDate.valueAsDate = toDo.dueDate;
            const priority = toDo.priority;
            const priorities = editDialog.querySelectorAll('input[type="radio"]');
            Array.from(priorities).forEach((item) => {
                if (priority === item.value) {
                    item.setAttribute('checked', '');
                }
            });
            const project = toDo.project;
            const projects = editDialog.querySelectorAll('option');
            const none = editDialog.querySelector('option[value="none"]');
            none.setAttribute('selected', '');
            Array.from(projects).forEach((item) => {
                if (project === null) {
                    return;
                }
                if (project.name === item.textContent) {
                    item.setAttribute('selected', '');
                }
            }); 
            editDialog.showModal();
        });

        buttonsBox.appendChild(editBtn);
        buttonsBox.appendChild(deleteBtn);

        container.classList.add('to-do');
        container.append(titleBox);
        container.append(project);
        container.append(description);
        container.append(dueDate);
        container.append(checklist);
        container.append(buttonsBox);

        return container;
    }

    const createProject = function (name) {
        const main = document.querySelector('#main');

        const projectNode = document.createElement('div');
        projectNode.setAttribute('data-id', List.getProjects().length);
        const newProject = List.createProject(name);

        const moveIconContainer = document.createElement('div');

        const moveIcon = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
        moveIcon.setAttribute('viewBox', '0 0 22 22');
        moveIcon.classList.add('move-icon');
        const moveIconTitle = document.createElement('title');
        moveIconTitle.textContent = 'heart';
        const moveIconPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');

        moveIconPath.setAttribute('d', "M12 20H10V19H9V18H8V17H7V16H6V15H5V14H4V13H3V12H2V10H1V5H2V4H3V3H4V2H9V3H10V4H12V3H13V2H18V3H19V4H20V5H21V10H20V12H19V13H18V14H17V15H16V16H15V17H14V18H13V19H12V20M5 11V12H6V13H7V14H8V15H9V16H10V17H12V16H13V15H14V14H15V13H16V12H17V11H18V9H19V6H18V5H17V4H14V5H13V6H12V7H10V6H9V5H8V4H5V5H4V6H3V9H4V11H5Z");
        moveIcon.appendChild(moveIconTitle);
        moveIcon.appendChild(moveIconPath);

        moveIconContainer.appendChild(moveIcon);
        
        const popUpBtn = document.createElement('button');
        popUpBtn.classList.add('pop-up');

        const popUpBtnIcon = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
        popUpBtnIcon.setAttribute('viewBox', '0 0 24 24')
        const popUpBtnIconTitle = document.createElement('title');
        const popUpBtnIconPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');
        popUpBtnIconTitle.textContent = 'menu';
        popUpBtnIconPath.setAttribute('d', 'M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z');

        popUpBtnIcon.appendChild(popUpBtnIconTitle);
        popUpBtnIcon.appendChild(popUpBtnIconPath);

        const popUp = document.createElement('div');
        const deleteBtn = document.createElement('button');
        const editBtn = document.createElement('button');
        const editPopUp = document.createElement('div');
        const editForm = document.createElement('form');

        const projectText = document.createElement('div');
        projectText.classList.add('name');
        projectText.textContent = newProject.name;

        projectNode.classList.add('project');
        projectNode.setAttribute('data-name', newProject.name);
        projectNode.appendChild(moveIconContainer);
        projectNode.appendChild(projectText);
        projectNode.appendChild(popUpBtn);

        popUp.appendChild(deleteBtn);
        popUp.appendChild(editBtn);
        
        const nameInput = document.createElement('input');
        nameInput.setAttribute('required', '');
        nameInput.setAttribute('type', 'text');
        nameInput.setAttribute('maxlength', 14);

        const confirmBtn = document.createElement('button');
        confirmBtn.textContent = 'confirm';
        confirmBtn.setAttribute('type', 'submit');
        const cancelBtn = document.createElement('button');
        cancelBtn.textContent = 'cancel';

        editForm.appendChild(nameInput);
        editForm.appendChild(confirmBtn);
        editForm.appendChild(cancelBtn);
        editPopUp.appendChild(editForm);

        popUpBtn.appendChild(popUpBtnIcon);
        popUp.classList.add('pop-up');

        popUpBtn.addEventListener('click', () => {
            if (projectNode.contains(popUp)) {
                projectNode.removeChild(popUp);
            } else {
                const projectNodes = document.querySelectorAll('div.project');
                Array.from(projectNodes).forEach((node) => {
                    if (node.querySelector('div.pop-up')) {
                        const popUp = node.querySelector('div.pop-up');
                        node.removeChild(popUp);
                    }
                });
                projectNode.appendChild(popUp);
            }
        });

        popUpBtnIcon.addEventListener('click', (e) => {
            e.stopPropagation();
            if (projectNode.contains(popUp)) {
                projectNode.removeChild(popUp);
            } else {
                const projectNodes = document.querySelectorAll('div.project');
                Array.from(projectNodes).forEach((node) => {
                    if (node.querySelector('div.pop-up')) {
                        const popUp = node.querySelector('div.pop-up');
                        node.removeChild(popUp);
                    }
                });
                projectNode.appendChild(popUp);
            }
        })

        editBtn.textContent = 'edit';
        
        editBtn.addEventListener('click', () => {
            editPopUp.setAttribute('data-name', editBtn.parentElement.parentElement.getAttribute('data-name'));
            projectNode.replaceWith(editPopUp);
            nameInput.defaultValue = newProject.name;
            nameInput.focus();
        })

        confirmBtn.addEventListener('click', (e) => {
            const projectItem = List.getProjects().find((item) => item.name === editPopUp.getAttribute('data-name'));
            const projIndex = List.getProjects().indexOf(projectItem);
            const modifiedProjectList = List.getProjects();
            modifiedProjectList.splice(projIndex, 1)
            const projectNames = modifiedProjectList.map((item) => item.name);

            if (projectNames.includes(nameInput.value)) {
                nameInput.setCustomValidity('project name must be unique');
            }
            if (nameInput.checkValidity() && !projectNames.includes(nameInput.value)) {
                e.preventDefault();
                const oldName = projectItem.name;
                projectItem.changeName(nameInput.value);

                projectNode.setAttribute('data-name', projectItem.name);
                projectNode.querySelector('div.name').textContent = projectItem.name;

                if (main.getAttribute('data-project') === oldName) {
                    main.setAttribute('data-project', projectItem.name);
                    const projectItems = main.querySelectorAll('.to-do');
                    Array.from(projectItems).forEach((item) => {
                        item.querySelector('.project').textContent = projectItem.name;
                    });
                    _retitleMain(nameInput.value);
                } else if (!main.hasAttribute('data-project')) {
                    let index = 0;
                    Array.from(document.querySelectorAll('.to-do')).forEach((item) => {
                        const project = List.getToDos()[index].project
                        if (project !== null && project.name === projectItem.name) {
                            item.querySelector('.project').textContent = projectItem.name;
                        }
                        index++;
                    })
                }

                editForm.reset();
                editPopUp.replaceWith(projectNode);
                projectNode.removeChild(popUp);
            }
        });

        cancelBtn.addEventListener('click', () => {
            editForm.reset();
            editPopUp.replaceWith(projectNode);
            projectNode.removeChild(popUp);
        })

        projectText.addEventListener('click', () => {
            _retitleMain(newProject.name);
            main.setAttribute('data-project', newProject.name);
            main.removeAttribute('data-date');
            renderProjectItems(newProject);
            if (!main.hasChildNodes()) {
                _renderEmptyMessage();
            }
        })

        deleteBtn.textContent = 'delete';
        
        deleteBtn.addEventListener('click', () => {
            const projectItem = deleteBtn.parentElement.parentElement;
            const deleteDialog = document.querySelector('dialog.delete');

            deleteDialog.showModal();

            deleteDialog.addEventListener('close', () => {
                if (deleteDialog.returnValue) {
                    let toDoItems = main.querySelectorAll('.to-do');

                    const toRemove = Array.from(toDoItems).filter(item => item.querySelector('.project').textContent === newProject.name);
                    List.deleteProject(newProject);

                    mainLayout.remove(toRemove);

                    if (!main.hasAttribute('data-project')) {
                        mainLayout.layout();
                    } else {
                        main.removeAttribute('data-project');
                        main.removeAttribute('data-date');
                        _retitleMain('home');
                        renderAll();
                    }

                    projectItem.remove();
                    
                    _resetAttributes(Array.from(document.querySelector('div.projects').querySelectorAll('div.project')).filter(item => !item.classList.contains('ui-sortable-placeholder')), 'data-id');

                }
            }, {once: true});
            
        });
        return projectNode;
    }

    const renderAll = function () {
        _retitleMain('home');
        const main = document.querySelector('#main');
        main.textContent = '';
        List.getToDos().forEach((item) => {
            const newNode = createToDo(item);
            main.appendChild(newNode);
        })
        const toDoItems = main.querySelectorAll('div.to-do');
        _resetAttributes(Array.from(toDoItems), 'data-index');

        mainLayout = new Packery(main, {
            itemSelector: '.to-do',
            columnWidth: 250,
            gutter: 20,
        })

        main.querySelectorAll('.to-do').forEach((item) => {
            const draggie = new (draggabilly__WEBPACK_IMPORTED_MODULE_0___default())(item, {
                handle: '.move-icon',
            })
            mainLayout.bindDraggabillyEvents(draggie);
        })

        mainLayout.on('dragItemPositioned', reorderAll );
        mainLayout.on('removeComplete', reorderAll );

        if (!main.hasChildNodes()){
            _renderEmptyMessage();
            return;
        }
    }

    const renderProjectItems = function (project) {
        const main = document.querySelector('#main');
        main.textContent = '';
        List.getProjectItems(project).forEach((item) => {
            const toDo = createToDo(item);
            main.appendChild(toDo);
        })
        const toDoItems = main.querySelectorAll('div.to-do');
        _resetAttributes(Array.from(toDoItems), 'data-index');

        console.log(mainLayout);

        mainLayout = new Packery(main, {
            itemSelector: '.to-do',
            columnWidth: 250,
            gutter: 20,
        })

        main.querySelectorAll('.to-do').forEach((item) => {
            const draggie = new (draggabilly__WEBPACK_IMPORTED_MODULE_0___default())(item, {
                handle: '.move-icon',
            })
            mainLayout.bindDraggabillyEvents(draggie);
        })

        mainLayout.on('removeComplete', () => {
            if (main.hasAttribute('data-project') || main.hasAttribute('data-date')) {
                _resetAttributes(Array.from(main.querySelectorAll('.to-do')), 'data-index');
            }
        });

        if (!main.hasChildNodes()) {
            _renderEmptyMessage();
            return;
        }
    }

    function syncDataIndexes() {
        let index = 0;
        mainLayout.getItemElements().forEach((item) => {
            item.setAttribute('data-index', index);
            index++;
        })
    }

    function reorderAll () {
        const main = document.querySelector('#main');
        if (!main.hasAttribute('data-project') && !main.hasAttribute('data-date')) {
            const newIndexes = mainLayout.getItemElements().map((item) => +item.getAttribute('data-index'));
            List.reorderAll(newIndexes);
            syncDataIndexes();
            StorageController.updateStorage();
        }
    }
    
    const editToDo = function (toDo, newTitle, newDescription, newDueDate, newPriority, newProject) {
        const main = document.querySelector('#main');
        
        const oldProject = toDo.project;
        toDo.edit(newTitle, newDescription, newDueDate, newPriority, newProject);
        let toDoItem;
        if (main.hasAttribute('data-project')) {
            if (oldProject !== newProject) {
                renderProjectItems(oldProject);
                return;
            }
            let project = List.getProjects().find((item) => item.name === main.getAttribute('data-project'));
            toDoItem = main.querySelector(`.to-do[data-index="${List.getProjectItems(project).indexOf(toDo)}"]`);
        } else {
            toDoItem = main.querySelector(`.to-do[data-index="${List.getToDos().indexOf(toDo)}"]`);
        }

        toDoItem.querySelector('.title').textContent = toDo.title;
        toDoItem.querySelector('.project').textContent = toDo.project === null ? '' : toDo.project.name;
        toDoItem.querySelector('.description').textContent = toDo.description;
        toDoItem.querySelector('.due-date').textContent = (0,date_fns__WEBPACK_IMPORTED_MODULE_7__["default"])(toDo.dueDate, 'dd MMM yyyy');
        if ((0,date_fns__WEBPACK_IMPORTED_MODULE_8__["default"])(new Date().setHours(0, 0, 0, 0), toDo.dueDate)) {
            toDoItem.classList.add('past');
        } else {
            toDoItem.classList.remove('past');
        }
        
        toDoItem.setAttribute('data-priority', toDo.priority);
    }

    return {
        buildEditToDoDialog,
        buildNewToDoDialog,
        buildDeleteDialog,
        buildHeader,
        buildSidebar,
        buildMain,
        createToDo,
        createProject,
        renderAll,
        renderProjectItems,
        editToDo,
    }

})();

const DOMBuilder = (function () {
    const buildDefaultPage = function() {
        document.body.appendChild(document.createElement('header'));
        document.body.appendChild(document.createElement('aside'));
        document.body.appendChild(document.createElement('main'));
        UserInterface.buildHeader();
        UserInterface.buildMain();
        UserInterface.buildSidebar();
        UserInterface.buildNewToDoDialog();
        UserInterface.buildEditToDoDialog();
        UserInterface.buildDeleteDialog();

        window.addEventListener('click', (e) => {
            const popUpButtons = Array.from(document.querySelectorAll('button.pop-up'));
            if (!popUpButtons.includes(e.target)) {
                if (document.querySelector('div.pop-up')) {
                    const popUps = Array.from(document.querySelectorAll('div.pop-up'));
                    popUps.forEach((popUp) => {
                        popUp.remove();
                    })
                }
            }
        })
    }

    return {
        buildDefaultPage,
    }
})()

const StorageController = (function() {
    const _reduceChecklist = function (toDo) {
        const checkList = [];
        toDo.checklist.forEach((item) => {
            checkList.push(JSON.stringify(item));
        })
        return JSON.stringify(checkList);
    }

    const _reduceTodo = function (toDo) {
        return {
            title: toDo.title,
            description: toDo.description,
            dueDate: (0,date_fns__WEBPACK_IMPORTED_MODULE_9__["default"])(toDo.dueDate),
            checkList: _reduceChecklist(toDo),
            priority: toDo.priority,
            project: toDo.project === null ? "" : toDo.project.name,
            completed: toDo.completed,
        }
    }

    const _expandToDo = function (toDo) {
        const newToDo = List.createToDo(
            toDo.title, 
            toDo.description, 
            (0,date_fns__WEBPACK_IMPORTED_MODULE_10__["default"])(toDo.dueDate), 
            toDo.priority,
        )

        if (toDo.project) {
            const project = List.getProjects().find(item => item.name === toDo.project);
            List.addToDoToProject(newToDo, project);
        }

        if (toDo.completed) {
            newToDo.toggleComplete();
        }

        const checkList = JSON.parse(toDo.checkList) 
        checkList.forEach((item) => {
            const checkListItem = JSON.parse(item)
            newToDo.addChecklistItem(checkListItem.name, checkListItem.checked);
        });

        return(newToDo);
    }

    const updateStorage = function () {
        const JSONtoDos = JSON.stringify(List.getToDos().map((item) => _reduceTodo(item)));
        localStorage.setItem('toDos', JSONtoDos);

        const JSONprojects = JSON.stringify(List.getProjects().map((item) => item.name));
        localStorage.setItem('projects', JSONprojects);
    }

    const populateFromStorage = function () {
        if (localStorage.getItem('projects') && localStorage.getItem('toDos')) {
            const JSONprojects = JSON.parse(localStorage.getItem('projects'));

            const projectContainer = document.querySelector('div.project-container');

            JSONprojects.forEach((item) => {
                projectContainer.appendChild(UserInterface.createProject(item));
            });

            const JSONtoDos = JSON.parse(localStorage.getItem('toDos'));
            JSONtoDos.forEach(item => {_expandToDo(item)});

            UserInterface.renderAll();
        }

        UserInterface.renderAll();
    }

    return {
        updateStorage,
        populateFromStorage,
    }
})();

window.addEventListener('load', () => {
    DOMBuilder.buildDefaultPage();
    StorageController.populateFromStorage();
})

})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,